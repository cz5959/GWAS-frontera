for (i in range(x){
for (i in range(x)){
print(i)
}
print(i)
for (i in range(x)){
print(i)
}
for (i in range(x)){
print(i)
}
for (i in 0:x){
print(i)
}
a<-matrix(nrow=10,ncol=5)
b<-matrix(nrow=20,ncol=5)
a
x <- c(4, 1, 4, 5, 1, 6)
mtcars
df <- mtcars$mpg
df
df$mpg
len(df)
length(df)
length(mtcars$mpg)
month.days <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
names(month.days) <- month.name
month.days
names(month.days)
base <- names(month.days)
bas
base
base <- cbind(base, month.days)
base
month.days
base
base <- cbind(base, month.days)
base
cbind(paste("ba","se",sep=""),month.days)
for (i in 0:2) {
print(i)
}
print($i)
print(%i)
names <- paste("a", 1:4, sep="")
names
test$mix1 <- months
test <- matrix(c(1:12))
test
test <- matrix(r(1:12))
test <- matrix(, nrow=1,ncol=12)
test
test[,1] <- months
test <- matrix(, ncol=12)
test
test[,1] <- months
names(month.days)
month.days.names
month.days
colnames(month.days)
colnames(month.days) <- 1
mtcars
colnames(mtcars)
colnames(mtcars) <- cbind(1:11)
colnames(mtcars)
mtcars
colnames(mtcars) <- cbind(paste("mix_",1:11,sep="")
colnames(mtcars) <- cbind(paste("mix_",1:11,sep=""))
colnames(mtcars) <- cbind(paste("mix_",1:11,sep=""))
colnames(mtcars)
mtcars
mixture <- matrix(names(month.days),ncol=1)
mixture
colnames(mtcars) <- cbind("test",paste("mix_",1:10,sep=""))
colnames(mtcars)
cbind("test",paste("mix_",1:10,sep=""))
rbind("test",paste("mix_",1:10,sep=""))
cbind(paste("mix_",0:10,sep=""))
colnames(mtcars) <- cbind("test",paste("mix_",0:10,sep=""))
colnames(mtcars) <- cbind(paste("mix_",0:10,sep=""))
colnames(mtcars)
mtcars
x <- c(4, 1, 4, 5, 1, 6)
print(x)
2^2
#install.packages("mashr")
library(ashr)
library(mashr)
set.seed(1)
simdata = simple_sims(500,2,1)
data = mash_set_data(simdata$Bhat, simdata$Shat)
U.pca = cov_pca(data,5,subset=data)
U.pca = cov_pca(data,5)
strong = c(1,3,8,4,5,10)
U.pca = cov_pca(data,5,subset=strong)
strong
strong = get_significant_results(data,0.05)
strong <- 1:10; x
strong <- 1:10; strong
U.pca = cov_pca(data,5,subset=strong)
strong <- 1:100; strong
U.pca = cov_pca(data,5,subset=strong)
strong <- 1:2
U.pca = cov_pca(data,5,subset=strong)
data
str(data)
names(U.c)
U.c = cov_canonical(data)
names(U.c)
#install.packages("mashr")
library(ashr)
library(mashr)
set.seed(1)
simdata = simple_sims(500,2,1)
str(simdata)
head(simdata$Shat)
head(simdata$Bhat)
data = mash_set_data(simdata$Bhat, simdata$Shat)
str(data)
head(data$Shat)
head(data$Shat_alpha)
simdata = simple_sims(500,2,1)
str(simdata)
nrow(simdata$Bhat)
head(simdata$Bhat)
head(simdata$Shat)
simdata = simple_sims(500,2,0.5)
str(simdata)
head(simdata$Shat)
data = mash_set_data(simdata$Bhat, simdata$Shat)
m.1by1 = mash_1by1(data)
rep=10
mix <- c("equal_0_1", "f_0_1", "m_0_1", "equal_1_1", "equal_0.25_1", "equal_0.5_1", "equal_0.75_1")
for (i in 1:rep) {
if (i==1) {
mixture <- matrix(mix, ncol=1)
}
mixture <- cbind(mixture, mix)
}
mixture
colnames(mixture) <- cbind("names",paste("mix_",1:rep,sep=""))
colnames(mixture) <- cbind(paste("mix_",1:rep,sep=""))
colnames(mixture)
length(colnames(mixture))
cbind("names",paste("mix_",1:rep,sep=""))
colnames(mixture) <- rbind("names",paste("mix_",1:rep,sep=""))
cbind("names",paste("mix_",1:rep,sep=""))
rbind("names",paste("mix_",1:rep,sep=""))
set.seed(1)
simdata = simple_sims(500,2,0.5)
#install.packages("mashr")
library(ashr)
library(mashr)
set.seed(1)
simdata = simple_sims(500,2,0.5)
data = mash_set_data(simdata$Bhat, simdata$Shat)
U.c = cov_canonical(data)
print(names(U.c))
m.c = mash(data, U.c)
paste("p",1)
paste("p",1,sep="")
paste("p",1,sep="") <- pm
paste("p",1,sep="") <- U.c
assign(paste0("x", "y"), 1)
for ( i in 1:3) {
assign(paste0("x", i), i)
}
x1+x2
g_array <- array(0)
g_array[,i] <- x1
g_array[i] <- x1
for ( i in 1:3) {
assign(paste0("x", i), i)
g_array[i] <- x1
}
g_array[i] <- paste("x",1,sep="")
for ( i in 1:3) {
assign(paste0("x", i), i)
g_array[i] <- paste("x",1,sep="")
}
g_array[i]
g_array[i] <- assign(paste0("x", i), i)
for ( i in 1:3) {
g_array[i] <- assign(paste0("x", i), i)
}
test <- function(x){
y <- x+2
y2 <- x+5
}
return y, y2
test <- function(x){
y <- x+2
y2 <- x+5
return(y, y2)
}
y1,y2 <- test(2)
(y1,y2) <- test(2)
(y1,y2) <- test(2)
c(y1,y2) <- test(2)
test <- function(x){
y <- x+2
y2 <- x+5
return(list(y,y2))
}
results <- test(2)
results[1]
results[[1]]
results[[2]]
p.threshold <- c(0.001,0.05,0.1,0.2,0.3,0.4,0.5)
# Read in the phenotype file and PCs
setwd("~/Research/GWAS-frontera/1000G")
phenotype <- read.table("EUR.height", header=T)
pcs <- read.table("EUR.eigenvec", header=F)
setwd("~/Research/GWAS-frontera/GWAS_Results/height/PRS")
# add the appropriate headers (6 PCs)
colnames(pcs) <- c("FID", "IID", paste0("PC",1:6))
# merge the files
pheno <- merge(phenotype, pcs, by=c("FID", "IID"))
# calculate the null model (model with PRS) using a linear regression
# . refers to all variables
null.model <- lm(Height~., data=pheno[,!colnames(pheno)%in%c("FID","IID")])
# R2 of the null model
null.r2 <- summary(null.model)$r.squared
prs.result <- NULL
for(i in p.threshold){
prs <- read.table(paste0("EUR_female_height_prs_2.",i,".profile"), header=T)
# Merge prs with phenotype matrix - only taje FID, IID and PRS
pheno.prs <- merge(pheno, prs[,c("FID","IID", "SCORE")], by=c("FID", "IID"))
# linear regression on Height with PRS and the covariates, ignoring the FID and IID
model <- lm(Height~., data=pheno.prs[,!colnames(pheno.prs)%in%c("FID","IID")])
# model R2
model.r2 <- summary(model)$r.squared
# R2 of PRS is simply calculated as the model R2 minus the null R2
prs.r2 <- model.r2-null.r2
# We can also obtain the coeffcient and p-value of association of PRS as follow
prs.coef <- summary(model)$coeff["SCORE",]
prs.beta <- as.numeric(prs.coef[1])
prs.se <- as.numeric(prs.coef[2])
prs.p <- as.numeric(prs.coef[4])
# We can then store the results
prs.result <- rbind(prs.result, data.frame(Threshold=i, R2=prs.r2, P=prs.p, BETA=prs.beta,SE=prs.se))
}
for(i in p.threshold){
prs <- read.table(paste0("EUR_female_height_prs_2.",i,".profile"), header=T)
# Merge prs with phenotype matrix - only taje FID, IID and PRS
pheno.prs <- merge(pheno, prs[,c("FID","IID", "SCORE")], by=c("FID", "IID"))
# linear regression on Height with PRS and the covariates, ignoring the FID and IID
model <- lm(Height~., data=pheno.prs[,!colnames(pheno.prs)%in%c("FID","IID")])
# model R2
model.r2 <- summary(model)$r.squared
# R2 of PRS is simply calculated as the model R2 minus the null R2
prs.r2 <- model.r2-null.r2
# We can also obtain the coeffcient and p-value of association of PRS as follow
prs.coef <- summary(model)$coeff["SCORE",]
prs.beta <- as.numeric(prs.coef[1])
prs.se <- as.numeric(prs.coef[2])
prs.p <- as.numeric(prs.coef[4])
# We can then store the results
prs.result <- rbind(prs.result, data.frame(Threshold=i, R2=prs.r2, P=prs.p, BETA=prs.beta,SE=prs.se))
prs.residuals <<- rbind(prs.residuals, summary(model)$residuals)
}
prs.residuals <- NULL
for(i in p.threshold){
prs <- read.table(paste0("EUR_female_height_prs_2.",i,".profile"), header=T)
# Merge prs with phenotype matrix - only taje FID, IID and PRS
pheno.prs <- merge(pheno, prs[,c("FID","IID", "SCORE")], by=c("FID", "IID"))
# linear regression on Height with PRS and the covariates, ignoring the FID and IID
model <- lm(Height~., data=pheno.prs[,!colnames(pheno.prs)%in%c("FID","IID")])
# model R2
model.r2 <- summary(model)$r.squared
# R2 of PRS is simply calculated as the model R2 minus the null R2
prs.r2 <- model.r2-null.r2
# We can also obtain the coeffcient and p-value of association of PRS as follow
prs.coef <- summary(model)$coeff["SCORE",]
prs.beta <- as.numeric(prs.coef[1])
prs.se <- as.numeric(prs.coef[2])
prs.p <- as.numeric(prs.coef[4])
# We can then store the results
prs.result <- rbind(prs.result, data.frame(Threshold=i, R2=prs.r2, P=prs.p, BETA=prs.beta,SE=prs.se))
prs.residuals <<- rbind(prs.residuals, summary(model)$residuals)
}
for(i in p.threshold){
prs <- read.table(paste0("EUR_female_height_prs_2.",i,".profile"), header=T)
# Merge prs with phenotype matrix - only taje FID, IID and PRS
pheno.prs <- merge(pheno, prs[,c("FID","IID", "SCORE")], by=c("FID", "IID"))
# linear regression on Height with PRS and the covariates, ignoring the FID and IID
model <- lm(Height~., data=pheno.prs[,!colnames(pheno.prs)%in%c("FID","IID")])
# model R2
model.r2 <- summary(model)$r.squared
# R2 of PRS is simply calculated as the model R2 minus the null R2
prs.r2 <- model.r2-null.r2
# We can also obtain the coeffcient and p-value of association of PRS as follow
prs.coef <- summary(model)$coeff["SCORE",]
prs.beta <- as.numeric(prs.coef[1])
prs.se <- as.numeric(prs.coef[2])
prs.p <- as.numeric(prs.coef[4])
# We can then store the results
prs.result <- rbind(prs.result, data.frame(Threshold=i, R2=prs.r2, P=prs.p, BETA=prs.beta,SE=prs.se))
prs.residuals <<- rbind(prs.residuals, summary(model)$residuals)
assign("a", "new", envir = .GlobalEnv)
}
a
sex="male"
for(i in p.threshold){
prs <- read.table(paste0("EUR_female_height_prs_2.",i,".profile"), header=T)
# Merge prs with phenotype matrix - only taje FID, IID and PRS
pheno.prs <- merge(pheno, prs[,c("FID","IID", "SCORE")], by=c("FID", "IID"))
# linear regression on Height with PRS and the covariates, ignoring the FID and IID
model <- lm(Height~., data=pheno.prs[,!colnames(pheno.prs)%in%c("FID","IID")])
# model R2
model.r2 <- summary(model)$r.squared
# R2 of PRS is simply calculated as the model R2 minus the null R2
prs.r2 <- model.r2-null.r2
# We can also obtain the coeffcient and p-value of association of PRS as follow
prs.coef <- summary(model)$coeff["SCORE",]
prs.beta <- as.numeric(prs.coef[1])
prs.se <- as.numeric(prs.coef[2])
prs.p <- as.numeric(prs.coef[4])
# We can then store the results
prs.result <- rbind(prs.result, data.frame(Threshold=i, R2=prs.r2, P=prs.p, BETA=prs.beta,SE=prs.se))
prs.residuals <<- rbind(prs.residuals, summary(model)$residuals)
assign(sex, "new", envir = .GlobalEnv)
}
sex
assign(paste0("test",sex), "new", envir = .GlobalEnv)
for(i in p.threshold){
prs <- read.table(paste0("EUR_female_height_prs_2.",i,".profile"), header=T)
# Merge prs with phenotype matrix - only taje FID, IID and PRS
pheno.prs <- merge(pheno, prs[,c("FID","IID", "SCORE")], by=c("FID", "IID"))
# linear regression on Height with PRS and the covariates, ignoring the FID and IID
model <- lm(Height~., data=pheno.prs[,!colnames(pheno.prs)%in%c("FID","IID")])
# model R2
model.r2 <- summary(model)$r.squared
# R2 of PRS is simply calculated as the model R2 minus the null R2
prs.r2 <- model.r2-null.r2
# We can also obtain the coeffcient and p-value of association of PRS as follow
prs.coef <- summary(model)$coeff["SCORE",]
prs.beta <- as.numeric(prs.coef[1])
prs.se <- as.numeric(prs.coef[2])
prs.p <- as.numeric(prs.coef[4])
# We can then store the results
prs.result <- rbind(prs.result, data.frame(Threshold=i, R2=prs.r2, P=prs.p, BETA=prs.beta,SE=prs.se))
prs.residuals <<- rbind(prs.residuals, summary(model)$residuals)
assign(paste0("test",sex), "new", envir = .GlobalEnv)
}
testmale
for(i in p.threshold){
prs <- read.table(paste0("EUR_female_height_prs_2.",i,".profile"), header=T)
# Merge prs with phenotype matrix - only taje FID, IID and PRS
pheno.prs <- merge(pheno, prs[,c("FID","IID", "SCORE")], by=c("FID", "IID"))
# linear regression on Height with PRS and the covariates, ignoring the FID and IID
model <- lm(Height~., data=pheno.prs[,!colnames(pheno.prs)%in%c("FID","IID")])
# model R2
model.r2 <- summary(model)$r.squared
# R2 of PRS is simply calculated as the model R2 minus the null R2
prs.r2 <- model.r2-null.r2
# We can also obtain the coeffcient and p-value of association of PRS as follow
prs.coef <- summary(model)$coeff["SCORE",]
prs.beta <- as.numeric(prs.coef[1])
prs.se <- as.numeric(prs.coef[2])
prs.p <- as.numeric(prs.coef[4])
# We can then store the results
prs.result <- rbind(prs.result, data.frame(Threshold=i, R2=prs.r2, P=prs.p, BETA=prs.beta,SE=prs.se))
prs.residuals <<- rbind(prs.residuals, summary(model)$residuals)
assign(paste0("residuals_",sex), rbind(paste0("residuals_",sex), summary(model)$residuals), envir = .GlobalEnv)
}
residuals_male
length(p.threshold)
nrow(residuals_male)
length(residuals_male)
str(summary(model)$residuals)
str(prs.coef)
str(prs.se)
str(pheno)
assign(paste0("residuals_",sex),NULL)
for(i in p.threshold){
prs <- read.table(paste0("EUR_female_height_prs_2.",i,".profile"), header=T)
# Merge prs with phenotype matrix - only taje FID, IID and PRS
pheno.prs <- merge(pheno, prs[,c("FID","IID", "SCORE")], by=c("FID", "IID"))
# linear regression on Height with PRS and the covariates, ignoring the FID and IID
model <- lm(Height~., data=pheno.prs[,!colnames(pheno.prs)%in%c("FID","IID")])
# model R2
model.r2 <- summary(model)$r.squared
# R2 of PRS is simply calculated as the model R2 minus the null R2
prs.r2 <- model.r2-null.r2
# We can also obtain the coeffcient and p-value of association of PRS as follow
prs.coef <- summary(model)$coeff["SCORE",]
prs.beta <- as.numeric(prs.coef[1])
prs.se <- as.numeric(prs.coef[2])
prs.p <- as.numeric(prs.coef[4])
# We can then store the results
prs.result <- rbind(prs.result, data.frame(Threshold=i, R2=prs.r2, P=prs.p, BETA=prs.beta,SE=prs.se))
prs.residuals <<- rbind(prs.residuals, summary(model)$residuals)
assign(paste0("residuals_",sex), rbind(paste0("residuals_",sex), summary(model)$residuals), envir = .GlobalEnv)
}
str(residuals_male)
prs.result <- NULL
for(i in p.threshold){
prs <- read.table(paste0("EUR_female_height_prs_2.",i,".profile"), header=T)
# Merge prs with phenotype matrix - only taje FID, IID and PRS
pheno.prs <- merge(pheno, prs[,c("FID","IID", "SCORE")], by=c("FID", "IID"))
# linear regression on Height with PRS and the covariates, ignoring the FID and IID
model <- lm(Height~., data=pheno.prs[,!colnames(pheno.prs)%in%c("FID","IID")])
# model R2
model.r2 <- summary(model)$r.squared
# R2 of PRS is simply calculated as the model R2 minus the null R2
prs.r2 <- model.r2-null.r2
# We can also obtain the coeffcient and p-value of association of PRS as follow
prs.coef <- summary(model)$coeff["SCORE",]
prs.residuals <- summary(model)$residuals
prs.beta <- as.numeric(prs.coef[1])
prs.se <- as.numeric(prs.coef[2])
prs.p <- as.numeric(prs.coef[4])
# We can then store the results
prs.result <- rbind(prs.result, data.frame(Threshold=i, R2=prs.r2, P=prs.p, BETA=prs.beta,SE=prs.se))
}
head(prs.residuals)
length(prs.residuals)
prs.result$residuals <- prs.residuals
for(i in p.threshold){
prs <- read.table(paste0("EUR_female_height_prs_2.",i,".profile"), header=T)
# Merge prs with phenotype matrix - only taje FID, IID and PRS
pheno.prs <- merge(pheno, prs[,c("FID","IID", "SCORE")], by=c("FID", "IID"))
# linear regression on Height with PRS and the covariates, ignoring the FID and IID
model <- lm(Height~., data=pheno.prs[,!colnames(pheno.prs)%in%c("FID","IID")])
# model R2
model.r2 <- summary(model)$r.squared
# R2 of PRS is simply calculated as the model R2 minus the null R2
prs.r2 <- model.r2-null.r2
# We can also obtain the coeffcient and p-value of association of PRS as follow
prs.coef <- summary(model)$coeff["SCORE",]
prs.residuals <- summary(model)$residuals
prs.beta <- as.numeric(prs.coef[1])
prs.se <- as.numeric(prs.coef[2])
prs.p <- as.numeric(prs.coef[4])
# We can then store the results
prs.result <- rbind(prs.result, data.frame(Threshold=i, R2=prs.r2, P=prs.p, BETA=prs.beta,SE=prs.se))
prs.result$residuals <- prs.residuals
}
prs.residuals <- NULL
for(i in p.threshold){
prs <- read.table(paste0("EUR_female_height_prs_2.",i,".profile"), header=T)
# Merge prs with phenotype matrix - only taje FID, IID and PRS
pheno.prs <- merge(pheno, prs[,c("FID","IID", "SCORE")], by=c("FID", "IID"))
# linear regression on Height with PRS and the covariates, ignoring the FID and IID
model <- lm(Height~., data=pheno.prs[,!colnames(pheno.prs)%in%c("FID","IID")])
# model R2
model.r2 <- summary(model)$r.squared
# R2 of PRS is simply calculated as the model R2 minus the null R2
prs.r2 <- model.r2-null.r2
# We can also obtain the coeffcient and p-value of association of PRS as follow
prs.coef <- summary(model)$coeff["SCORE",]
prs.beta <- as.numeric(prs.coef[1])
prs.se <- as.numeric(prs.coef[2])
prs.p <- as.numeric(prs.coef[4])
# We can then store the results
prs.result <- rbind(prs.result, data.frame(Threshold=i, R2=prs.r2, P=prs.p, BETA=prs.beta,SE=prs.se))
prs.residuals <- rbind(prs.residuals, summary(model)$residuals)
}
prs_summary <- list(prs.result, prs.residuals)
str(prs_summary)
prs_summary <- list("results" = prs.result, "residuals" = prs.residuals)
str(prs_summary)
prs.result <- NULL
prs.residuals <- NULL
for(i in p.threshold){
prs <- read.table(paste0("EUR_female_height_prs_2.",i,".profile"), header=T)
# Merge prs with phenotype matrix - only taje FID, IID and PRS
pheno.prs <- merge(pheno, prs[,c("FID","IID", "SCORE")], by=c("FID", "IID"))
# linear regression on Height with PRS and the covariates, ignoring the FID and IID
model <- lm(Height~., data=pheno.prs[,!colnames(pheno.prs)%in%c("FID","IID")])
# model R2
model.r2 <- summary(model)$r.squared
# R2 of PRS is simply calculated as the model R2 minus the null R2
prs.r2 <- model.r2-null.r2
# We can also obtain the coeffcient and p-value of association of PRS as follow
prs.coef <- summary(model)$coeff["SCORE",]
prs.beta <- as.numeric(prs.coef[1])
prs.se <- as.numeric(prs.coef[2])
prs.p <- as.numeric(prs.coef[4])
# We can then store the results
prs.result <- rbind(prs.result, data.frame(Threshold=i, R2=prs.r2, P=prs.p, BETA=prs.beta,SE=prs.se))
prs.residuals <- rbind(prs.residuals, summary(model)$residuals)
}
prs_summary <- list("results" = prs.result, "residuals" = prs.residuals)
str(prs_summary)
# Best result is:
print(prs.result[which.max(prs.result$R2),])
pm_all <- data.frame(matrix(ncol = 2, nrow = 0))
help(data.frame)
pm_all <- data.frame(matrix(ncol = 2, nrow = 0), col.names = c("x","y"))
pm_all <- data.frame("male"=NULL,"female"=NULL)
pm_all
pm_all <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(pm_all) <- header
header <- c("female", "male")
pm_all <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(pm_all) <- header
pm_all
header <- c("female", "male")
pm_all <- data.frame(matrix(ncol = 2, nrow = 0)) ; colnames(pm_all) <- header
pm_all
head(pheno)
head( pheno[order(Height)])
head( pheno[order(pheno$Height)])
head( pheno[,order(pheno$Height)])
head( pheno[order(pheno$Height),])
head( pheno[order(pheno$Height),3])
head( pheno[order(pheno$Height),Height])
head( pheno[order(pheno$Height),3])
test <- head( pheno[order(pheno$Height),3])
head(cbind(test,test))
