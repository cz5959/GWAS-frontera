theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
facet_wrap(~variable, ncol=1) +
geom_text(data, aes(label=pheno)) +
theme_classic() + scale_color_npg()
#plot scatter
ggplot(corrs_long, aes(x=x_val, y=value)) +
geom_point() +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
facet_wrap(~variable, ncol=1) +
geom_text(aes(x=x_val, y=value, label=pheno)) +
theme_classic() + scale_color_npg()
#plot scatter
ggplot(corrs_long, aes(x=x_val, y=value)) +
geom_point() +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
facet_wrap(~variable, ncol=1) +
geom_text_repel(aes(x=x_val, y=value, label=pheno)) +
theme_classic() + scale_color_npg()
#plot scatter
ggplot(corrs_long, aes(x=x_val, y=value)) +
geom_point() +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
facet_wrap(~variable, ncol=1) +
geom_repel_text(aes(x=x_val, y=value, label=pheno)) +
theme_classic() + scale_color_npg()
library(ggrepel)
#plot scatter
ggplot(corrs_long, aes(x=x_val, y=value)) +
geom_point() +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
facet_wrap(~variable, ncol=1) +
geom_repel_text(aes(x=x_val, y=value, label=pheno)) +
theme_classic() + scale_color_npg()
#plot scatter
ggplot(corrs_long, aes(x=x_val, y=value)) +
geom_point() +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
facet_wrap(~variable, ncol=1) +
geom_text_repel(aes(x=x_val, y=value, label=pheno)) +
theme_classic() + scale_color_npg()
#plot scatter
ggplot(corrs_long, aes(x=x_val, y=value, color=Sex)) +
geom_point() +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg()
#plot scatter
ggplot(corrs_long, aes(x=x_val, y=value, color=variable)) +
geom_point() +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg()
#plot scatter
ggplot(corrs_long, aes(x=x_val, y=value, color=variable)) +
geom_point() +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation", color="Sex") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg()
#plot scatter
ggplot(corrs_long, aes(x=x_val, y=value, color=variable)) +
geom_bar() +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation", color="Sex") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg()
#plot scatter
ggplot(corrs_long, aes(x=x_val, y=value, color=variable)) +
geom_point() +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation", color="Sex") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg()
#plot scatter
ggplot(corrs_long, aes(x=x_val, y=value, color=variable)) +
geom_point(size=4) +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation", color="Sex") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg()
#plot scatter
ggplot(corrs_long, aes(x=x_val, y=value, color=variable)) +
geom_point(size=3) +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation", color="Sex") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg()
#plot scatter
ggplot(corrs_long, aes(x=x_val, y=value, color=variable)) +
geom_col() +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation", color="Sex") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg()
#plot scatter
ggplot(corrs_long, aes(x=pheno, y=value, color=variable)) +
geom_col() +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation", color="Sex") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg()
#plot scatter
ggplot(corrs_long, aes(x=pheno, y=value, color=variable, group=variable)) +
geom_col() +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation", color="Sex") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg()
#plot scatter
ggplot(corrs_long, aes(x=pheno, y=value, color=variable, group=variable)) +
geom_point() +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation", color="Sex") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg()
#plot scatter
ggplot(corrs_long, aes(x=pheno, y=value, color=variable)) +
geom_bar(position="dodge", stat="identity") +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation", color="Sex") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg()
#plot scatter
ggplot(corrs_long, aes(x=pheno, y=value, fill=variable)) +
geom_bar(position="dodge", stat="identity") +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation", color="Sex") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg()
#plot scatter
ggplot(corrs_long, aes(x=pheno, y=value, fill=variable)) +
geom_bar(position="dodge", stat="identity") +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation", color="Sex") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic()
#plot scatter
ggplot(corrs_long, aes(x=pheno, y=value, fill=variable)) +
geom_bar(position="dodge", stat="identity") +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation", color="Sex") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic()
#plot scatter
ggplot(corrs_long, aes(x=pheno, y=value, fill=variable)) +
geom_bar(position="dodge", stat="identity") +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation", color="Sex") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg()
#plot scatter
ggplot(corrs_long, aes(x=pheno, y=value, fill=variable)) +
geom_bar(position="dodge", stat="identity") +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation", color="Sex") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12))
#plot scatter
ggplot(corrs_long, aes(x=pheno, y=value, fill=variable)) +
geom_bar(position="dodge", stat="identity") +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation", color="Sex") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg()
#plot scatter
ggplot(corrs_long, aes(x=pheno, y=value, fill=variable)) +
geom_bar(position="dodge", stat="identity") +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation", fill="Sex") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg()
#plot scatter
ggplot(corrs_long, aes(x=pheno, y=value, fill=variable)) +
geom_bar(position="dodge", stat="identity") +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation", fill="Sex") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg() +
coord_flip()
#plot scatter
ggplot(corrs_long, aes(x=pheno, y=value, fill=variable)) +
geom_bar(position="dodge", stat="identity") +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation", fill="Sex") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
coord_flip()
theme_classic() + scale_color_npg() +
coord_flip
#plot scatter
ggplot(corrs_long, aes(x=pheno, y=value, fill=variable)) +
geom_bar(position="dodge", stat="identity") +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation", fill="Sex") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg() +
coord_flip
#plot scatter
ggplot(corrs_long, aes(x=pheno, y=value, fill=variable)) +
geom_bar(position="dodge", stat="identity") +
labs(title=paste0("Correlation Between Pheno/PGS \n and Testosterone"), x="Phenotype", y="Correlation", fill="Sex") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg() +
coord_flip
#plot scatter
ggplot(corrs_long, aes(x=pheno, y=value, fill=variable)) +
geom_bar(position="dodge", stat="identity") +
labs(title=paste0("Correlation Between Pheno/PGS \n and Testosterone"), x="Phenotype", y="Correlation", fill="Sex") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg() +
coord_flip()
#plot scatter
ggplot(corrs_long, aes(x=pheno, y=value, fill=variable)) +
geom_bar(position="dodge", stat="identity") +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation", fill="Sex") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg() +
coord_flip()
head(male_cor)
male_cor
male_cor$conf.int[2]
pheno_list <- c("height","bmi","RBC_count","IGF1","creatinine","weight","calcium",
"protein_total","whole_body_fat_mass","urate","arm_fatfree_mass_L",
"arm_fatfree_mass_R","wth_bmi_adj","diastolicBP_auto","systolicBP_auto")
# get lm results from each testosterone bin
bin_fun <- function(data, n, sex) {
intervals = seq(0,nrow(data),nrow(data)/n)
cuts <- cut(1:nrow(data), breaks = intervals)
results <- NULL
for (i in 1:n) {
# linear regression
bin <- data[cuts == levels(cuts)[i],]
model <- lm(paste0("pheno ~ SCORE"), data = bin)
beta <- model$coefficients[2]
stderror <- summary(model)$coefficients[2,2]
T_mean <- mean(bin$testosterone)
results <- rbind(results, data.frame(Testosterone=T_mean, Beta=beta, Error=stderror, Sex=sex))
}
return(results)
}
get_corr <- function(data) {
# correlation between Beta and testosterone
for (sex in c("male", "female")) {
data_sub <- data[data$Sex == sex,]
corr <- cor.test(data_sub$Testosterone, data_sub$Beta)
corr_est <- corr$estimate
corr_err <- corr$conf.int[2] - corr_est
}
corrs_row <- data.frame(Pheno=pheno, Est=corr_est, Err=corr_err, Sex=sex)
return(corrs_row)
}
corrs_result <- NULL
corrs_overlap <- NULL
for (pheno in pheno_list) {
# phenotype
setwd("~/Research/GWAS-frontera/Phenotypes")
df_testosterone <- read.csv("pheno_testosterone.txt", sep="\t", colClasses = c("NULL","integer","numeric"))
df_pheno <- read.csv(paste0("pheno_",pheno,".txt"), sep="\t", colClasses = c("NULL","integer","numeric"))
df_sex <- read.csv("sex_ids.txt", sep="\t")
colnames(df_pheno) <- c('IID','pheno')
# PGS scores
setwd(paste0("~/Research/GWAS-frontera/GWAS_results/",pheno))
file_name <- list.files(pattern="both_sex_additive_")
df_both <- read.csv(file_name,sep="", colClasses= c("NULL","integer",rep("NULL",3),"numeric"))
# merge dataframes
df <- merge(merge(df_testosterone, df_sex, by='IID'), df_pheno, by='IID')
df <- merge(df,df_both,by='IID')
# order by testosterone
df <- df[order(df$testosterone),]
# label then split by sex
df$sex[df$sex == 1] <- 'male'
df$sex[df$sex == 0] <- 'female'
df_m <- df[df$sex == 'male',]
df_f <- df[df$sex == 'female',]
# call function to get betas for each bin
m_results <- bin_fun(df_m,10,'male')
f_results <- bin_fun(df_f,10,'female')
results <- rbind(m_results, f_results)
# correlation between Beta and testosterone
corrs_result <- rbind(corrs_result, get_corr(results))
}
corrs_long <- melt(corrs_result, id.vars=c("pheno"))
corrs_long <- corrs_long[order(corrs_long$pheno),]
head(corrs_result)
corrs_result <- corrs_result[order(corrs_result$Pheno),]
corrs_result$x_val <- 1:nrow(corrs_result)
head(corrs_result)
#plot scatter
ggplot(corrs_result, aes(x=Pheno, y=Est, fill=Sex)) +
geom_bar(position="dodge", stat="identity") +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg() +
coord_flip()
#plot scatter
ggplot(corrs_result, aes(x=Pheno, y=Est, fill=Sex)) +
geom_bar(position="dodge", stat="identity") +
geom_errorbar(aes(ymin=Est-Err, ymax=Est+Err), alpha= 0.4, show.legend = TRUE) +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg() +
coord_flip()
#plot scatter
ggplot(corrs_result, aes(x=Pheno, y=Est, fill=Sex)) +
geom_bar(position="dodge", stat="identity") +
geom_errorbar(aes(ymin=Est-Err, ymax=Est+Err), show.legend = TRUE) +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg() +
coord_flip()
ha= 0.4
#plot scatter
ggplot(corrs_result, aes(x=Pheno, y=Est, fill=Sex)) +
geom_bar(position="dodge", stat="identity") +
geom_errorbar(aes(ymin=Est-Err, ymax=Est+Err), alpha= 0.4, show.legend = TRUE) +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg() +
coord_flip()
head(corrs_result)
tail(corrs_result)
# get lm results from each testosterone bin
bin_fun <- function(data, n, sex) {
intervals = seq(0,nrow(data),nrow(data)/n)
cuts <- cut(1:nrow(data), breaks = intervals)
results <- NULL
for (i in 1:n) {
# linear regression
bin <- data[cuts == levels(cuts)[i],]
model <- lm(paste0("pheno ~ SCORE"), data = bin)
beta <- model$coefficients[2]
stderror <- summary(model)$coefficients[2,2]
T_mean <- mean(bin$testosterone)
results <- rbind(results, data.frame(Testosterone=T_mean, Beta=beta, Error=stderror, Sex=sex))
}
return(results)
}
return(corrs_row)
corrs_result <- NULL
corrs_overlap <- NULL
for (pheno in pheno_list) {
# phenotype
setwd("~/Research/GWAS-frontera/Phenotypes")
df_testosterone <- read.csv("pheno_testosterone.txt", sep="\t", colClasses = c("NULL","integer","numeric"))
df_pheno <- read.csv(paste0("pheno_",pheno,".txt"), sep="\t", colClasses = c("NULL","integer","numeric"))
df_sex <- read.csv("sex_ids.txt", sep="\t")
colnames(df_pheno) <- c('IID','pheno')
# PGS scores
setwd(paste0("~/Research/GWAS-frontera/GWAS_results/",pheno))
file_name <- list.files(pattern="both_sex_additive_")
df_both <- read.csv(file_name,sep="", colClasses= c("NULL","integer",rep("NULL",3),"numeric"))
# merge dataframes
df <- merge(merge(df_testosterone, df_sex, by='IID'), df_pheno, by='IID')
df <- merge(df,df_both,by='IID')
# order by testosterone
df <- df[order(df$testosterone),]
# label then split by sex
df$sex[df$sex == 1] <- 'male'
df$sex[df$sex == 0] <- 'female'
df_m <- df[df$sex == 'male',]
df_f <- df[df$sex == 'female',]
# call function to get betas for each bin
m_results <- bin_fun(df_m,10,'male')
f_results <- bin_fun(df_f,10,'female')
results <- rbind(m_results, f_results)
# correlation between Beta and testosterone
corrs_result <- rbind(corrs_result, get_corr(results))
}
corrs_result <- corrs_result[order(corrs_result$Pheno),]
corrs_result$x_val <- 1:nrow(corrs_result)
tail(corrs_result)
#plot scatter
ggplot(corrs_result, aes(x=Pheno, y=Est, fill=Sex)) +
geom_bar(position="dodge", stat="identity") +
geom_errorbar(aes(ymin=Est-Err, ymax=Est+Err), alpha= 0.4, show.legend = TRUE) +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg() +
coord_flip()
tail(corrs_result)
head(corrs_result)
corrs_row
get_corr(results)
get_corr <- function(data) {
# correlation between Beta and testosterone
corrs_row <- NULL
for (sex in c("male", "female")) {
data_sub <- data[data$Sex == sex,]
corr <- cor.test(data_sub$Testosterone, data_sub$Beta)
corr_est <- corr$estimate
corr_err <- corr$conf.int[2] - corr_est
corrs_row <- rbind(corrs_row, data.frame(Pheno=pheno, Est=corr_est, Err=corr_err, Sex=sex))
print(corrs_row)
}
return(corrs_row)
}
get_corr(results)
corrs_row <- rbind(corrs_row, data.frame(Pheno=pheno, Est=corr_est, Err=corr_err, Sex=sex))
get_corr <- function(data) {
# correlation between Beta and testosterone
corrs_row <- NULL
for (sex in c("male", "female")) {
data_sub <- data[data$Sex == sex,]
corr <- cor.test(data_sub$Testosterone, data_sub$Beta)
corr_est <- corr$estimate
corr_err <- corr$conf.int[2] - corr_est
corrs_row <- rbind(corrs_row, data.frame(Pheno=pheno, Est=corr_est, Err=corr_err, Sex=sex))
}
return(corrs_row)
}
corrs_result <- NULL
for (pheno in pheno_list) {
# phenotype
setwd("~/Research/GWAS-frontera/Phenotypes")
df_testosterone <- read.csv("pheno_testosterone.txt", sep="\t", colClasses = c("NULL","integer","numeric"))
df_pheno <- read.csv(paste0("pheno_",pheno,".txt"), sep="\t", colClasses = c("NULL","integer","numeric"))
df_sex <- read.csv("sex_ids.txt", sep="\t")
colnames(df_pheno) <- c('IID','pheno')
# PGS scores
setwd(paste0("~/Research/GWAS-frontera/GWAS_results/",pheno))
file_name <- list.files(pattern="both_sex_additive_")
df_both <- read.csv(file_name,sep="", colClasses= c("NULL","integer",rep("NULL",3),"numeric"))
# merge dataframes
df <- merge(merge(df_testosterone, df_sex, by='IID'), df_pheno, by='IID')
df <- merge(df,df_both,by='IID')
# order by testosterone
df <- df[order(df$testosterone),]
# label then split by sex
df$sex[df$sex == 1] <- 'male'
df$sex[df$sex == 0] <- 'female'
df_m <- df[df$sex == 'male',]
df_f <- df[df$sex == 'female',]
# call function to get betas for each bin
m_results <- bin_fun(df_m,10,'male')
f_results <- bin_fun(df_f,10,'female')
results <- rbind(m_results, f_results)
# correlation between Beta and testosterone
corrs_result <- rbind(corrs_result, get_corr(results))
}
corrs_result <- corrs_result[order(corrs_result$Pheno),]
corrs_result$x_val <- 1:nrow(corrs_result)
head(corrs_result)
#plot scatter
ggplot(corrs_result, aes(x=Pheno, y=Est, fill=Sex)) +
geom_bar(position="dodge", stat="identity") +
geom_errorbar(aes(ymin=Est-Err, ymax=Est+Err), alpha= 0.4, show.legend = TRUE) +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg() +
coord_flip()
#plot scatter
ggplot(corrs_result, aes(x=Pheno, y=Est, fill=Sex)) +
geom_bar(position="dodge", stat="identity") +
geom_errorbar(aes(ymin=Est-Err, ymax=Est+Err), alpha= 0.4, show.legend = TRUE, position="dodge",stat="identity") +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg() +
coord_flip()
#plot scatter
ggplot(corrs_result, aes(x=Pheno, y=Est, fill=Sex)) +
geom_bar(position="dodge", stat="identity") +
geom_errorbar(aes(ymin=Est-Err, ymax=Est+Err), alpha= 0.4, position="dodge",stat="identity") +
labs(title=paste0("Correlation Between Pheno/PGS and Testosterone"), x="Phenotype", y="Correlation") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=20),
legend.title=element_text(size=14), legend.text=element_text(size=12)) +
theme_classic() + scale_color_npg() +
coord_flip()
qbinom(allele_freq, 2 )
allele_freq <- c(0.1, 0.2, 0.1, 0.5, 0.3, 0.8, 0.3)
qbinom(allele_freq, 2 )
rbinom(n=2, size=1, prob=0.5)
rbinom(n=2, size=2, prob=0.5)
rbinom(n=2, size=5, prob=0.5)
rbinom(n=2, size=5, prob=0.5)
rbinom(n=2, size=5, prob=0.5)
rbinom(n=2, size=5, prob=0.5)
rbinom(n=2, size=5, prob=0.5)
rbinom(n=2, size=1, prob=0.5)
rbinom(n=2, size=1, prob=allele_freq)
rbinom(n=2, size=1, prob=allele_freq)
rbinom(n=2, size=1, prob=allele_freq)
rbinom(n=2, size=1, prob=allele_freq)
rbinom(n=2, size=1, prob=allele_freq)
rbinom(n=2, size=1, prob=allele_freq)
rbinom(n=2, size=1, prob=allele_freq)
rbinom(n=2, size=1, prob=allele_freq)
rbinom(n=2, size=1, prob=allele_freq)
rbinom(n=2, size=1, prob=allele_freq)
rbinom(n=2, size=1, prob=allele_freq)
rbinom(n=2, size=1, prob=allele_freq)
rbinom(n=2, size=1, prob=allele_freq)
