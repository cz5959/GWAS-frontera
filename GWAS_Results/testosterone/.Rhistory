return(df)
}
##
df_ave <- prepare_df(df_values[2:nrow(df_values),c(2,3,4)])
df_null <- prepare_df(df_values[1,c(2,3,4)])
df_null$Mean <- as.numeric(df_null$Mean)
df_ave$Mean <- as.numeric(df_ave$Mean)
head(df_values)
big <- ggplot(df_ave, aes(x= effect, y= correlation, fill= Mean)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(Mean,2)), color= "white", size= 4) +
scale_y_continuous(expand=c(0,0)) +
labs(title="Weights of Hypothesis Matrices", xlab="Magnitude", ylab="Correlation") +
theme_pubclean() +
theme(axis.text=element_text(size=12), legend.position = "none") +
scale_fill_material("blue-grey")
small <- ggplot(df_null, aes(x= 0, y= 0, fill= Mean)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(Mean,3)), color= "white", size= 4) +
scale_y_continuous(expand=c(0,0)) +
labs(title="Weight of No Effect Matrice", xlab="Magnitude", ylab="Correlation") +
theme_pubclean() +
theme(axis.text=element_blank(), axis.title=element_blank(), legend.position = "none",
axis.ticks = element_blank(), plot.title = element_text(size=10)) +
scale_fill_material("blue-grey")
lay <- rbind( c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(2,3,3,3))
p <- gridExtra::grid.arrange(big, small, ncol=1, layout_matrix=lay)
big <- ggplot(df_ave, aes(x= effect, y= correlation, fill= Mean)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(Mean,3)), color= "white", size= 4) +
scale_y_continuous(expand=c(0,0)) +
labs(title="Weights of Hypothesis Matrices", xlab="Magnitude", ylab="Correlation") +
theme_pubclean() +
theme(axis.text=element_text(size=12), legend.position = "none") +
scale_fill_material("blue-grey")
small <- ggplot(df_null, aes(x= 0, y= 0, fill= Mean)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(Mean,3)), color= "white", size= 4) +
scale_y_continuous(expand=c(0,0)) +
labs(title="Weight of No Effect Matrice", xlab="Magnitude", ylab="Correlation") +
theme_pubclean() +
theme(axis.text=element_blank(), axis.title=element_blank(), legend.position = "none",
axis.ticks = element_blank(), plot.title = element_text(size=10)) +
scale_fill_material("blue-grey")
lay <- rbind( c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(2,3,3,3))
p <- gridExtra::grid.arrange(big, small, ncol=1, layout_matrix=lay)
# simulation
setwd("~/Research/GWAS-frontera/mash/simulation")
df2 <- read.csv("100_0.5_1.5.txt", sep="\t")
df2 <- data.frame(cbind(df$mix_0, df2$x))
colnames(df2) <- c("Name", "Mean")
df_values <- df2
# split matrice names
df_values <- df_values %>%
separate(Name, c("sex","correlation","effect"), sep="[_]", fill="right") %>%
mutate(effect = paste0(sex, effect))
prepare_df <- function(df) {
df$effect <- factor(df$effect, levels = c('f1','f3', 'f2', 'f1.5','equal1','m1.5','m2','m3','m1'))
df <- df %>% mutate_at(1, as.numeric) %>%
arrange(correlation, effect)
return(df)
}
##
df_ave <- prepare_df(df_values[2:nrow(df_values),c(2,3,4)])
df_null <- prepare_df(df_values[1,c(2,3,4)])
df_null$Mean <- as.numeric(df_null$Mean)
df_ave$Mean <- as.numeric(df_ave$Mean)
head(df_values)
big <- ggplot(df_ave, aes(x= effect, y= correlation, fill= Mean)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(Mean,3)), color= "white", size= 4) +
scale_y_continuous(expand=c(0,0)) +
labs(title="Weights of Hypothesis Matrices", xlab="Magnitude", ylab="Correlation") +
theme_pubclean() +
theme(axis.text=element_text(size=12), legend.position = "none") +
scale_fill_material("blue-grey")
small <- ggplot(df_null, aes(x= 0, y= 0, fill= Mean)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(Mean,3)), color= "white", size= 4) +
scale_y_continuous(expand=c(0,0)) +
labs(title="Weight of No Effect Matrice", xlab="Magnitude", ylab="Correlation") +
theme_pubclean() +
theme(axis.text=element_blank(), axis.title=element_blank(), legend.position = "none",
axis.ticks = element_blank(), plot.title = element_text(size=10)) +
scale_fill_material("blue-grey")
lay <- rbind( c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(2,3,3,3))
p <- gridExtra::grid.arrange(big, small, ncol=1, layout_matrix=lay)
# simulation
setwd("~/Research/GWAS-frontera/mash/simulation")
df2 <- read.csv("100_0.5_1.txt", sep="\t")
df2 <- data.frame(cbind(df$mix_0, df2$x))
colnames(df2) <- c("Name", "Mean")
df_values <- df2
# split matrice names
df_values <- df_values %>%
separate(Name, c("sex","correlation","effect"), sep="[_]", fill="right") %>%
mutate(effect = paste0(sex, effect))
prepare_df <- function(df) {
df$effect <- factor(df$effect, levels = c('f1','f3', 'f2', 'f1.5','equal1','m1.5','m2','m3','m1'))
df <- df %>% mutate_at(1, as.numeric) %>%
arrange(correlation, effect)
return(df)
}
df_ave <- prepare_df(df_ave)
##
df_ave <- prepare_df(df_values[2:nrow(df_values),c(2,3,4)])
df_null <- prepare_df(df_values[1,c(2,3,4)])
df_null$Mean <- as.numeric(df_null$Mean)
df_ave$Mean <- as.numeric(df_ave$Mean)
head(df_values)
big <- ggplot(df_ave, aes(x= effect, y= correlation, fill= Mean)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(Mean,3)), color= "white", size= 4) +
scale_y_continuous(expand=c(0,0)) +
labs(title="Weights of Hypothesis Matrices", xlab="Magnitude", ylab="Correlation") +
theme_pubclean() +
theme(axis.text=element_text(size=12), legend.position = "none") +
scale_fill_material("blue-grey")
small <- ggplot(df_null, aes(x= 0, y= 0, fill= Mean)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(Mean,3)), color= "white", size= 4) +
scale_y_continuous(expand=c(0,0)) +
labs(title="Weight of No Effect Matrice", xlab="Magnitude", ylab="Correlation") +
theme_pubclean() +
theme(axis.text=element_blank(), axis.title=element_blank(), legend.position = "none",
axis.ticks = element_blank(), plot.title = element_text(size=10)) +
scale_fill_material("blue-grey")
lay <- rbind( c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(2,3,3,3))
p <- gridExtra::grid.arrange(big, small, ncol=1, layout_matrix=lay)
setwd("~/Research/GWAS-frontera/PGS")
df <- read.csv("pgs_linear_results_five.txt", sep="\t")
df <- df[c(-5,-6,-9,-10,-13,-14)]
df$Sex[df$Sex == 'male'] <- 'm'
df$Sex[df$Sex == 'female'] <- 'f'
df_combined <- df[df$Sex == 'combined',]
df_sep <- df[df$Sex != 'combined',]
df_sep$Phenotype <- paste0(df_sep$Phenotype,"_",df_sep$Sex)
melt_out <- function(df) {
df1 <- melt(df[c(1,2,3,5,7)], id.vars = c('Phenotype','Sex'),
variable.name = "r2_var", value.name = "r2_val")
df2 <- melt(df[c(1,2,4,6,8)], id.vars = c('Phenotype','Sex'),
variable.name = "r2_var", value.name = "r2_se_val")
df2$r2_var <- df1$r2_var
df <- merge(df1,df2, by=c('Phenotype','Sex','r2_var'))
return(df)
}
df_sep <- melt_out(df_sep)
df_combined <- melt_out(df_combined)
# separated plot, r2
rects <- data.frame(xstart = seq(0.5,55.5,1), xend = seq(1.5,56.5,1))
pdf(file="pgs_comparison_five.pdf",width=7,height=19)
p <- ggplot(data=df_sep, aes(x=Phenotype, y=r2_val, fill=factor(r2_var))) +
geom_bar(position='dodge',stat='identity') +
geom_errorbar(aes(ymin=r2_val-r2_se_val, ymax=r2_val+r2_se_val), show.legend = FALSE,
position='dodge', stat='identity') +
labs(title='PGS Comparison Over Five Folds', y="R2", fill="Model") +
coord_flip() + theme_classic() + scale_fill_npg(labels = c('additive both-sex', 'additive same-sex', 'mash')) +
theme(axis.text = element_text(size=10), axis.title = element_text(size=14), plot.title=element_text(size=16),
legend.title=element_text(size=12), legend.text=element_text(size=10),
legend.position = 'top', legend.background = element_rect(linetype='solid', color='black')) +
geom_rect(data=rects, aes(ymin=0, ymax=0.33, xmin=xstart, xmax=xend), alpha=0.1,fill=rep(c("white","grey20"),times=28), inherit.aes=FALSE)
p
dev.off()
# combined plot, r2
pdf(file="pgs_comparison_five_combined.pdf",width=8,height=14)
p <- ggplot(data=df_combined, aes(x=Phenotype, y=r2_val, fill=factor(r2_var))) +
geom_bar(position='dodge',stat='identity') +
geom_errorbar(aes(ymin=r2_val-r2_se_val, ymax=r2_val+r2_se_val), alpha= 0.8, show.legend = FALSE,
position='dodge', stat='identity') +
labs(title='PGS Comparison Over Five Folds - Combined Models', y="R2", fill="Model") +
coord_flip() + theme_classic() + scale_fill_npg(labels = c('additive both-sex', 'additive same-sex', 'mash')) +
theme(axis.text = element_text(size=10), axis.title = element_text(size=14), plot.title=element_text(size=16),
legend.title=element_text(size=12), legend.text=element_text(size=10),
legend.position = 'top', legend.background = element_rect(linetype='solid', color='black'))
p
dev.off()
# create sample of individuals -- random sex
# 0=female  1=male
n=300000
sex <- rbinom(n,1,0.5)
f_id <- which(sex==0) ; m_id <- which(sex==1)
# set seed
set.seed(1)
# get genotype at site
get_genotypes <- function(snp_freq) {
allele1 <- rbinom(n=n, size=1, prob=snp_freq)
allele2 <- rbinom(n=n, size=1, prob=snp_freq)
genotypes <- allele1 + allele2
return(genotypes)
}
# i causal SNPs
snp_num <- 100 ; snp_num_name <- '1e2'
snp_freqs <- read.csv(paste0("maf_sample_",snp_num_name,".txt"), colClasses = 'numeric') ; snp_freqs <- snp_freqs$x
genotype_matrix_i <- matrix(nrow=n, ncol=length(snp_freqs))
monomorphs <- NULL
snp_freqs <- read.csv(paste0("maf_sample_",snp_num_name,".txt"), colClasses = 'numeric') ; snp_freqs <- snp_freqs$x
setwd("~/Research/GWAS-frontera/mash/simulation")
snp_freqs <- read.csv(paste0("maf_sample_",snp_num_name,".txt"), colClasses = 'numeric') ; snp_freqs <- snp_freqs$x
genotype_matrix_i <- matrix(nrow=n, ncol=length(snp_freqs))
monomorphs <- NULL
for (i in 1:length(snp_freqs)) {
snp_count <- get_genotypes(snp_freqs[i])
if (length(unique(snp_count)) ==1) {       # check if snp is monomorphic
monomorphs[i] <- i
next
}
genotype_matrix_i[,i] <- snp_count
if (i %% 1000 == 0){
print(i)
}
}
genotype_matrix_i <- matrix(nrow=n, ncol=length(snp_freqs))
monomorphs <- NULL
for (i in 1:length(snp_freqs)) {
snp_count <- get_genotypes(snp_freqs[i])
if (length(unique(snp_count)) ==1) {       # check if snp is monomorphic
monomorphs[i] <- i
next
}
#genotype_matrix_i[,i] <- snp_count
genotype_matrix_i <- cbind(genotype_matrix_i, snp_count)
if (i %% 1000 == 0){
print(i)
}
}
require("dplyr")
require("tidyr")
require("ggplot2")
require("gridExtra")
pheno <- 'testosterone'
pheno_name <- "Testosterone"
setwd("~/Research/GWAS-frontera/GWAS_Results/testosterone")
file_name <- paste0("male_all.",pheno,".glm.linear")
male_df <- read.csv(file_name, sep="\t", colClasses=c(rep("integer",2),"character",rep("NULL",9),"numeric" ), nrow=10000)
female_df <- read.csv(file_name, sep="\t", colClasses=c(rep("integer",2),"character",rep("NULL",9),"numeric" ), nrow=10000)
head(male_df)
-log10(0.05)
nrow(male_df[male_df$P > 0.1])
nrow(male_df[male_df$P > 0.1,])
head(sample_frac(male_df, 0.5))
nrow(sample_frac(male_df, 0.5))
nrow(sample_frac(male_df, 0.4))
nrow(sample_frac(filter(male_df, P>0.1), 0.4))
head(sample_frac(filter(male_df, P>0.1), 0.4))
head(bind_rows(filter(male_df, P<=0.1), (sample_frac(filter(male_df, P>0.1), 0.4))))
nrow(bind_rows(filter(male_df, P<=0.1), (sample_frac(filter(male_df, P>0.1), 0.4))))
nrow(bind_rows(filter(male_df, P<=0.1))
nrow(bind_rows(filter(male_df, P<=0.1)))
nrow(bind_rows(filter(male_df, P<=0.1)))
nrow(bind_rows(filter(male_df, P>0.1)))
pheno <- 'testosterone'
pheno_name <- "Testosterone"
setwd("~/Research/GWAS-frontera/GWAS_Results/testosterone")
file_name <- paste0("male_all.",pheno,".glm.linear")
male_df <- read.csv(file_name, sep="\t", colClasses=c(rep("integer",2),"character",rep("NULL",9),"numeric" ), nrow=10000)
female_df <- read.csv(file_name, sep="\t", colClasses=c(rep("integer",2),"character",rep("NULL",9),"numeric" ), nrow=10000)
nrow(bind_rows(filter(male_df, P<=0.1), (sample_frac(filter(male_df, P>0.1), 0.4))))
nrow(bind_rows(filter(male_df, P>0.1)))
edit_df <- function(df) {
plot_df <- df %>%
drop_na() %>%
bind_rows(filter(P<=0.1), (sample_frac(filter(P>0.1), 0.4)))
group_by(X.CHROM) %>%
summarize(CHR_LEN=max(POS)) %>%
mutate(TOT=cumsum(CHR_LEN)-CHR_LEN) %>%
select(-CHR_LEN) %>%
left_join(df, ., by=c("X.CHROM"="X.CHROM")) %>%
arrange(X.CHROM, POS) %>%
mutate(POS_CUM=POS+TOT)
return(plot_df)
}
x_axis <- function(plot_df) {
axis_df <- plot_df %>%
group_by(X.CHROM) %>%
summarize(CENTER=(max(POS_CUM)+min(POS_CUM))/2 )
return(axis_df)
}
female_df <- edit_df(female_df)
head(male_df)
male_df <- read.csv(file_name, sep="\t", colClasses=c(rep("integer",2),"character",rep("NULL",9),"numeric" ), nrow=10000)
female_df <- read.csv(file_name, sep="\t", colClasses=c(rep("integer",2),"character",rep("NULL",9),"numeric" ), nrow=10000)
nrow(bind_rows(filter(male_df, P<=0.1), (sample_frac(filter(male_df, P>0.1), 0.4))))
nrow(bind_rows(filter(male_df, P>0.1)))
edit_df <- function(df) {
df <- bind_rows(filter(df, P<=0.1), (sample_frac(filter(df, P>0.1), 0.4)))
plot_df <- df %>%
drop_na() %>%
group_by(X.CHROM) %>%
summarize(CHR_LEN=max(POS)) %>%
mutate(TOT=cumsum(CHR_LEN)-CHR_LEN) %>%
select(-CHR_LEN) %>%
left_join(df, ., by=c("X.CHROM"="X.CHROM")) %>%
arrange(X.CHROM, POS) %>%
mutate(POS_CUM=POS+TOT)
return(plot_df)
}
x_axis <- function(plot_df) {
axis_df <- plot_df %>%
group_by(X.CHROM) %>%
summarize(CENTER=(max(POS_CUM)+min(POS_CUM))/2 )
return(axis_df)
}
female_df <- edit_df(female_df)
male_df <- edit_df(male_df)
axis_df <- x_axis(female_df)
female_plot <- ggplot(female_df, aes(x=POS_CUM,y=-log10(P))) +
geom_point( aes(color=as.factor(X.CHROM)), alpha=0.7, size=1) +
scale_x_continuous(label=axis_df$X.CHROM, breaks=axis_df$CENTER) +
scale_y_continuous(expand=c(0,0)) +
theme_bw() +
theme(legend.position = "none", axis.title.x = element_blank(), plot.margin = margin(20,20,0,20),
axis.text = element_text(size=11)) +
labs(title=paste0("Miami Plot - ", pheno_name))
male_plot <- ggplot(male_df, aes(x=POS_CUM,y=-log10(P))) +
geom_point( aes(color=as.factor(X.CHROM)), alpha=0.7, size=1) +
scale_x_continuous(label=axis_df$X.CHROM, breaks=axis_df$CENTER) +
scale_y_reverse(expand=c(0,0)) +
theme_bw() +
theme(legend.position = "none",  axis.text.x=element_blank(), axis.ticks.x = element_blank(), plot.margin = margin(0,20,20,20),
axis.text = element_text(size=11)) +
labs(x="Chromosome")
p <- gridExtra::grid.arrange(female_plot, male_plot, nrow = 2)
p
male_df <- read.csv(file_name, sep="\t", colClasses=c(rep("integer",2),"character",rep("NULL",9),"numeric" ), nrow=10000)
female_df <- read.csv(file_name, sep="\t", colClasses=c(rep("integer",2),"character",rep("NULL",9),"numeric" ), nrow=10000)
nrow(bind_rows(filter(male_df, P<=0.1), (sample_frac(filter(male_df, P>0.1), 0.4))))
nrow(bind_rows(filter(male_df, P>0.1)))
edit_df <- function(df) {
df <- bind_rows(filter(df, P<=0.1), sample_frac(filter(df, P>0.1), 0.2), sample_frac(filter(df, P>0.3), 0.2))
plot_df <- df %>%
drop_na() %>%
group_by(X.CHROM) %>%
summarize(CHR_LEN=max(POS)) %>%
mutate(TOT=cumsum(CHR_LEN)-CHR_LEN) %>%
select(-CHR_LEN) %>%
left_join(df, ., by=c("X.CHROM"="X.CHROM")) %>%
arrange(X.CHROM, POS) %>%
mutate(POS_CUM=POS+TOT)
return(plot_df)
}
x_axis <- function(plot_df) {
axis_df <- plot_df %>%
group_by(X.CHROM) %>%
summarize(CENTER=(max(POS_CUM)+min(POS_CUM))/2 )
return(axis_df)
}
female_df <- edit_df(female_df)
male_df <- edit_df(male_df)
axis_df <- x_axis(female_df)
female_plot <- ggplot(female_df, aes(x=POS_CUM,y=-log10(P))) +
geom_point( aes(color=as.factor(X.CHROM)), alpha=0.7, size=1) +
scale_x_continuous(label=axis_df$X.CHROM, breaks=axis_df$CENTER) +
scale_y_continuous(expand=c(0,0)) +
theme_bw() +
theme(legend.position = "none", axis.title.x = element_blank(), plot.margin = margin(20,20,0,20),
axis.text = element_text(size=11)) +
labs(title=paste0("Miami Plot - ", pheno_name))
male_plot <- ggplot(male_df, aes(x=POS_CUM,y=-log10(P))) +
geom_point( aes(color=as.factor(X.CHROM)), alpha=0.7, size=1) +
scale_x_continuous(label=axis_df$X.CHROM, breaks=axis_df$CENTER) +
scale_y_reverse(expand=c(0,0)) +
theme_bw() +
theme(legend.position = "none",  axis.text.x=element_blank(), axis.ticks.x = element_blank(), plot.margin = margin(0,20,20,20),
axis.text = element_text(size=11)) +
labs(x="Chromosome")
p <- gridExtra::grid.arrange(female_plot, male_plot, nrow = 2)
p
male_df <- read.csv(file_name, sep="\t", colClasses=c(rep("integer",2),"character",rep("NULL",9),"numeric" ), nrow=10000)
female_df <- read.csv(file_name, sep="\t", colClasses=c(rep("integer",2),"character",rep("NULL",9),"numeric" ), nrow=10000)
nrow(bind_rows(filter(male_df, P<=0.1), (sample_frac(filter(male_df, P>0.1), 0.4))))
nrow(bind_rows(filter(male_df, P>0.1)))
edit_df <- function(df) {
df <- bind_rows(filter(df, P<=0.1), sample_frac(filter(df, P>0.1), 0.6), sample_frac(filter(df, P>0.5), 0.2))
plot_df <- df %>%
drop_na() %>%
group_by(X.CHROM) %>%
summarize(CHR_LEN=max(POS)) %>%
mutate(TOT=cumsum(CHR_LEN)-CHR_LEN) %>%
select(-CHR_LEN) %>%
left_join(df, ., by=c("X.CHROM"="X.CHROM")) %>%
arrange(X.CHROM, POS) %>%
mutate(POS_CUM=POS+TOT)
return(plot_df)
}
x_axis <- function(plot_df) {
axis_df <- plot_df %>%
group_by(X.CHROM) %>%
summarize(CENTER=(max(POS_CUM)+min(POS_CUM))/2 )
return(axis_df)
}
female_df <- edit_df(female_df)
male_df <- edit_df(male_df)
axis_df <- x_axis(female_df)
female_plot <- ggplot(female_df, aes(x=POS_CUM,y=-log10(P))) +
geom_point( aes(color=as.factor(X.CHROM)), alpha=0.7, size=1) +
scale_x_continuous(label=axis_df$X.CHROM, breaks=axis_df$CENTER) +
scale_y_continuous(expand=c(0,0)) +
theme_bw() +
theme(legend.position = "none", axis.title.x = element_blank(), plot.margin = margin(20,20,0,20),
axis.text = element_text(size=11)) +
labs(title=paste0("Miami Plot - ", pheno_name))
male_plot <- ggplot(male_df, aes(x=POS_CUM,y=-log10(P))) +
geom_point( aes(color=as.factor(X.CHROM)), alpha=0.7, size=1) +
scale_x_continuous(label=axis_df$X.CHROM, breaks=axis_df$CENTER) +
scale_y_reverse(expand=c(0,0)) +
theme_bw() +
theme(legend.position = "none",  axis.text.x=element_blank(), axis.ticks.x = element_blank(), plot.margin = margin(0,20,20,20),
axis.text = element_text(size=11)) +
labs(x="Chromosome")
p <- gridExtra::grid.arrange(female_plot, male_plot, nrow = 2)
p
mode(male_df$P)
median(male_df$P)
male_df <- read.csv(file_name, sep="\t", colClasses=c(rep("integer",2),"character",rep("NULL",9),"numeric" ), nrow=10000)
female_df <- read.csv(file_name, sep="\t", colClasses=c(rep("integer",2),"character",rep("NULL",9),"numeric" ), nrow=10000)
nrow(bind_rows(filter(male_df, P<=0.1), (sample_frac(filter(male_df, P>0.1), 0.4))))
nrow(bind_rows(filter(male_df, P>0.1)))
median(male_df$P)
edit_df <- function(df) {
df <- bind_rows(filter(df, P<=0.1), sample_frac(filter(df, P>0.1), 0.7), sample_frac(filter(df, P>0.4), 0.2))
plot_df <- df %>%
drop_na() %>%
group_by(X.CHROM) %>%
summarize(CHR_LEN=max(POS)) %>%
mutate(TOT=cumsum(CHR_LEN)-CHR_LEN) %>%
select(-CHR_LEN) %>%
left_join(df, ., by=c("X.CHROM"="X.CHROM")) %>%
arrange(X.CHROM, POS) %>%
mutate(POS_CUM=POS+TOT)
return(plot_df)
}
x_axis <- function(plot_df) {
axis_df <- plot_df %>%
group_by(X.CHROM) %>%
summarize(CENTER=(max(POS_CUM)+min(POS_CUM))/2 )
return(axis_df)
}
female_df <- edit_df(female_df)
male_df <- edit_df(male_df)
axis_df <- x_axis(female_df)
female_plot <- ggplot(female_df, aes(x=POS_CUM,y=-log10(P))) +
geom_point( aes(color=as.factor(X.CHROM)), alpha=0.7, size=1) +
scale_x_continuous(label=axis_df$X.CHROM, breaks=axis_df$CENTER) +
scale_y_continuous(expand=c(0,0)) +
theme_bw() +
theme(legend.position = "none", axis.title.x = element_blank(), plot.margin = margin(20,20,0,20),
axis.text = element_text(size=11)) +
labs(title=paste0("Miami Plot - ", pheno_name))
male_plot <- ggplot(male_df, aes(x=POS_CUM,y=-log10(P))) +
geom_point( aes(color=as.factor(X.CHROM)), alpha=0.7, size=1) +
scale_x_continuous(label=axis_df$X.CHROM, breaks=axis_df$CENTER) +
scale_y_reverse(expand=c(0,0)) +
theme_bw() +
theme(legend.position = "none",  axis.text.x=element_blank(), axis.ticks.x = element_blank(), plot.margin = margin(0,20,20,20),
axis.text = element_text(size=11)) +
labs(x="Chromosome")
p <- gridExtra::grid.arrange(female_plot, male_plot, nrow = 2)
p
########
test <- matrix(1,10,10)
test
colnames(test) <- c(a.1, a.2, a.3, b.3, b.20, b.4, c.18, a.9, c.2, b.6)
colnames(test) <- c("a.1", "a.2", "a.3", "b.3", "b.20", "b.4", "c.18", "a.9", "c.2", "b.6")
test
gsub(".*","",colnames(test))
colnames(test) gsub(".*","",colnames(test))
colnames(test) <- gsub(".*","",colnames(test))
test
colnames(test) <- c("a.1", "a.2", "a.3", "b.3", "b.20", "b.4", "c.18", "a.9", "c.2", "b.6")
colnames(test) <- gsub("\.*","",colnames(test))
test
colnames(test) <- c("a.1", "a.2", "a.3", "b.3", "b.20", "b.4", "c.18", "a.9", "c.2", "b.6")
colnames(test) <- gsub("..*","",colnames(test))
test
colnames(test) <- c("a.1", "a.2", "a.3", "b.3", "b.20", "b.4", "c.18", "a.9", "c.2", "b.6")
colnames(test) <- gsub("[a-z]","",colnames(test))
test
colnames(test) <- c("a.1", "a.2", "a.3", "b.3", "b.20", "b.4", "c.18", "a.9", "c.2", "b.6")
colnames(test) <- gsub("[1-9]","",colnames(test))
test
colnames(test) <- c("a.1", "a.2", "a.3", "b.3", "b.20", "b.4", "c.18", "a.9", "c.2", "b.6")
colnames(test) <- gsub("\\.*","",colnames(test))
test
colnames(test) <- c("a.1", "a.2", "a.3", "b.3", "b.20", "b.4", "c.18", "a.9", "c.2", "b.6")
colnames(test) <- gsub("\\..*","",colnames(test))
test
test <- as.data.frame(do.call(cbind, by(t(test), INDICES=names(test), FUN=colSums)))
colnames(test) <- c("a.1", "a.2", "a.3", "b.3", "b.20", "b.4", "c.18", "a.9", "c.2", "b.6")
colnames(test) <- gsub("\\..*","",colnames(test))
test <- as.data.frame(do.call(cbind, by(t(test), INDICES=names(test), FUN=colSums)))
test
test2 <- as.data.frame(do.call(cbind, by(t(test), INDICES=names(test), FUN=colSums)))
test2 <- as.data.frame(do.call(cbind, by((test), INDICES=names(test), FUN=colSums)))
test2 <- as.data.frame(do.call(cbind, by(t(test), INDICES=names(test), FUN=rowSums)))
t(test)
rowsum( t(test), group = colnames(test) )
t(rowsum(t(test), group = colnames(test)))
########
test <- matrix(1,10,10)
colnames(test) <- c("a.1", "a.2", "a.3", "b.3", "b.20", "b.4", "c.18", "a.9", "c.2", "b.6")
colnames(test) <- gsub("^(.*)[.].*","",colnames(test))
test
########
test <- matrix(1,10,10)
colnames(test) <- c("a.1", "a.2", "a.3", "b.3", "b.20", "b.4", "c.18", "a.9", "c.2", "b.6")
colnames(test) <- gsub("^[.]*","",colnames(test))
test
########
test <- matrix(1,10,10)
colnames(test) <- c("a.1", "a.2", "a.3", "b.3", "b.20", "b.4", "c.18", "a.9", "c.2", "b.6")
colnames(test) <- gsub("^(.*)[.].*", "\\1",colnames(test))
test
