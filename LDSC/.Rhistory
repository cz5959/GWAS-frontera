# get PGS scores
setwd(paste0("~/Research/GWAS-frontera/GWAS_results/",pheno))
file_name <- list.files(pattern="both_sex_additive_")
df_both <- read.csv(file_name,sep="", colClasses= c("NULL","integer",rep("NULL",3),"numeric"))
# get phenotype
setwd("~/Research/Phenotypes")
df_pheno <- read.csv(paste0("pheno_",pheno,".txt"), sep="\t", colClasses = c("NULL","integer","numeric"))
df_sex <- read.csv("sex_ids.txt", sep="\t")
# testosterone pgs scores
setwd("~/Research/GWAS-frontera/GWAS_results/testosterone")
#df_testosterone <- read.csv("both_sex_additive_testosterone.1e-5.profile",
#                            sep="", colClasses= c("NULL","integer",rep("NULL",3),"numeric"))
## sex specific testosterone
df_T_f <- read.csv("female_additive_testosterone.1e-8.profile",
sep="", colClasses= c("NULL","integer",rep("NULL",3),"numeric"))
df_T_m <- read.csv("male_additive_testosterone.1e-5.profile",
sep="", colClasses= c("NULL","integer",rep("NULL",3),"numeric"))
df_testosterone <- merge(df_T_f,df_T_m, by="IID")
# merge dataframes - testosterone, sex, pheno, pgs scores f, pgs scores m
df <- merge(merge(df_testosterone, df_sex, by='IID'), df_pheno, by='IID')
## sex specific testosterone
df$SCORE.x <- ifelse(df$sex == 1, df$SCORE.x, df$SCORE.y)
df <- df[-c(3)]
df <- merge(df,df_both,by='IID')
colnames(df) <- c("IID", "testosterone", "sex", "pheno", "SCORE")
# order by testosterone
df <- df[order(df$testosterone),]
# label then split by sex
df$sex[df$sex == 1] <- 'male'
df$sex[df$sex == 0] <- 'female'
df_m <- df[df$sex == 'male',]
df_f <- df[df$sex == 'female',]
# get lm results from each testosterone bin
bin_fun <- function(data, n, sex, pgs_sd) {
intervals = seq(0,nrow(data),nrow(data)/n)
cuts <- cut(1:nrow(data), breaks = intervals)
results <- NULL
for (i in 1:n) {
# linear regression
bin <- data[cuts == levels(cuts)[i],]
model <- lm(paste0("pheno ~ SCORE"), data = bin)
beta <- model$coefficients[2]
stderror <- summary(model)$coefficients[2,2]
beta <- beta * pgs_sd; stderror <- stderror * pgs_sd
T_mean <- mean(bin$testosterone)
results <- rbind(results, data.frame(Testosterone=T_mean, Beta=beta, Error=stderror, Sex=sex))
}
return(results)
}
# call function for overlap and nonoverlaps
pgs_sd <- sd(df$SCORE)
m_results <- bin_fun(df_m,10,'male', pgs_sd)
f_results <- bin_fun(df_f,10,'female', pgs_sd)
results <- rbind(m_results, f_results)
# trendlines x range
x_min_m <- min(m_results$Testosterone); x_max_m <- max(m_results$Testosterone)
x_min_f <- min(f_results$Testosterone); x_max_f <- max(f_results$Testosterone)
# trendline boundary points
trend_y <- function(m_model, f_model) {
trendline <- NULL
m_inter <- m_model$coefficients[1]; m_slope <- m_model$coefficients[2]
f_inter <- f_model$coefficients[1]; f_slope <- f_model$coefficients[2]
m_y1 <- m_inter + (m_slope * x_min_m)
m_y2 <- m_inter + (m_slope * x_max_m)
f_y1 <- f_inter + (f_slope * x_min_f)
f_y2 <- f_inter + (f_slope * x_max_f)
mp <- summary(m_model)$coefficients[2,4]
fp <- summary(f_model)$coefficients[2,4]
trendline <- rbind(trendline,data.frame(x1=x_min_m, x2=x_max_m, y1=m_y1, y2=m_y2, p=mp, Sex='male'))
trendline <- rbind(trendline,data.frame(x1=x_min_f, x2=x_max_f, y1=f_y1, y2=f_y2, p=fp, Sex='female'))
return(trendline)
}
# linear regression for BETA
trend <- NULL
male_model <- lm(Beta ~ Testosterone, data=m_results)
female_model <- lm(Beta ~ Testosterone, data=f_results)
trend <- rbind(trend, trend_y(male_model, female_model))
text_size = 2.5
sex_label <- data.frame(label = c("female", "male"), Sex=c("female", "male"))
sex_label_y =8000
setwd("~/Research/GWAS-frontera/Supplementary Figures/S11 T pgs mendelian")
png(file=paste0(pheno,"_Tpgs_sexspecific.png"), width=3.5, height=3, units="in", res=200)
g <- ggplot(results, aes(x=Testosterone, y=Beta, color=Sex)) +
geom_point(size=1.5) +
geom_errorbar(aes(ymin=Beta-Error, ymax=Beta+Error), alpha= 0.4) +
labs(title=title, x="Testosterone PGS", y="Effect of PGS on Phenotype") +
geom_segment(data=trend, aes(x=x1,xend=x2,y=y1,yend=y2)) +
theme_classic() +
theme(axis.text = element_text(size=8.5), axis.title = element_text(size=9),
plot.title=element_text(size=11), legend.position= "none", plot.margin = margin(20,20,20,20),
strip.background = element_blank(), strip.text = element_blank()) +
scale_color_manual(values=c("#d67629","#207335")) +
stat_cor(method='pearson', p.accuracy=0.001, label.x.npc=0.0, label.y.npc = c(1,1), vjust=c(6.6,6.7), hjust=(0.2),
show.legend=FALSE, size=3) +
geom_text(data=sex_label, aes(x=Inf, y=Inf, label=label), hjust=1.2, vjust=1.2, size=3.2) +
facet_wrap(~Sex, ncol=1, scales="free")
print(g)
dev.off()
#}
#}
#}
#}
#}
#}
#}
#}
#}
png(file=paste0(pheno,"_Tpgs_sexspecific.png"), width=3.5, height=3, units="in", res=200)
g <- ggplot(results, aes(x=Testosterone, y=Beta, color=Sex)) +
geom_point(size=1.5) +
geom_errorbar(aes(ymin=Beta-Error, ymax=Beta+Error), alpha= 0.4) +
labs(title=title, x="Testosterone PGS", y="Effect of PGS on Phenotype") +
geom_segment(data=trend, aes(x=x1,xend=x2,y=y1,yend=y2)) +
theme_classic() +
theme(axis.text = element_text(size=8.5), axis.title = element_text(size=9),
plot.title=element_text(size=11), legend.position= "none", plot.margin = margin(20,20,20,20),
strip.background = element_blank(), strip.text = element_blank()) +
scale_color_manual(values=c("#d67629","#207335")) +
stat_cor(method='pearson', p.accuracy=0.001, label.x.npc=0.0, label.y.npc = c(1,1), vjust=c(6.6,6.7), hjust=(-0.2),
show.legend=FALSE, size=3) +
geom_text(data=sex_label, aes(x=Inf, y=Inf, label=label), hjust=1.2, vjust=1.2, size=3.2) +
facet_wrap(~Sex, ncol=1, scales="free")
print(g)
dev.off()
png(file=paste0(pheno,"_Tpgs_sexspecific.png"), width=3.5, height=3, units="in", res=200)
g <- ggplot(results, aes(x=Testosterone, y=Beta, color=Sex)) +
geom_point(size=1.5) +
geom_errorbar(aes(ymin=Beta-Error, ymax=Beta+Error), alpha= 0.4) +
labs(title=title, x="Testosterone PGS", y="Effect of PGS on Phenotype") +
geom_segment(data=trend, aes(x=x1,xend=x2,y=y1,yend=y2)) +
theme_classic() +
theme(axis.text = element_text(size=8.5), axis.title = element_text(size=9),
plot.title=element_text(size=11), legend.position= "none", plot.margin = margin(20,20,20,20),
strip.background = element_blank(), strip.text = element_blank()) +
scale_color_manual(values=c("#d67629","#207335")) +
stat_cor(method='pearson', p.accuracy=0.001, label.x.npc=0.0, label.y.npc = c(1,1), vjust=c(6.6,6.7), hjust=(-0.1),
show.legend=FALSE, size=3) +
geom_text(data=sex_label, aes(x=Inf, y=Inf, label=label), hjust=1.2, vjust=1.2, size=3.2) +
facet_wrap(~Sex, ncol=1, scales="free")
print(g)
dev.off()
pheno <- "diastolicBP_auto"
title <- "Diastolic BP"
# get PGS scores
setwd(paste0("~/Research/GWAS-frontera/GWAS_results/",pheno))
file_name <- list.files(pattern="both_sex_additive_")
df_both <- read.csv(file_name,sep="", colClasses= c("NULL","integer",rep("NULL",3),"numeric"))
# get phenotype
setwd("~/Research/Phenotypes")
df_pheno <- read.csv(paste0("pheno_",pheno,".txt"), sep="\t", colClasses = c("NULL","integer","numeric"))
df_sex <- read.csv("sex_ids.txt", sep="\t")
# testosterone pgs scores
setwd("~/Research/GWAS-frontera/GWAS_results/testosterone")
#df_testosterone <- read.csv("both_sex_additive_testosterone.1e-5.profile",
#                            sep="", colClasses= c("NULL","integer",rep("NULL",3),"numeric"))
## sex specific testosterone
df_T_f <- read.csv("female_additive_testosterone.1e-8.profile",
sep="", colClasses= c("NULL","integer",rep("NULL",3),"numeric"))
df_T_m <- read.csv("male_additive_testosterone.1e-5.profile",
sep="", colClasses= c("NULL","integer",rep("NULL",3),"numeric"))
df_testosterone <- merge(df_T_f,df_T_m, by="IID")
# merge dataframes - testosterone, sex, pheno, pgs scores f, pgs scores m
df <- merge(merge(df_testosterone, df_sex, by='IID'), df_pheno, by='IID')
## sex specific testosterone
df$SCORE.x <- ifelse(df$sex == 1, df$SCORE.x, df$SCORE.y)
df <- df[-c(3)]
df <- merge(df,df_both,by='IID')
colnames(df) <- c("IID", "testosterone", "sex", "pheno", "SCORE")
# order by testosterone
df <- df[order(df$testosterone),]
# label then split by sex
df$sex[df$sex == 1] <- 'male'
df$sex[df$sex == 0] <- 'female'
df_m <- df[df$sex == 'male',]
df_f <- df[df$sex == 'female',]
# get lm results from each testosterone bin
bin_fun <- function(data, n, sex, pgs_sd) {
intervals = seq(0,nrow(data),nrow(data)/n)
cuts <- cut(1:nrow(data), breaks = intervals)
results <- NULL
for (i in 1:n) {
# linear regression
bin <- data[cuts == levels(cuts)[i],]
model <- lm(paste0("pheno ~ SCORE"), data = bin)
beta <- model$coefficients[2]
stderror <- summary(model)$coefficients[2,2]
beta <- beta * pgs_sd; stderror <- stderror * pgs_sd
T_mean <- mean(bin$testosterone)
results <- rbind(results, data.frame(Testosterone=T_mean, Beta=beta, Error=stderror, Sex=sex))
}
return(results)
}
# call function for overlap and nonoverlaps
pgs_sd <- sd(df$SCORE)
m_results <- bin_fun(df_m,10,'male', pgs_sd)
f_results <- bin_fun(df_f,10,'female', pgs_sd)
results <- rbind(m_results, f_results)
# trendlines x range
x_min_m <- min(m_results$Testosterone); x_max_m <- max(m_results$Testosterone)
x_min_f <- min(f_results$Testosterone); x_max_f <- max(f_results$Testosterone)
# trendline boundary points
trend_y <- function(m_model, f_model) {
trendline <- NULL
m_inter <- m_model$coefficients[1]; m_slope <- m_model$coefficients[2]
f_inter <- f_model$coefficients[1]; f_slope <- f_model$coefficients[2]
m_y1 <- m_inter + (m_slope * x_min_m)
m_y2 <- m_inter + (m_slope * x_max_m)
f_y1 <- f_inter + (f_slope * x_min_f)
f_y2 <- f_inter + (f_slope * x_max_f)
mp <- summary(m_model)$coefficients[2,4]
fp <- summary(f_model)$coefficients[2,4]
trendline <- rbind(trendline,data.frame(x1=x_min_m, x2=x_max_m, y1=m_y1, y2=m_y2, p=mp, Sex='male'))
trendline <- rbind(trendline,data.frame(x1=x_min_f, x2=x_max_f, y1=f_y1, y2=f_y2, p=fp, Sex='female'))
return(trendline)
}
# linear regression for BETA
trend <- NULL
male_model <- lm(Beta ~ Testosterone, data=m_results)
female_model <- lm(Beta ~ Testosterone, data=f_results)
trend <- rbind(trend, trend_y(male_model, female_model))
text_size = 2.5
sex_label <- data.frame(label = c("female", "male"), Sex=c("female", "male"))
sex_label_y =8000
setwd("~/Research/GWAS-frontera/Supplementary Figures/S11 T pgs mendelian")
png(file=paste0(pheno,"_Tpgs_sexspecific.png"), width=3.5, height=3, units="in", res=200)
g <- ggplot(results, aes(x=Testosterone, y=Beta, color=Sex)) +
geom_point(size=1.5) +
geom_errorbar(aes(ymin=Beta-Error, ymax=Beta+Error), alpha= 0.4) +
labs(title=title, x="Testosterone PGS", y="Effect of PGS on Phenotype") +
geom_segment(data=trend, aes(x=x1,xend=x2,y=y1,yend=y2)) +
theme_classic() +
theme(axis.text = element_text(size=8.5), axis.title = element_text(size=9),
plot.title=element_text(size=11), legend.position= "none", plot.margin = margin(20,20,20,20),
strip.background = element_blank(), strip.text = element_blank()) +
scale_color_manual(values=c("#d67629","#207335")) +
stat_cor(method='pearson', p.accuracy=0.001, label.x.npc=0.0, label.y.npc = c(1,1), vjust=c(6.6,6.7), hjust=(-0.05),
show.legend=FALSE, size=3) +
geom_text(data=sex_label, aes(x=Inf, y=Inf, label=label), hjust=1.2, vjust=1.2, size=3.2) +
facet_wrap(~Sex, ncol=1, scales="free")
print(g)
dev.off()
#}
#}
#}
#}
pheno <- "FVC_best"
title <- "Forced vital capacity"
# get PGS scores
setwd(paste0("~/Research/GWAS-frontera/GWAS_results/",pheno))
file_name <- list.files(pattern="both_sex_additive_")
df_both <- read.csv(file_name,sep="", colClasses= c("NULL","integer",rep("NULL",3),"numeric"))
# get phenotype
setwd("~/Research/Phenotypes")
df_pheno <- read.csv(paste0("pheno_",pheno,".txt"), sep="\t", colClasses = c("NULL","integer","numeric"))
df_sex <- read.csv("sex_ids.txt", sep="\t")
# testosterone pgs scores
setwd("~/Research/GWAS-frontera/GWAS_results/testosterone")
#df_testosterone <- read.csv("both_sex_additive_testosterone.1e-5.profile",
#                            sep="", colClasses= c("NULL","integer",rep("NULL",3),"numeric"))
## sex specific testosterone
df_T_f <- read.csv("female_additive_testosterone.1e-8.profile",
sep="", colClasses= c("NULL","integer",rep("NULL",3),"numeric"))
df_T_m <- read.csv("male_additive_testosterone.1e-5.profile",
sep="", colClasses= c("NULL","integer",rep("NULL",3),"numeric"))
df_testosterone <- merge(df_T_f,df_T_m, by="IID")
# merge dataframes - testosterone, sex, pheno, pgs scores f, pgs scores m
df <- merge(merge(df_testosterone, df_sex, by='IID'), df_pheno, by='IID')
## sex specific testosterone
df$SCORE.x <- ifelse(df$sex == 1, df$SCORE.x, df$SCORE.y)
df <- df[-c(3)]
df <- merge(df,df_both,by='IID')
colnames(df) <- c("IID", "testosterone", "sex", "pheno", "SCORE")
# order by testosterone
df <- df[order(df$testosterone),]
# label then split by sex
df$sex[df$sex == 1] <- 'male'
df$sex[df$sex == 0] <- 'female'
df_m <- df[df$sex == 'male',]
df_f <- df[df$sex == 'female',]
# get lm results from each testosterone bin
bin_fun <- function(data, n, sex, pgs_sd) {
intervals = seq(0,nrow(data),nrow(data)/n)
cuts <- cut(1:nrow(data), breaks = intervals)
results <- NULL
for (i in 1:n) {
# linear regression
bin <- data[cuts == levels(cuts)[i],]
model <- lm(paste0("pheno ~ SCORE"), data = bin)
beta <- model$coefficients[2]
stderror <- summary(model)$coefficients[2,2]
beta <- beta * pgs_sd; stderror <- stderror * pgs_sd
T_mean <- mean(bin$testosterone)
results <- rbind(results, data.frame(Testosterone=T_mean, Beta=beta, Error=stderror, Sex=sex))
}
return(results)
}
# call function for overlap and nonoverlaps
pgs_sd <- sd(df$SCORE)
m_results <- bin_fun(df_m,10,'male', pgs_sd)
f_results <- bin_fun(df_f,10,'female', pgs_sd)
results <- rbind(m_results, f_results)
# trendlines x range
x_min_m <- min(m_results$Testosterone); x_max_m <- max(m_results$Testosterone)
x_min_f <- min(f_results$Testosterone); x_max_f <- max(f_results$Testosterone)
# trendline boundary points
trend_y <- function(m_model, f_model) {
trendline <- NULL
m_inter <- m_model$coefficients[1]; m_slope <- m_model$coefficients[2]
f_inter <- f_model$coefficients[1]; f_slope <- f_model$coefficients[2]
m_y1 <- m_inter + (m_slope * x_min_m)
m_y2 <- m_inter + (m_slope * x_max_m)
f_y1 <- f_inter + (f_slope * x_min_f)
f_y2 <- f_inter + (f_slope * x_max_f)
mp <- summary(m_model)$coefficients[2,4]
fp <- summary(f_model)$coefficients[2,4]
trendline <- rbind(trendline,data.frame(x1=x_min_m, x2=x_max_m, y1=m_y1, y2=m_y2, p=mp, Sex='male'))
trendline <- rbind(trendline,data.frame(x1=x_min_f, x2=x_max_f, y1=f_y1, y2=f_y2, p=fp, Sex='female'))
return(trendline)
}
# linear regression for BETA
trend <- NULL
male_model <- lm(Beta ~ Testosterone, data=m_results)
female_model <- lm(Beta ~ Testosterone, data=f_results)
trend <- rbind(trend, trend_y(male_model, female_model))
text_size = 2.5
sex_label <- data.frame(label = c("female", "male"), Sex=c("female", "male"))
sex_label_y =8000
setwd("~/Research/GWAS-frontera/Supplementary Figures/S11 T pgs mendelian")
png(file=paste0(pheno,"_Tpgs_sexspecific.png"), width=3.5, height=3, units="in", res=200)
g <- ggplot(results, aes(x=Testosterone, y=Beta, color=Sex)) +
geom_point(size=1.5) +
geom_errorbar(aes(ymin=Beta-Error, ymax=Beta+Error), alpha= 0.4) +
labs(title=title, x="Testosterone PGS", y="Effect of PGS on Phenotype") +
geom_segment(data=trend, aes(x=x1,xend=x2,y=y1,yend=y2)) +
theme_classic() +
theme(axis.text = element_text(size=8.5), axis.title = element_text(size=9),
plot.title=element_text(size=11), legend.position= "none", plot.margin = margin(20,20,20,20),
strip.background = element_blank(), strip.text = element_blank()) +
scale_color_manual(values=c("#d67629","#207335")) +
stat_cor(method='pearson', p.accuracy=0.001, label.x.npc=0.0, label.y.npc = c(1,1), vjust=c(6.6,6.7), hjust=(-0.05),
show.legend=FALSE, size=3) +
geom_text(data=sex_label, aes(x=Inf, y=Inf, label=label), hjust=1.2, vjust=1.2, size=3.2) +
facet_wrap(~Sex, ncol=1, scales="free")
print(g)
dev.off()
#}
#}
#}
#}
setwd("~/Research/GWAS-frontera/Phenotypes")
setwd("~/Research//Phenotypes")
setwd("~/Research/Phenotypes")
#write.table(corrs_result, file="G_corr_testosterone_age.txt", sep="\t", row.names=FALSE)
corrs_result <- read.csv("G_corr_testosterone_age.txt", sep"\t")
#write.table(corrs_result, file="G_corr_testosterone_age.txt", sep="\t", row.names=FALSE)
corrs_result <- read.csv("G_corr_testosterone_age.txt", sep="\t")
# get nice phenotype names
setwd("~/Research/GWAS-frontera/LDSC/")
ldsc_df <- read.csv("ldsc_results.txt", sep="\t", colClasses = c(rep("character",2), rep("NULL",5)))
ldsc_df <- unique(ldsc_df)
corrs_result <- merge(corrs_result, ldsc_df, by.x="Pheno", by.y="Code")
## plot
rects <- data.frame(xstart = seq(0.5,26.5,1), xend = seq(1.5,27.5,1), col = c(1,rep(c(2,1),13)))
rects <- rects[1:26,]
ggplot(corrs_result, aes(x=reorder(Phenotype, est_diff), y=Est, color=Sex)) +
geom_hline(yintercept = 0, linetype="dashed", alpha=0.5) +
geom_point(size=2, position=position_dodge(width=0.7)) +
geom_errorbar(aes(ymin=Est-(1.645*Err), ymax=Est+(1.645*Err)),
alpha= 0.6, width=0.5, position=position_dodge(width=0.7)) +
geom_rect(data=rects, aes(xmin=xstart,xmax=xend,ymin=-1.5,ymax=1.2),
inherit.aes = FALSE, alpha=0.2, fill = c(rep(c("grey","white"),13))) +
labs(x="", y="R") +
scale_y_continuous(expand=c(0.01,0)) +
theme_classic() +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_blank(),
legend.position = "top", legend.title=element_text(size=14), legend.text=element_text(size=12)) +
scale_color_manual(values=c("#d67629","#207335")) +
coord_flip()
pheno_list <- c("height","bmi","RBC_count","IGF1","creatinine","weight","calcium",
"protein_total","whole_body_fat_mass","urate","arm_fatfree_mass_L",
"arm_fatfree_mass_R", "eosinophil_perc", "lymphocyte_perc", "waist_circ",
"hip_circ", "waist_to_hip", "wth_bmi_adj","diastolicBP_auto","systolicBP_auto",
"albumin", "pulse_rate", "urea", "SHBG", "FVC_best", "HbA1c")
# get lm results from each testosterone bin
bin_fun <- function(data, n, sex) {
intervals = seq(0,nrow(data),nrow(data)/n)
cuts <- cut(1:nrow(data), breaks = intervals)
results <- NULL
for (i in 1:n) {
# linear regression
bin <- data[cuts == levels(cuts)[i],]
model <- lm(paste0("pheno ~ SCORE"), data = bin)
beta <- model$coefficients[2]
T_mean <- mean(bin$testosterone)
age_mean <- mean(bin$age)
results <- rbind(results, data.frame(Testosterone=T_mean, Beta=beta, Age = age_mean, Sex=sex))
}
return(results)
}
get_corr <- function(data) {
# correlation between Beta and testosterone
corrs_row <- NULL
for (sex in c("male", "female")) {
data_sub <- data[data$Sex == sex,]
model <- lm(Beta ~ Age, data_sub)
corr <- cor.test(data_sub$Testosterone, residuals(model))
corr_est <- corr$estimate
corr_err <- corr$conf.int[2] - corr_est
corrs_row <- rbind(corrs_row, data.frame(Pheno=pheno, Est=corr_est, Err=corr_err, Sex=sex))
}
corrs_row$est_diff <- abs(corrs_row[1,2] - corrs_row[2,2])
corrs_row$err_sum <- abs(corrs_row[1,3] + corrs_row[2,3])
return(corrs_row)
}
corrs_result <- NULL
for (pheno in pheno_list) {
print(pheno)
# phenotype
setwd("~/Research/Phenotypes")
df_testosterone <- read.csv("pheno_testosterone.txt", sep="\t", colClasses = c("NULL","integer","numeric"))
df_pheno <- read.csv(paste0("pheno_",pheno,".txt"), sep="\t", colClasses = c("NULL","integer","numeric"))
df_sex <- read.csv("sex_ids.txt", sep="\t")
df_age <- read.csv("covariates.txt", sep="\t", colClasses =c("NULL", "integer", rep("NULL",11), "integer", rep("NULL", 3)))
colnames(df_age) <- c('IID','age')
colnames(df_pheno) <- c('IID','pheno')
# PGS scores
setwd(paste0("~/Research/GWAS-frontera/GWAS_results/",pheno))
file_name <- list.files(pattern="both_sex_additive_")
df_both <- read.csv(file_name,sep="", colClasses= c("NULL","integer",rep("NULL",3),"numeric"))
# merge dataframes
df <- merge(merge(merge(df_testosterone, df_sex, by='IID'), df_age, by = 'IID'), df_pheno, by='IID')
df <- merge(df,df_both,by='IID')
# order by testosterone
df <- df[order(df$testosterone),]
# label then split by sex
df$sex[df$sex == 1] <- 'male'
df$sex[df$sex == 0] <- 'female'
df_m <- df[df$sex == 'male',]
df_f <- df[df$sex == 'female',]
# call function to get betas for each bin
m_results <- bin_fun(df_m,10,'male')
f_results <- bin_fun(df_f,10,'female')
results <- rbind(m_results, f_results)
# correlation between Beta and testosterone
corrs_result <- rbind(corrs_result, get_corr(results))
}
# get nice phenotype names
setwd("~/Research/GWAS-frontera/LDSC/")
ldsc_df <- read.csv("ldsc_results.txt", sep="\t", colClasses = c(rep("character",2), rep("NULL",5)))
ldsc_df <- unique(ldsc_df)
corrs_result <- merge(corrs_result, ldsc_df, by.x="Pheno", by.y="Code")
## plot
rects <- data.frame(xstart = seq(0.5,26.5,1), xend = seq(1.5,27.5,1), col = c(1,rep(c(2,1),13)))
rects <- rects[1:26,]
ggplot(corrs_result, aes(x=reorder(Phenotype, est_diff), y=Est, color=Sex)) +
geom_hline(yintercept = 0, linetype="dashed", alpha=0.5) +
geom_point(size=2, position=position_dodge(width=0.7)) +
geom_errorbar(aes(ymin=Est-(1.645*Err), ymax=Est+(1.645*Err)),
alpha= 0.6, width=0.5, position=position_dodge(width=0.7)) +
geom_rect(data=rects, aes(xmin=xstart,xmax=xend,ymin=-1.5,ymax=1.2),
inherit.aes = FALSE, alpha=0.2, fill = c(rep(c("grey","white"),13))) +
labs(x="", y="R") +
scale_y_continuous(expand=c(0.01,0)) +
theme_classic() +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_blank(),
legend.position = "top", legend.title=element_text(size=14), legend.text=element_text(size=12)) +
scale_color_manual(values=c("#d67629","#207335")) +
coord_flip()
head(corrs_result)
write.table(corrs_result, file="G_corr_testosterone_age.txt", sep="\t", row.names=FALSE)
setwd("~/Research/Phenotypes")
write.table(corrs_result, file="G_corr_testosterone_age.txt", sep="\t", row.names=FALSE)
# save corr and slope files
setwd("~/Research/GWAS-frontera/Phenotypes")
#write.table(corrs_result, file="G_corr_testosterone_sexspecificpgs.txt", sep="\t", row.names=FALSE)
#corrs_result <- read.csv("G_corr_testosterone_pgs.txt", sep="\t")
corrs_result <- read.csv("G_corr_testosterone_sexspecificpgs.txt", sep="\t")
# save corr and slope files
setwd("~/Research/Phenotypes")
#write.table(corrs_result, file="G_corr_testosterone_sexspecificpgs.txt", sep="\t", row.names=FALSE)
#corrs_result <- read.csv("G_corr_testosterone_pgs.txt", sep="\t")
corrs_result <- read.csv("G_corr_testosterone_sexspecificpgs.txt", sep="\t")
# ldsc correlation
setwd("~/Research/GWAS-frontera/LDSC")
ldsc_df <- read.csv("ldsc_results.txt",sep="\t")
ldsc_df <- ldsc_df[ldsc_df$Sex == 'both_sex',c(1,2,6)]
format_result <- function(result) {
result <- result[order(result$Pheno),]
result <- merge(result, ldsc_df, by.x='Pheno', by.y='Code')
return(result)
}
corrs_result <- format_result(corrs_result)
head(corrs_result)
# corr plot scatter
# 90% confidence interval --> mean +/- 1.645*SE ; z-score=1.645
rects <- data.frame(xstart = seq(0.5,26.5,1), xend = seq(1.5,27.5,1), col = c(1,rep(c(2,1),13)))
rects <- rects[1:26,]
plot <- ggplot(corrs_result, aes(x= reorder(Phenotype, est_diff), y=Est, color=Sex)) +
geom_hline(yintercept = 0, linetype="dashed", alpha=0.5) +
geom_point(size=2, position=position_dodge(width=0.7)) +
geom_errorbar(aes(ymin=Est-(1.645*Err), ymax=Est+(1.645*Err)), alpha= 0.6, width=0.5, position=position_dodge(width=0.7)) +
geom_rect(data=rects, aes(xmin=xstart,xmax=xend,ymin=-1.7,ymax=1.15),
inherit.aes = FALSE, alpha=0.2, fill = c(rep(c("grey","white"),13))) +
labs(t="R - Correlation between Testosterone PGS and \nEffect of PGS on Phenotype") +
scale_y_continuous(expand=c(0,0), breaks=seq(-1.5,1,0.5)) +
theme_classic() +
theme(axis.text = element_text(size=10), axis.title = element_blank(), plot.title=element_blank(),
legend.position = "none") +
scale_color_manual(values=c("#d67629","#207335")) +
coord_flip()
annotate_figure(plot,
bottom = text_grob("R - Correlation between Testosterone PGS and \nEffect of Polygenic Score on Phenotype", size=12))
