require("dplyr")
require("tidyr")
require("ggplot2")
require("grid")
require("gridExtra")
require("ggpubr")
setwd("~/Research/GWAS-frontera/LDSC")
df <- read.csv("ldsc_results.txt", sep="\t")
both_h2 <- rep(df[df$Sex == "both_sex", "Heritability"], each=3)
asterick_pheno <- c("arm_fatfree_mass_R", "weight", "arm_fatfree_mass_L", "bmi",
"whole_body_fat_mass", "waist_circ", "hip_circ", "waist_to_hip_ratio")
df <- df %>%
mutate(relative_h2 = Heritability / both_h2) %>%
mutate(relative_h2_se = ((Heritability + h2.std.error) / both_h2) - relative_h2 ) %>%
mutate(Sex = factor(Sex, levels=c("female","both_sex","male"))) %>%
mutate(star = ifelse((Code %in% asterick_pheno) & (Sex == 'both_sex'), "*", NA)) %>%
arrange(Correlation, Phenotype, Sex) %>%
mutate(Phenotype = factor(Phenotype, levels=unique(Phenotype)))
#write.table(df, file = "relative_h2.txt", quote=FALSE, sep="\t", row.names=FALSE)
# relative heritability diff by correlation
df <- df[df$Sex != 'both_sex', c(1,3,6,8,9)]
f <- df[df$Sex == 'female',]
m <- df[df$Sex == 'male',]
setwd("~/Research/GWAS-frontera/LDSC")
df <- read.csv("ldsc_results.txt", sep="\t")
test <- data.frame(c(1,2,3,4,5), c(1.4,2,5,1,5.8))
test
test <- data.frame(a = c(1,2,3,4,5), b = c(1.4,2,5,1,5.8))
test
round(test,3)
round(test,1)
lapply(test, function(x) round(x))
test <- lapply(test, function(x) round(x))
test
test[] <- lapply(test, function(x) round(x))
test
require("dplyr")
mutate(test, across(), round, 2)
test <- data.frame(a = c(1,2,3,4,5), b = c(1.4,2,5,1,5.8))
mutate(test, across(), round, 2)
mutate(test, round, 2)
test <- data.frame(a = c(1,2,3,4,5), b = c(1.4,2,5,1,5.8))
mutate(test, round, 2)
mutate(test, across(everything()) round, 2)
mutate(test, across(everything()), round, 2)
test <- data.frame(a = c(1,2,3,4,5), b = c(1.4,2,5,1,5.8))
test
mutate(test, across(everything(), round, 2))
mutate(test, across(everything(), round, 1))
mutate(test, across(everything(), round, 0))
mutate(test, across(everything(), round, 8))
9000000
9000000 * 0.0000000001
0.0009
9000000 * 0.000000000001
9000000 * 0.0000000001
0.0009
require("dplyr")
require("tidyr")
require("reshape2")
require("matrixStats")
require("ggplot2")
require("ggsci")
require("ggpubr")
require("gridExtra")
# load RData files (from Matt)
setwd("~/Research/GWAS-frontera/selection")
load("fst_plot_whole_body_fat_mass.RData"); wbfm <- pointsf
load("fst_plot_waist_circ.RData"); waist <- pointsf
load("zscore_plot.RData")
results[results$TRAIT == "Calcium",]
unique(results$TRAIT)
# split results by ancestry
azj <- results[results$ANC == "Ashkenazi Jewish",]
fin <- results[results$ANC == "Finnish",]
nfe <- results[results$ANC == "Non-Finnish European",]
### FST PLOT
# size 3x4
f1 <- ggplot(wbfm, aes(x=V, y=FST, weight=w)) +
geom_point(color = "black", alpha= 0.1, size=1) +
geom_smooth(method = "lm", se=F, color= "blue", size=0.5) +
theme_classic() +
scale_y_continuous(breaks=c(0,0.0015,0.003), labels=c("0","2e-3","3e-3")) +
scale_x_continuous(breaks=c(0,0.003,0.006), labels=c("0","3e-3","6e-3")) +
theme(axis.title=element_blank(), axis.text=element_text(size=8))
f1
f2 <- ggplot(waist, aes(x=V, y=FST, weight=w)) +
geom_point(color = "black", alpha= 0.1, size=1) +
geom_smooth(method = "lm", se=F, color= "red", size=0.5) +
theme_classic() +
scale_y_continuous(breaks=c(0,0.00075, 0.0015), labels=c("0","7.5e-4","1.5e-3")) +
scale_x_continuous(breaks=c(0,0.004,0.008), labels=c("0","4e-3","8e-3")) +
xlab("VGxSex") +
theme(axis.title.y=element_blank(), axis.title.x=element_text(size=10), axis.text=element_text(size=8))
f2
fa <- ggplotGrob(f1) ; fb <- ggplotGrob(f2)
maxWidth = grid::unit.pmax(fa$widths[2:5], fb$widths[2:5])
fa$widths[2:5] <- as.list(maxWidth) ; fb$widths[2:5] <- as.list(maxWidth)
fplot <- grid.arrange(fa, fb, ncol=1, nrow=2)
annotate_figure(fplot,
left = text_grob("FST Between Males and Females", size=10, rot=90))
head(results)
max(waist$FST)
max(wbfm$FST)
fa <- ggplotGrob(f1) ; fb <- ggplotGrob(f2)
maxWidth = grid::unit.pmax(fa$widths[2:5], fb$widths[2:5])
fa$widths[2:5] <- as.list(maxWidth) ; fb$widths[2:5] <- as.list(maxWidth)
fplot <- grid.arrange(fa, fb, ncol=1, nrow=2)
annotate_figure(fplot,
left = text_grob("FST Between Males and Females", size=10, rot=90))
### FST PLOT
# size 3x4
f1 <- ggplot(wbfm, aes(x=V, y=FST, weight=w)) +
geom_point(color = "black", alpha= 0.1, size=1) +
geom_smooth(method = "lm", se=F, color= "blue", size=0.5) +
theme_classic() +
scale_y_continuous(breaks=c(0,0.0015,0.003), labels=c("0","2e-3","3e-3")) +
scale_x_continuous(breaks=c(0,0.003,0.006), labels=c("0","3e-3","6e-3")) +
xlab("VGxSex (kg2)") +
theme(axis.title.y=element_blank(), axis.title.x=element_text(size=10), axis.text=element_text(size=8))
f1
f2 <- ggplot(waist, aes(x=V, y=FST, weight=w)) +
geom_point(color = "black", alpha= 0.1, size=1) +
geom_smooth(method = "lm", se=F, color= "red", size=0.5) +
theme_classic() +
scale_y_continuous(breaks=c(0,0.00075, 0.0015), labels=c("0","7.5e-4","1.5e-3")) +
scale_x_continuous(breaks=c(0,0.004,0.008), labels=c("0","4e-3","8e-3")) +
xlab("VGxSex (cm2)") +
theme(axis.title.y=element_blank(), axis.title.x=element_text(size=10), axis.text=element_text(size=8))
f2
fa <- ggplotGrob(f1) ; fb <- ggplotGrob(f2)
maxWidth = grid::unit.pmax(fa$widths[2:5], fb$widths[2:5])
fa$widths[2:5] <- as.list(maxWidth) ; fb$widths[2:5] <- as.list(maxWidth)
fplot <- grid.arrange(fa, fb, ncol=1, nrow=2)
annotate_figure(fplot,
left = text_grob("FST Between Males and Females", size=10, rot=90))
### ZSCORE PLOT
# size 6x8
ggplot(results, aes(x=ZMEAN, y=TRAIT)) +
geom_point(size=1) +
geom_errorbarh(aes(xmin=CILOWER, xmax=CIUPPER), height=0.3, size=0.3) +
geom_vline(xintercept = 0, linetype="longdash", color="#563f61", alpha=0.5, size=0.3) +
geom_vline(data = resultsi, aes(xintercept = ANCMEAN[1]), linetype="dashed", color="#b02e38", alpha=0.5, size=0.3) +
facet_wrap(~ANC,ncol=3, scale="free_x") +
theme_classic() +
xlab("Z-score for Sexually-Antagonistic Selection") +
theme(axis.title=element_text(size=12), axis.text=element_text(size=9),
panel.grid.major.y = element_line(color="gray95", size=0.5))
### ZSCORE PLOT
# size 6x8
ggplot(results, aes(x=ZMEAN, y=TRAIT)) +
geom_point(size=1) +
geom_errorbarh(aes(xmin=CILOWER, xmax=CIUPPER), height=0.3, size=0.3) +
#geom_vline(xintercept = 0, linetype="longdash", color="#563f61", alpha=0.5, size=0.3) +
#geom_vline(data = resultsi, aes(xintercept = ANCMEAN[1]), linetype="dashed", color="#b02e38", alpha=0.5, size=0.3) +
facet_wrap(~ANC,ncol=3, scale="free_x") +
theme_classic() +
xlab("Z-score for Sexually-Antagonistic Selection") +
theme(axis.title=element_text(size=12), axis.text=element_text(size=9),
panel.grid.major.y = element_line(color="gray95", size=0.5))
load("zscore_plot.RData")
# split results by ancestry
azj <- results[results$ANC == "Ashkenazi Jewish",]
fin <- results[results$ANC == "Finnish",]
nfe <- results[results$ANC == "Non-Finnish European",]
### FST PLOT
# size 3x4
f1 <- ggplot(wbfm, aes(x=V, y=FST, weight=w)) +
geom_point(color = "black", alpha= 0.1, size=1) +
geom_smooth(method = "lm", se=F, color= "blue", size=0.5) +
theme_classic() +
scale_y_continuous(breaks=c(0,0.0015,0.003), labels=c("0","2e-3","3e-3")) +
scale_x_continuous(breaks=c(0,0.003,0.006), labels=c("0","3e-3","6e-3")) +
xlab("VGxSex (kg2)") +
theme(axis.title.y=element_blank(), axis.title.x=element_text(size=10), axis.text=element_text(size=8))
f1
f2 <- ggplot(waist, aes(x=V, y=FST, weight=w)) +
geom_point(color = "black", alpha= 0.1, size=1) +
geom_smooth(method = "lm", se=F, color= "red", size=0.5) +
theme_classic() +
scale_y_continuous(breaks=c(0,0.00075, 0.0015), labels=c("0","7.5e-4","1.5e-3")) +
scale_x_continuous(breaks=c(0,0.004,0.008), labels=c("0","4e-3","8e-3")) +
xlab("VGxSex (cm2)") +
theme(axis.title.y=element_blank(), axis.title.x=element_text(size=10), axis.text=element_text(size=8))
f2
fa <- ggplotGrob(f1) ; fb <- ggplotGrob(f2)
maxWidth = grid::unit.pmax(fa$widths[2:5], fb$widths[2:5])
fa$widths[2:5] <- as.list(maxWidth) ; fb$widths[2:5] <- as.list(maxWidth)
fplot <- grid.arrange(fa, fb, ncol=1, nrow=2)
annotate_figure(fplot,
left = text_grob("FST Between Males and Females", size=10, rot=90))
head(results)
### ZSCORE PLOT
# size 6x8
ggplot(results, aes(x=ZMEAN, y=TRAIT)) +
geom_point(size=1) +
geom_errorbarh(aes(xmin=CILOWER, xmax=CIUPPER), height=0.3, size=0.3) +
#geom_vline(xintercept = 0, linetype="longdash", color="#563f61", alpha=0.5, size=0.3) +
#geom_vline(data = resultsi, aes(xintercept = ANCMEAN[1]), linetype="dashed", color="#b02e38", alpha=0.5, size=0.3) +
facet_wrap(~ANC,ncol=3, scale="free_x") +
theme_classic() +
xlab("Z-score for Sexually-Antagonistic Selection") +
theme(axis.title=element_text(size=12), axis.text=element_text(size=9),
panel.grid.major.y = element_line(color="gray95", size=0.5))
### ZSCORE PLOT
# size 6x8
ggplot(results, aes(x=ZMEAN, y=TRAIT)) +
geom_point(size=1) +
geom_errorbarh(aes(xmin=CILOWER, xmax=CIUPPER), height=0.3, size=0.3) +
#geom_vline(xintercept = 0, linetype="longdash", color="#563f61", alpha=0.5, size=0.3) +
#geom_vline(data = resultsi, aes(xintercept = ANCMEAN[1]), linetype="dashed", color="#b02e38", alpha=0.5, size=0.3) +
facet_wrap(~ANC,ncol=3) +
theme_classic() +
xlab("Z-score for Sexually-Antagonistic Selection") +
theme(axis.title=element_text(size=12), axis.text=element_text(size=9),
panel.grid.major.y = element_line(color="gray95", size=0.5))
### ZSCORE PLOT
# size 6x8
ggplot(results, aes(x=ZMEAN, y=TRAIT)) +
geom_point(size=1) +
geom_errorbarh(aes(xmin=CILOWER, xmax=CIUPPER), height=0.3, size=0.3) +
geom_vline(xintercept = 0, linetype="longdash", color="#563f61", alpha=0.5, size=0.3) +
geom_vline(data = resultsi, aes(xintercept = ANCMEAN[1]), linetype="dashed", color="#b02e38", alpha=0.5, size=0.3) +
scale_x_continuous(limits = c(-2,5)) +
facet_wrap(~ANC,ncol=3) +
theme_classic() +
xlab("Z-score for Sexually-Antagonistic Selection") +
theme(axis.title=element_text(size=12), axis.text=element_text(size=9),
panel.grid.major.y = element_line(color="gray95", size=0.5))
### ZSCORE PLOT
# size 6x8
ggplot(results, aes(x=ZMEAN, y=TRAIT)) +
geom_point(size=1) +
geom_errorbarh(aes(xmin=CILOWER, xmax=CIUPPER), height=0.3, size=0.3) +
geom_vline(xintercept = 0, linetype="longdash", color="#563f61", alpha=0.5, size=0.3) +
geom_vline(data = resultsi, aes(xintercept = ANCMEAN[1]), linetype="dashed", color="#b02e38", alpha=0.5, size=0.3) +
coord_cartesian(xlim=c(-2,5)) +
facet_wrap(~ANC,ncol=3) +
theme_classic() +
xlab("Z-score for Sexually-Antagonistic Selection") +
theme(axis.title=element_text(size=12), axis.text=element_text(size=9),
panel.grid.major.y = element_line(color="gray95", size=0.5))
head(results)
# calc ancestry zmean mean
head(resultsi)
### ZSCORE PLOT
# size 6x8
ggplot(results, aes(x=ZMEAN, y=TRAIT)) +
geom_point(size=1) +
geom_errorbarh(aes(xmin=CILOWER, xmax=CIUPPER), height=0.3, size=0.3) +
geom_vline(xintercept = 0, linetype="longdash", color="#563f61", alpha=0.5, size=0.3) +
geom_vline(data = resultsi, aes(xintercept = ANCMEAN), linetype="dashed", color="#b02e38", alpha=0.5, size=0.3) +
coord_cartesian(xlim=c(-2,5)) +
facet_wrap(~ANC,ncol=3) +
theme_classic() +
xlab("Z-score for Sexually-Antagonistic Selection") +
theme(axis.title=element_text(size=12), axis.text=element_text(size=9),
panel.grid.major.y = element_line(color="gray95", size=0.5))
# set up and load in files
pheno <- "bmi"
title <- "BMI"
# get PGS scores
setwd(paste0("~/Research/GWAS-frontera/GWAS_results/",pheno))
df_both <- read.csv("both_sex_additive_bmi.0.01.profile",sep="", colClasses= c("NULL","integer",rep("NULL",3),"numeric"))
# get phenotype
setwd("~/Research/GWAS-frontera/Phenotypes")
df_testosterone <- read.csv("pheno_testosterone.txt", sep="\t", colClasses = c("NULL","integer","numeric"))
df_pheno <- read.csv(paste0("pheno_",pheno,".txt"), sep="\t", colClasses = c("NULL","integer","numeric"))
df_sex <- read.csv("sex_ids.txt", sep="\t")
# merge dataframes - testosterone, sex, pheno, pgs scores f, pgs scores m
df <- merge(merge(df_testosterone, df_sex, by='IID'), df_pheno, by='IID')
df <- merge(df,df_both,by='IID')
colnames(df) <- c("IID", "testosterone", "sex", "pheno", "SCORE")
# order by testosterone
df <- df[order(df$testosterone),]
# label then split by sex
df$sex[df$sex == 1] <- 'male'
df$sex[df$sex == 0] <- 'female'
df_m <- df[df$sex == 'male',]
df_f <- df[df$sex == 'female',]
# find intercept for overlaps
f_inter = mean(df_f$testosterone) + 2*sd(df_f$testosterone)
m_inter = mean(df_m$testosterone) - 2*sd(df_m$testosterone)
# create dataframe with the overlaps
overlap <- df_m[df_m$testosterone <= m_inter,]
overlap <- rbind(overlap, df_f[df_f$testosterone >= f_inter,])
# remove overlapping from the non-overlapping df
df_m <- df_m[! df_m$IID %in% overlap$IID,]
df_f <- df_f[! df_f$IID %in% overlap$IID,]
## get n for bins
nrow(overlap)
nrow(df_m)/10
nrow(df_f)/10
# get lm results from each testosterone bin
bin_fun <- function(data, n, sex) {
intervals = seq(0,nrow(data),nrow(data)/n)
cuts <- cut(1:nrow(data), breaks = intervals)
results <- NULL
for (i in 1:n) {
# linear regression
bin <- data[cuts == levels(cuts)[i],]
model <- lm(paste0("pheno ~ SCORE"), data = bin)
beta <- model$coefficients[2]
stderror <- summary(model)$coefficients[2,2]
T_mean <- mean(bin$testosterone)
# correlation
corr <- cor.test(bin$pheno, unlist(bin["SCORE"]))
corr_est <- corr$estimate
corr_error <- corr$conf.int[2] - corr_est
results <- rbind(results, data.frame(Testosterone=T_mean, Beta=beta, Error=stderror, Corr=corr_est, Corr_err=corr_error, Sex=sex))
}
return(results)
}
# call function for overlap and nonoverlaps
m_results <- bin_fun(df_m,10,'male')
f_results <- bin_fun(df_f,10,'female')
overlap_results_m <- bin_fun(overlap[overlap$sex=='male',],1,'male')
overlap_results_f <- bin_fun(overlap[overlap$sex=='female',],1,'female')
overlap_results <- rbind(overlap_results_m, overlap_results_f)
results <- rbind(m_results, f_results)
# trendlines x range
m_over <- overlap_results$Testosterone[1]
f_over <- overlap_results$Testosterone[2]
x_max <- max(results$Testosterone)
# trendline boundary points
trend_y <- function(m_model, f_model) {
trendline <- NULL
m_y1 <- m_model$coefficients[1] + (m_model$coefficients[2] * m_over)
m_y2 <- m_model$coefficients[1] + (m_model$coefficients[2] * x_max)
f_y1 <- f_model$coefficients[1] + (f_model$coefficients[2] * 0)
f_y2 <- f_model$coefficients[1] + (f_model$coefficients[2] * f_over)
mp <- summary(m_model)$coefficients[2,4]
fp <- summary(f_model)$coefficients[2,4]
trendline <- rbind(trendline,data.frame(x1=m_over, x2=x_max, y1=m_y1, y2=m_y2, p=mp, Sex='male'))
trendline <- rbind(trendline,data.frame(x1=0, x2=f_over, y1=f_y1, y2=f_y2, p=fp, Sex='female'))
return(trendline)
}
# linear regression for BETA
trend <- NULL
result_sub <- results[results$Sex == 'male',]
male_model <- lm(Beta ~ Testosterone, data=result_sub)
result_sub <- results[results$Sex == 'female',]
female_model <- lm(Beta ~ Testosterone, data=result_sub)
trend <- rbind(trend, trend_y(male_model, female_model))
text_size = 2.5
sex_label_y =8000
setwd("~/Research/GWAS-frontera/Supplementary Figures/")
#png(file=paste0(pheno,"_pgs_testosterone_sexspecific.png"), width=3.5, height=2.5, units="in", res=200)
ggplot(results, aes(x=Testosterone, y=Beta, color=Sex)) +
geom_point(size=1.5) +
geom_point(data=overlap_results, aes(x=Testosterone, y=Beta), shape=1, stroke=1, size=1.5) +
geom_errorbar(aes(ymin=Beta-Error, ymax=Beta+Error), alpha= 0.4) +
geom_errorbar(data= overlap_results, aes(ymin=Beta-Error, ymax=Beta+Error), alpha= 0.4) +
labs(title=title, x="Testosterone Level (nmol/L)", y="Effect of PGS on Phenotype") +
geom_segment(data=trend, aes(x=x1,xend=x2,y=y1,yend=y2)) +
theme_classic() +
theme(axis.text = element_text(size=8.5), axis.title = element_text(size=9),
plot.title=element_text(size=11), legend.position= "none", plot.margin = margin(20,20,20,20)) +
scale_color_manual(values=c("#d67629","#207335")) +
stat_cor(method='pearson', p.accuracy=0.001, label.x.npc=0.55, label.y.npc=0.9,
show.legend=FALSE, size=text_size) +
annotate("text", x=1, y=sex_label_y, label="female", color="#d67629", size=text_size) +
annotate("text", x=8, y=sex_label_y, label="male", color="#207335", size=text_size)
