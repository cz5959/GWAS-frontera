df_m <- df_m[s,]; df_f <- df_f[s,]
p1 <- ggplot(data = df_m, aes(x=SCORE, y=pheno)) +
geom_point(alpha = 0.5, color="#207335") +
geom_abline(slope=b_m, intercept = y_inter_m, color="#207335") +
theme_classic() +
theme(axis.title=element_blank()) +
annotate("text", x=min(df_m$SCORE), y=max(df_m$pheno), hjust=-0.1,
label=paste0("slope= ",round(b_m,2)), color="#207335")
p2 <- ggplot(data = df_f, aes(x=SCORE, y=pheno)) +
geom_point(alpha = 0.5, color="#d67629") +
geom_abline(slope=b_f, intercept = y_inter_f, color="#d67629") +
theme_classic() +
theme(axis.title=element_blank()) +
annotate("text", x=min(df_f$SCORE), y=max(df_f$pheno), hjust=-0.1,
label=paste0("slope= ",round(b_f,2)), color="#d67629")
p <- grid.arrange(p1, p2, ncol=1, nrow=2)
pheno <- "testosterone"
# load phenotype files
setwd("~/Research/Phenotypes")
df_pheno <- read.csv(paste0("pheno_",pheno,".txt"), sep="\t", colClasses = c("NULL","integer","numeric"))
df_sex <- read.csv("sex_ids.txt", sep="\t")
df_pheno <- merge(df_pheno, df_sex, by="IID")
colnames(df_pheno) <- c("IID", "pheno","sex")
# load pgs file
setwd(paste0("~/Research/GWAS-frontera/GWAS_results/",pheno))
file_name <- list.files(pattern="male_additive_")[2]
df_male <- read.csv(file_name, sep="", colClasses= c("NULL","integer",rep("NULL",3),"numeric"))
file_name <- list.files(pattern="female_additive_")
df_female <- read.csv(file_name, sep="", colClasses= c("NULL","integer",rep("NULL",3),"numeric"))
# merge phenotype and pgs df
df_m <- merge(df_pheno, df_male, by="IID")
df_f <- merge(df_pheno, df_female, by="IID")
# sex-specific; 1-male; 0-female
df_m <- df_m[df_m$sex == 1,]
df_f <- df_f[df_f$sex == 0,]
# regress
m_model <- lm(pheno ~ SCORE, df_m)
b_m <- summary(m_model)$coefficients[2]
y_inter_m <- summary(m_model)$coefficients[1]
r2_m <- summary(m_model)$r.squared
f_model <- lm(pheno ~ SCORE, df_f)
b_f <- summary(f_model)$coefficients[2]
y_inter_f <- summary(f_model)$coefficients[1]
r2_f <- summary(f_model)$r.squared
# thin out df for plotting
set.seed(1)
df_m <- df_m[sample(nrow(df_m),5000),]
df_f <- df_f[sample(nrow(df_f),5000),]
p1 <- ggplot(data = df_m, aes(x=SCORE, y=pheno)) +
geom_point(alpha = 0.5, color="#207335") +
geom_abline(slope=b_m, intercept = y_inter_m, color="#207335") +
theme_classic() +
theme(axis.title=element_blank()) +
annotate("text", x=min(df_m$SCORE), y=max(df_m$pheno), hjust=-0.1,
label=paste0("slope= ",round(b_m,2)), color="#207335")
p2 <- ggplot(data = df_f, aes(x=SCORE, y=pheno)) +
geom_point(alpha = 0.5, color="#d67629") +
geom_abline(slope=b_f, intercept = y_inter_f, color="#d67629") +
theme_classic() +
theme(axis.title=element_blank()) +
annotate("text", x=min(df_f$SCORE), y=max(df_f$pheno), hjust=-0.1,
label=paste0("slope= ",round(b_f,2)), color="#d67629")
p <- grid.arrange(p1, p2, ncol=1, nrow=2)
p <- grid.arrange(p1, p2, ncol=1, nrow=2,
left=textGrob("text", gp=gpar(fontsize=16)))
p <- grid.arrange(p1, p2, ncol=1, nrow=2,
left=textGrob("text", gp=gpar(fontsize=12), rot=90))
p <- grid.arrange(p1, p2, ncol=1, nrow=2,
left=textGrob(pheno, gp=gpar(fontsize=12), rot=90),
bottom=textGrob("PGS", gp=gpar(fontsize=12)) )
setwd("~/Research/GWAS-frontera/Supplementary Figures/phenotype and pgs")
pheno_title <- "Testosterone"
pheno <- "testosterone"
pheno_title <- "Testosterone"
png(file=paste0(pheno,"_pheno_pgs.png"), width=3.2, height=2.3, units="in", res=200)
#plot
setwd("~/Research/GWAS-frontera/Supplementary Figures/phenotype and pgs")
p1 <- ggplot(data = df_m, aes(x=SCORE, y=pheno)) +
geom_point(alpha = 0.5, color="#207335") +
geom_abline(slope=b_m, intercept = y_inter_m, color="#207335") +
theme_classic() +
theme(axis.title=element_blank()) +
annotate("text", x=min(df_m$SCORE), y=max(df_m$pheno), hjust=-0.1,
label=paste0("slope= ",round(b_m,2)), color="#207335")
p2 <- ggplot(data = df_f, aes(x=SCORE, y=pheno)) +
geom_point(alpha = 0.5, color="#d67629") +
geom_abline(slope=b_f, intercept = y_inter_f, color="#d67629") +
theme_classic() +
theme(axis.title=element_blank()) +
annotate("text", x=min(df_f$SCORE), y=max(df_f$pheno), hjust=-0.1,
label=paste0("slope= ",round(b_f,2)), color="#d67629")
p <- grid.arrange(p1, p2, ncol=1, nrow=2,
left=textGrob(pheno_title, gp=gpar(fontsize=12), rot=90),
bottom=textGrob("PGS", gp=gpar(fontsize=12)) )
dev.off()
png(file=paste0(pheno,"_pheno_pgs.png"), width=4, height=3, units="in", res=200)
p1 <- ggplot(data = df_m, aes(x=SCORE, y=pheno)) +
geom_point(alpha = 0.5, color="#207335") +
geom_abline(slope=b_m, intercept = y_inter_m, color="#207335") +
theme_classic() +
theme(axis.title=element_blank()) +
annotate("text", x=min(df_m$SCORE), y=max(df_m$pheno), hjust=-0.1,
label=paste0("slope= ",round(b_m,2)), color="#207335")
p2 <- ggplot(data = df_f, aes(x=SCORE, y=pheno)) +
geom_point(alpha = 0.5, color="#d67629") +
geom_abline(slope=b_f, intercept = y_inter_f, color="#d67629") +
theme_classic() +
theme(axis.title=element_blank()) +
annotate("text", x=min(df_f$SCORE), y=max(df_f$pheno), hjust=-0.1,
label=paste0("slope= ",round(b_f,2)), color="#d67629")
p <- grid.arrange(p1, p2, ncol=1, nrow=2,
left=textGrob(pheno_title, gp=gpar(fontsize=12), rot=90),
bottom=textGrob("PGS", gp=gpar(fontsize=12)) )
dev.off()
#plot
setwd("~/Research/GWAS-frontera/Supplementary Figures/phenotype and pgs")
png(file=paste0(pheno,"_pheno_pgs.png"), width=4, height=3, units="in", res=200)
p1 <- ggplot(data = df_m, aes(x=SCORE, y=pheno)) +
geom_point(alpha = 0.2, color="#207335") +
geom_abline(slope=b_m, intercept = y_inter_m, color="#207335") +
theme_classic() +
theme(axis.title=element_blank(), axis.text = element_text(size=8.5)) +
annotate("text", x=min(df_m$SCORE), y=max(df_m$pheno), hjust=-0.1, size=3,
label=paste0("slope= ",round(b_m,2)), color="#207335")
p2 <- ggplot(data = df_f, aes(x=SCORE, y=pheno)) +
geom_point(alpha = 0.2, color="#d67629") +
geom_abline(slope=b_f, intercept = y_inter_f, color="#d67629") +
theme_classic() +
theme(axis.title=element_blank(), axis.text = element_text(size=8.5)) +
annotate("text", x=min(df_f$SCORE), y=max(df_f$pheno), hjust=-0.1, size=3,
label=paste0("slope= ",round(b_f,2)), color="#d67629")
p <- grid.arrange(p1, p2, ncol=1, nrow=2,
left=textGrob(pheno_title, gp=gpar(fontsize=12), rot=90),
bottom=textGrob("PGS", gp=gpar(fontsize=12)) )
dev.off()
#plot
setwd("~/Research/GWAS-frontera/Supplementary Figures/phenotype and pgs")
png(file=paste0(pheno,"_pheno_pgs.png"), width=4, height=3, units="in", res=200)
p1 <- ggplot(data = df_m, aes(x=SCORE, y=pheno)) +
geom_point(alpha = 0.2, color="#207335") +
geom_abline(slope=b_m, intercept = y_inter_m, color="#207335") +
theme_classic() +
theme(axis.title=element_blank(), axis.text = element_text(size=8.5)) +
annotate("text", x=min(df_m$SCORE), y=max(df_m$pheno), hjust=-0.1, size=3,
label=paste0("slope= ",round(b_m,2)), color="#207335")
p2 <- ggplot(data = df_f, aes(x=SCORE, y=pheno)) +
geom_point(alpha = 0.2, color="#d67629") +
geom_abline(slope=b_f, intercept = y_inter_f, color="#d67629") +
theme_classic() +
theme(axis.title=element_blank(), axis.text = element_text(size=8.5)) +
annotate("text", x=min(df_f$SCORE), y=max(df_f$pheno), hjust=-0.1, size=3,
label=paste0("slope= ",round(b_f,2)), color="#d67629")
p <- grid.arrange(p1, p2, ncol=1, nrow=2,
top=textGrob(paste0("Sex-specific ", pheno_title, " and PGS"), gp=gpar(fontsize=12)),
left=textGrob(pheno_title, gp=gpar(fontsize=10), rot=90),
bottom=textGrob("PGS", gp=gpar(fontsize=10)) )
dev.off()
pheno_list <- c("height","bmi","testosterone","RBC_count","IGF1","creatinine","weight","calcium",
"protein_total","whole_body_fat_mass","urate","arm_fatfree_mass_L",
"arm_fatfree_mass_R", "eosinophil_perc", "lymphocyte_perc", "waist_circ",
"hip_circ", "waist_to_hip", "wth_bmi_adj","diastolicBP_auto","systolicBP_auto",
"albumin", "pulse_rate", "urea", "SHBG", "FVC_best", "HbA1c")
length(pheno_list)
summary(m_model)
summary(m_model)$coefficients
summary(m_model)$coefficients[2][2]
summary(m_model)$coefficients[2,2]
test <- data.frame(a=1, b=2, c=3)
test
test[1]
test[,1]
test$a
return( data.frame(Beta=b, Err=err, Y0=y_inter, R2=r2) )
get_lm_coefficients <- function(df, sex) {
model <- lm(pheno ~ SCORE, df); model <- summary(model)
b <- model$coefficients[2]
err <- model$coefficients[2,2]
y_inter <- modelcoefficients[1]
r2 <- model$r.squared
return( data.frame(Beta=b, Err=err, Y0=y_inter, R2=r2) )
}
slope_list <- NULL
# load phenotype files
setwd("~/Research/Phenotypes")
df_pheno <- read.csv(paste0("pheno_",pheno,".txt"), sep="\t", colClasses = c("NULL","integer","numeric"))
df_sex <- read.csv("sex_ids.txt", sep="\t")
df_pheno <- merge(df_pheno, df_sex, by="IID")
colnames(df_pheno) <- c("IID", "pheno","sex")
# load pgs file
setwd(paste0("~/Research/GWAS-frontera/GWAS_results/",pheno))
file_name <- list.files(pattern="male_additive_")[2]
df_male <- read.csv(file_name, sep="", colClasses= c("NULL","integer",rep("NULL",3),"numeric"))
file_name <- list.files(pattern="female_additive_")
df_female <- read.csv(file_name, sep="", colClasses= c("NULL","integer",rep("NULL",3),"numeric"))
# merge phenotype and pgs df
df_m <- merge(df_pheno, df_male, by="IID")
df_f <- merge(df_pheno, df_female, by="IID")
# sex-specific; 1-male; 0-female
df_m <- df_m[df_m$sex == 1,]
df_f <- df_f[df_f$sex == 0,]
# regress
m_lm <-  get_lm_coefficients(df_m, "male")
get_lm_coefficients <- function(df, sex) {
model <- lm(pheno ~ SCORE, df); model <- summary(model)
b <- model$coefficients[2]
err <- model$coefficients[2,2]
y_inter <- model$coefficients[1]
r2 <- model$r.squared
return( data.frame(Beta=b, Err=err, Y0=y_inter, R2=r2, Sex=sex) )
}
# regress
m_lm <-  get_lm_coefficients(df_m, "male")
f_lm <-  get_lm_coefficients(df_f, "female")
m_lm
m_lm[-c(3)]
# add to slope list
slope_list <- rbind(rbind(slope_list, m_lm[-c(3)]), f_lm[-c(3)])
slope_list
p1 <- ggplot(data = df_m, aes(x=SCORE, y=pheno)) +
geom_point(alpha = 0.2, color="#207335") +
geom_abline(slope=m_lm$Beta, intercept = m_lm$Y0, color="#207335") +
theme_classic() +
theme(axis.title=element_blank(), axis.text = element_text(size=8.5)) +
annotate("text", x=min(df_m$SCORE), y=max(df_m$pheno), hjust=-0.1, size=3,
label=paste0("slope= ",round(m_lm$Beta,2)), color="#207335")
p2 <- ggplot(data = df_f, aes(x=SCORE, y=pheno)) +
geom_point(alpha = 0.2, color="#d67629") +
geom_abline(slope=f_lm$Beta, intercept = f_lm$Y0, color="#d67629") +
theme_classic() +
theme(axis.title=element_blank(), axis.text = element_text(size=8.5)) +
annotate("text", x=min(df_f$SCORE), y=max(df_f$pheno), hjust=-0.1, size=3,
label=paste0("slope= ",round(f_lm$Beta,2)), color="#d67629")
p <- grid.arrange(p1, p2, ncol=1, nrow=2,
top=textGrob(paste0("Sex-specific ", pheno_title, " and PGS"), gp=gpar(fontsize=12)),
left=textGrob(pheno_title, gp=gpar(fontsize=10), rot=90),
bottom=textGrob("PGS", gp=gpar(fontsize=10)) )
print(p)
slope_list <- NULL
pheno_list <- c("height","bmi","testosterone","RBC_count","IGF1","creatinine","weight","calcium",
"protein_total","whole_body_fat_mass","urate","arm_fatfree_mass_L",
"arm_fatfree_mass_R", "eosinophil_perc", "lymphocyte_perc", "waist_circ",
"hip_circ", "waist_to_hip", "wth_bmi_adj","diastolicBP_auto","systolicBP_auto",
"albumin", "pulse_rate", "urea", "SHBG", "FVC_best", "HbA1c")
get_lm_coefficients <- function(df, sex) {
model <- lm(pheno ~ SCORE, df); model <- summary(model)
b <- model$coefficients[2]
err <- model$coefficients[2,2]
y_inter <- model$coefficients[1]
r2 <- model$r.squared
return( data.frame(Beta=b, Err=err, Y0=y_inter, R2=r2, Sex=sex) )
}
slope_list <- NULL
for (pheno in pheno_list) {
# load phenotype files
setwd("~/Research/Phenotypes")
df_pheno <- read.csv(paste0("pheno_",pheno,".txt"), sep="\t", colClasses = c("NULL","integer","numeric"))
df_sex <- read.csv("sex_ids.txt", sep="\t")
df_pheno <- merge(df_pheno, df_sex, by="IID")
colnames(df_pheno) <- c("IID", "pheno","sex")
# load pgs file
setwd(paste0("~/Research/GWAS-frontera/GWAS_results/",pheno))
file_name <- list.files(pattern="male_additive_")[2]
df_male <- read.csv(file_name, sep="", colClasses= c("NULL","integer",rep("NULL",3),"numeric"))
file_name <- list.files(pattern="female_additive_")
df_female <- read.csv(file_name, sep="", colClasses= c("NULL","integer",rep("NULL",3),"numeric"))
# merge phenotype and pgs df
df_m <- merge(df_pheno, df_male, by="IID")
df_f <- merge(df_pheno, df_female, by="IID")
# sex-specific; 1-male; 0-female
df_m <- df_m[df_m$sex == 1,]
df_f <- df_f[df_f$sex == 0,]
# regress
m_lm <-  get_lm_coefficients(df_m, "male")
f_lm <-  get_lm_coefficients(df_f, "female")
# add to slope list
slope_list <- rbind(rbind(slope_list, m_lm[-c(3)]), f_lm[-c(3)])
# thin out df for plotting
set.seed(1)
df_m <- df_m[sample(nrow(df_m),5000),]
df_f <- df_f[sample(nrow(df_f),5000),]
#plot
setwd("~/Research/GWAS-frontera/Supplementary Figures/phenotype and pgs")
png(file=paste0(pheno,"_pheno_pgs.png"), width=4, height=3, units="in", res=200)
p1 <- ggplot(data = df_m, aes(x=SCORE, y=pheno)) +
geom_point(alpha = 0.2, color="#207335") +
geom_abline(slope=m_lm$Beta, intercept = m_lm$Y0, color="#207335") +
theme_classic() +
theme(axis.title=element_blank(), axis.text = element_text(size=8.5)) +
annotate("text", x=min(df_m$SCORE), y=max(df_m$pheno), hjust=-0.1, size=3,
label=paste0("slope= ",round(m_lm$Beta,2)), color="#207335")
p2 <- ggplot(data = df_f, aes(x=SCORE, y=pheno)) +
geom_point(alpha = 0.2, color="#d67629") +
geom_abline(slope=f_lm$Beta, intercept = f_lm$Y0, color="#d67629") +
theme_classic() +
theme(axis.title=element_blank(), axis.text = element_text(size=8.5)) +
annotate("text", x=min(df_f$SCORE), y=max(df_f$pheno), hjust=-0.1, size=3,
label=paste0("slope= ",round(f_lm$Beta,2)), color="#d67629")
p <- grid.arrange(p1, p2, ncol=1, nrow=2,
top=textGrob(paste0("Sex-specific ", pheno_title, " and PGS"), gp=gpar(fontsize=12)),
left=textGrob(pheno_title, gp=gpar(fontsize=10), rot=90),
bottom=textGrob("PGS", gp=gpar(fontsize=10)) )
print(p)
dev.off()
}
# phenotype names
setwd("~/Research/GWAS-frontera/LDSC/")
ldsc_df <- read.csv("ldsc_results.txt", sep="\t", colClasses = c(rep("character",2), rep("NULL",5)))
ldsc_df <- unique(ldsc_df)
head(ldsc_df)
# phenotype names
setwd("~/Research/GWAS-frontera/LDSC/")
pheno_names <- read.csv("ldsc_results.txt", sep="\t", colClasses = c(rep("character",2), rep("NULL",5)))
pheno_names <- unique(pheno_names)
head(pheno_names)
pheno_names$Code[2]
nrow(pheno_names)
# phenotype names
setwd("~/Research/GWAS-frontera/LDSC/")
pheno_names <- read.csv("ldsc_results.txt", sep="\t", colClasses = c(rep("character",2), rep("NULL",5)))
pheno_names <- unique(pheno_names)
nrow(pheno_names)
# function for retrieving lm values
get_lm_coefficients <- function(df, sex) {
model <- lm(pheno ~ SCORE, df); model <- summary(model)
b <- model$coefficients[2]
err <- model$coefficients[2,2]
y_inter <- model$coefficients[1]
r2 <- model$r.squared
return( data.frame(Beta=b, Err=err, Y0=y_inter, R2=r2, Sex=sex) )
}
slope_list <- NULL
for (i in 1:27) {
pheno <- pheno_names$Code[i]
pheno_title <- pheno_names$Phenotype[i]
# load phenotype files
setwd("~/Research/Phenotypes")
df_pheno <- read.csv(paste0("pheno_",pheno,".txt"), sep="\t", colClasses = c("NULL","integer","numeric"))
df_sex <- read.csv("sex_ids.txt", sep="\t")
df_pheno <- merge(df_pheno, df_sex, by="IID")
colnames(df_pheno) <- c("IID", "pheno","sex")
# load pgs file
setwd(paste0("~/Research/GWAS-frontera/GWAS_results/",pheno))
file_name <- list.files(pattern="male_additive_")[2]
df_male <- read.csv(file_name, sep="", colClasses= c("NULL","integer",rep("NULL",3),"numeric"))
file_name <- list.files(pattern="female_additive_")
df_female <- read.csv(file_name, sep="", colClasses= c("NULL","integer",rep("NULL",3),"numeric"))
# merge phenotype and pgs df
df_m <- merge(df_pheno, df_male, by="IID")
df_f <- merge(df_pheno, df_female, by="IID")
# sex-specific; 1-male; 0-female
df_m <- df_m[df_m$sex == 1,]
df_f <- df_f[df_f$sex == 0,]
# regress
m_lm <-  get_lm_coefficients(df_m, "male")
f_lm <-  get_lm_coefficients(df_f, "female")
# add to slope list
slope_list <- rbind(rbind(slope_list, m_lm[-c(3)]), f_lm[-c(3)])
# thin out df for plotting
set.seed(1)
df_m <- df_m[sample(nrow(df_m),5000),]
df_f <- df_f[sample(nrow(df_f),5000),]
#plot
setwd("~/Research/GWAS-frontera/Supplementary Figures/phenotype and pgs")
png(file=paste0(pheno,"_pheno_pgs.png"), width=4, height=3, units="in", res=200)
p1 <- ggplot(data = df_m, aes(x=SCORE, y=pheno)) +
geom_point(alpha = 0.2, color="#207335") +
geom_abline(slope=m_lm$Beta, intercept = m_lm$Y0, color="#207335") +
theme_classic() +
theme(axis.title=element_blank(), axis.text = element_text(size=8.5)) +
annotate("text", x=min(df_m$SCORE), y=max(df_m$pheno), hjust=-0.1, size=3,
label=paste0("slope= ",round(m_lm$Beta,2)), color="#207335")
p2 <- ggplot(data = df_f, aes(x=SCORE, y=pheno)) +
geom_point(alpha = 0.2, color="#d67629") +
geom_abline(slope=f_lm$Beta, intercept = f_lm$Y0, color="#d67629") +
theme_classic() +
theme(axis.title=element_blank(), axis.text = element_text(size=8.5)) +
annotate("text", x=min(df_f$SCORE), y=max(df_f$pheno), hjust=-0.1, size=3,
label=paste0("slope= ",round(f_lm$Beta,2)), color="#d67629")
p <- grid.arrange(p1, p2, ncol=1, nrow=2,
top=textGrob(paste0("Sex-specific ", pheno_title, " and PGS"), gp=gpar(fontsize=12)),
left=textGrob(pheno_title, gp=gpar(fontsize=10), rot=90),
bottom=textGrob("PGS", gp=gpar(fontsize=10)) )
print(p)
dev.off()
}
slope_list
setwd("~/Research/GWAS-frontera/PGS")
write.table(slope_list, file = "sexspecific_pheno_pgs_lm.txt", sep="\t", row.names = F, quote = F)
head(slope_list)
rep(pheno_names,2)
rep(pheno_names$Pheno,2)
rep(pheno_names$Pheno,each=2)
test <- cbind(rep(pheno_names$Pheno,each=2), slope_list)
head(test)
pheno <- rep(pheno_names$Code,each=2)
pheno_title <- rep(pheno_names$Phenotype,each=2
pheno_title <- rep(pheno_names$Phenotype,each=2)
pheno <- rep(pheno_names$Code,each=2)
pheno_title <- rep(pheno_names$Phenotype,each=2)
test <- cbind(rep(pheno_names$Pheno,each=2), slope_list)
head(test)
test <- cbind(pheno, pheno_title, slope_list)
head(test)
pheno <- rep(pheno_names$Code,each=2)
pheno_title <- rep(pheno_names$Phenotype,each=2)
slope_list <- cbind(pheno, pheno_title, slope_list)
head(slope_list)
setwd("~/Research/GWAS-frontera/PGS")
write.table(slope_list, file = "sexspecific_pheno_pgs_lm.txt", sep="\t", row.names = F, quote = F)
ggplot(slope_list, aes(x=pheno_title, y=Beta, color=Sex)) +
#geom_hline(yintercept = 0, linetype="dashed", alpha=0.5) +
geom_point(size=2, position=position_dodge(width=0.7)) +
#geom_errorbar(aes(ymin=Est-(1.645*Err), ymax=Est+(1.645*Err)),
#              alpha= 0.6, width=0.5, position=position_dodge(width=0.7)) +
geom_rect(data=rects, aes(xmin=xstart,xmax=xend,ymin=-1.5,ymax=1.2),
inherit.aes = FALSE, alpha=0.2, fill = c(rep(c("grey","white"),13))) +
labs(x="", y="R") +
scale_y_continuous(expand=c(0.01,0)) +
theme_classic() +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_blank(),
legend.position = "top", legend.title=element_text(size=14), legend.text=element_text(size=12)) +
scale_color_manual(values=c("#d67629","#207335")) +
coord_flip()
# plot overall slopes
rects <- data.frame(xstart = seq(0.5,26.5,1), xend = seq(1.5,27.5,1), col = c(1,rep(c(2,1),13)))
rects <- rects[1:26,]
ggplot(slope_list, aes(x=pheno_title, y=Beta, color=Sex)) +
#geom_hline(yintercept = 0, linetype="dashed", alpha=0.5) +
geom_point(size=2, position=position_dodge(width=0.7)) +
#geom_errorbar(aes(ymin=Est-(1.645*Err), ymax=Est+(1.645*Err)),
#              alpha= 0.6, width=0.5, position=position_dodge(width=0.7)) +
geom_rect(data=rects, aes(xmin=xstart,xmax=xend,ymin=-1.5,ymax=1.2),
inherit.aes = FALSE, alpha=0.2, fill = c(rep(c("grey","white"),13))) +
labs(x="", y="R") +
scale_y_continuous(expand=c(0.01,0)) +
theme_classic() +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_blank(),
legend.position = "top", legend.title=element_text(size=14), legend.text=element_text(size=12)) +
scale_color_manual(values=c("#d67629","#207335")) +
coord_flip()
max(slope_list$Beta)
ggplot(slope_list, aes(x=pheno_title, y=Beta, color=Sex)) +
#geom_hline(yintercept = 0, linetype="dashed", alpha=0.5) +
geom_point(size=2, position=position_dodge(width=0.7)) +
#geom_errorbar(aes(ymin=Est-(1.645*Err), ymax=Est+(1.645*Err)),
#              alpha= 0.6, width=0.5, position=position_dodge(width=0.7)) +
geom_rect(data=rects, aes(xmin=xstart,xmax=xend,ymin=0,ymax=24000),
inherit.aes = FALSE, alpha=0.2, fill = c(rep(c("grey","white"),13))) +
labs(x="", y="R") +
scale_y_continuous(expand=c(0.01,0)) +
theme_classic() +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_blank(),
legend.position = "top", legend.title=element_text(size=14), legend.text=element_text(size=12)) +
scale_color_manual(values=c("#d67629","#207335")) +
coord_flip()
head(slope_list)
b_m <- slope_list[slope_list$Sex == "male",]
b_f <- slope_list[slope_list$Sex == "female",]
head(b)m
head(b_m)
head(b_f)
# get mash weights
setwd("~/Research/GWAS-frontera/mash/")
mash_weights <- read.csv("mash_weights.txt", sep="\t")
head(mash_weights)
mash_weights <- read.csv("mash_weights.txt", sep="\t")
# create column of difference of male and female mash weights
mash_weights <- mash_weights %>%
mutate(diff_mf = sum_weight_m - sum_weight_f) %>%
select(c(1,6))
head(mash_weights)
b_m$diff_beta <- b_m$Beta - b_f$Beta
plot_df <- merge(b_m, mash_weights, by.x="pheno", by.y="phenotype")
head(plot_df)
plot_df <- plot_df[c(1,2,7,8)]
head(plot_df)
ggplot(plot_df, aes(diff_mf, diff_beta)) +
geom_point()
test <- plot_df[plot_df$pheno != "creatinine",]
ggplot(test, aes(diff_mf, diff_beta)) +
geom_point() +
ggplot(test, aes(diff_mf, diff_beta)) +
geom_point()
ggplot(test, aes(diff_mf, diff_beta)) +
geom_point()
ggplot(test, aes(diff_mf, diff_beta)) +
geom_point() +
geom_label(label=pheno_title)
ggplot(test, aes(diff_mf, diff_beta)) +
geom_point() +
geom_label(aes(label=pheno_title))
b_m$ratio_beta <- b_m$Beta / b_f$Beta
head(m_m)
head(b_m)
### OWN STUFF
b_m <- slope_list[slope_list$Sex == "male",]
b_f <- slope_list[slope_list$Sex == "female",]
b_m$ratio_beta <- b_m$Beta / b_f$Beta
head(b_m)
# get mash weights
setwd("~/Research/GWAS-frontera/mash/")
mash_weights <- read.csv("mash_weights.txt", sep="\t")
# create column of difference of male and female mash weights
mash_weights <- mash_weights %>%
mutate(diff_mf = sum_weight_m - sum_weight_f) %>%
select(c(1,6))
plot_df <- merge(b_m, mash_weights, by.x="pheno", by.y="phenotype")
plot_df <- plot_df[c(1,2,7,8)]
test <- plot_df[plot_df$pheno != "creatinine",]
ggplot(test, aes(diff_mf, ratio_beta)) +
geom_point() +
geom_label(aes(label=pheno_title))
