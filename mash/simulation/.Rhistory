scale_fill_material("blue-grey")
df_small
df_small$corr <- factor(df_small$corr, levels = c('partial', 'perfect', 'uncorrelated', 'negative'))
df_small$variable <- factor(df_small$variable, levels = c('F > M', 'F = M', 'M > F'))
df_small <- df_small %>% mutate_at(3, as.numeric) %>%
arrange(corr, variable)
ggplot(df_small, aes(x=variable, y= corr, fill= value)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(value,3)), color= "white", size= 4) +
labs(title="Weights of Hypothesis Matrices", xlab="Magnitude", ylab="Correlation") +
theme_pubclean() +
theme(axis.text=element_text(size=12), legend.position = "none") +
scale_fill_material("blue-grey")
df_small$corr <- factor(df_small$corr, levels = c('negative', 'uncorrelated', 'partial', 'perfect'))
df_small$variable <- factor(df_small$variable, levels = c('F > M', 'F = M', 'M > F'))
df_small <- df_small %>% mutate_at(3, as.numeric) %>%
arrange(corr, variable)
ggplot(df_small, aes(x=variable, y= corr, fill= value)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(value,3)), color= "white", size= 4) +
labs(title="Weights of Hypothesis Matrices", xlab="Magnitude", ylab="Correlation") +
theme_pubclean() +
theme(axis.text=element_text(size=12), legend.position = "none") +
scale_fill_material("blue-grey")
lay <- rbind( c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(2,3,3,3))
p <- gridExtra::grid.arrange(big, small, ncol=1, layout_matrix=lay)
ggplot(df_small, aes(x=variable, y= corr, fill= value)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(value,3)), color= "white", size= 4) +
labs(title="Weights of Hypothesis Matrices", xlab="Magnitude", ylab="Correlation") +
theme_pubclean() +
theme(axis.text=element_text(size=12), legend.position = "none") +
scale_fill_material("blue-grey")
lay <- rbind( c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(2,3,3,3))
p <- gridExtra::grid.arrange(big, small, ncol=1, layout_matrix=lay)
### SMALL HEATMAP ###
nan_weight <- 1 / (1 - df_null$Mean[1])
df_ave$Mean = df_ave$Mean * nan_weight
df_ave$effect <- as.character(df_ave$effect)
df_ave
df_ave$effect <- as.character(df_ave$effect) ; df_ave$correlation <- as.numeric(df_ave$correlation)
### SMALL HEATMAP ###
nan_weight <- 1 / (1 - df_null$Mean[1])
df_ave$Mean = df_ave$Mean * nan_weight
df_ave$effect <- as.character(df_ave$effect) ; df_ave$correlation <- as.numeric(df_ave$correlation)
# group by sex
group_sex <- function(sex){
df_sex <- df_ave %>% filter(substr(effect,1,1) == sex) %>%
group_by(correlation) %>%
summarise(mean_sum = sum(Mean)) %>%
as.data.frame()
return(df_sex)
}
for (s in c('f','m','e')) {
assign(s, group_sex(s))
}
f
m
e
e
df_small <- data.frame(cbind(e[,1], f[,2], e[,2], m[,2])); colnames(df_small) <- c('corr', 'F', 'E', 'M')
df_small <- data.frame(rbind(
c('perfect', colSums(df_small[df_small$corr == 1, 2:4])),
c('partial', colSums(df_small[(df_small$corr > 0) & (df_small$corr < 1), 2:4])),
c('uncorrelated', colSums(df_small[(df_small$corr == 0), 2:4])),
c('negative', colSums(df_small[(df_small$corr < 0), 2:4]))
))
colnames(df_small) <- c('corr', 'F > M', 'F = M', 'M > F')
df_small <- melt(df_small, id.vars=c('corr'))
df_small$corr <- factor(df_small$corr, levels = c('negative', 'uncorrelated', 'partial', 'perfect'))
df_small$variable <- factor(df_small$variable, levels = c('F > M', 'F = M', 'M > F'))
df_small <- df_small %>% mutate_at(3, as.numeric) %>%
arrange(corr, variable)
ggplot(df_small, aes(x=variable, y= corr, fill= value)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(value,3)), color= "white", size= 4) +
labs(title="Weights of Hypothesis Matrices", xlab="Magnitude", ylab="Correlation") +
theme_pubclean() +
theme(axis.text=element_text(size=12), legend.position = "none") +
scale_fill_material("blue-grey")
pheno <- "height"
setwd("~/Research/GWAS-frontera/OLD/GWAS_Results_OLD/height")
df <- read.csv(paste0(pheno,"mixprop_100_all.txt"), sep="\t")
# get mean and sem
df_values <- data.frame( Name = df$mix_0, Mean = rowMeans(df[2:101]),
SE = rowSds(as.matrix(df[2:101])) / sqrt(length(colnames(df)) - 1) )
# split matrice names
df_values <- df_values %>%
separate(Name, c("sex","correlation","effect"), sep="[_]", fill="right") %>%
mutate(effect = paste0(sex, effect))
# split between means and sem
df_ave <- df_values[2:nrow(df_values),c(2,3,4)]
df_sem <- df_values[2:nrow(df_values),c(2,3,5)]
prepare_df <- function(df) {
df$effect <- factor(df$effect, levels = c('f1','f3', 'f2', 'f1.5','equal1','m1.5','m2','m3','m1'))
df <- df %>% mutate_at(1, as.numeric) %>%
arrange(correlation, effect)
return(df)
}
df_ave <- prepare_df(df_ave)
##
df_ave <- prepare_df(df_values[2:nrow(df_values),c(2,3,4)])
df_null <- prepare_df(df_values[1,c(2,3,4)])
df_null$Mean <- as.numeric(df_null$Mean)
df_ave$Mean <- as.numeric(df_ave$Mean)
big <- ggplot(df_ave, aes(x= effect, y= correlation, fill= Mean)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(Mean,3)), color= "white", size= 4) +
scale_y_continuous(expand=c(0,0)) +
labs(title="Weights of Hypothesis Matrices", xlab="Magnitude", ylab="Correlation") +
theme_pubclean() +
theme(axis.text=element_text(size=12), legend.position = "none") +
scale_fill_material("blue-grey")
small <- ggplot(df_null, aes(x= 0, y= 0, fill= Mean)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(Mean,3)), color= "white", size= 4) +
scale_y_continuous(expand=c(0,0)) +
labs(title="Weight of No Effect Matrice", xlab="Magnitude", ylab="Correlation") +
theme_pubclean() +
theme(axis.text=element_blank(), axis.title=element_blank(), legend.position = "none",
axis.ticks = element_blank(), plot.title = element_text(size=10)) +
scale_fill_material("blue-grey")
lay <- rbind( c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(2,3,3,3))
p <- gridExtra::grid.arrange(big, small, ncol=1, layout_matrix=lay)
### SMALL HEATMAP ###
nan_weight <- 1 / (1 - df_null$Mean[1])
df_ave$Mean = df_ave$Mean * nan_weight
df_ave$effect <- as.character(df_ave$effect) ; df_ave$correlation <- as.numeric(df_ave$correlation)
# group by sex
group_sex <- function(sex){
df_sex <- df_ave %>% filter(substr(effect,1,1) == sex) %>%
group_by(correlation) %>%
summarise(mean_sum = sum(Mean)) %>%
as.data.frame()
return(df_sex)
}
for (s in c('f','m','e')) {
assign(s, group_sex(s))
}
e
df_small <- data.frame(cbind(e[,1], f[,2], e[,2], m[,2])); colnames(df_small) <- c('corr', 'F', 'E', 'M')
df_small <- data.frame(rbind(
c('perfect', colSums(df_small[df_small$corr == 1, 2:4])),
c('partial', colSums(df_small[(df_small$corr > 0) & (df_small$corr < 1), 2:4])),
c('uncorrelated', colSums(df_small[(df_small$corr == 0), 2:4])),
c('negative', colSums(df_small[(df_small$corr < 0), 2:4]))
))
colnames(df_small) <- c('corr', 'F > M', 'F = M', 'M > F')
df_small <- melt(df_small, id.vars=c('corr'))
df_small$corr <- factor(df_small$corr, levels = c('negative', 'uncorrelated', 'partial', 'perfect'))
df_small$variable <- factor(df_small$variable, levels = c('F > M', 'F = M', 'M > F'))
df_small <- df_small %>% mutate_at(3, as.numeric) %>%
arrange(corr, variable)
ggplot(df_small, aes(x=variable, y= corr, fill= value)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(value,3)), color= "white", size= 4) +
labs(title="Weights of Hypothesis Matrices", xlab="Magnitude", ylab="Correlation") +
theme_pubclean() +
theme(axis.text=element_text(size=12), legend.position = "none") +
scale_fill_material("blue-grey")
lay <- rbind( c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(2,3,3,3))
p <- gridExtra::grid.arrange(big, small, ncol=1, layout_matrix=lay)
df_ave %>% filter(substr(effect,1,1) == e)
df_ave %>% filter(substr(effect,1,1) == e)
df_ave %>% filter(substr(effect,1,1) == 'e')
df_ave %>% filter(substr(effect,1,1) == 'f')
df_small <- data.frame(cbind(e[,1], f[,2], e[,2], m[,2])); colnames(df_small) <- c('corr', 'F', 'E', 'M')
df_small
df <- read.csv(paste0(pheno,"mixprop_100_all.txt"), sep="\t")
sqrt(length(colnames(df)) - 1)
df[101]
# split matrice names
df_values <- df_values %>%
separate(Name, c("sex","correlation","effect"), sep="[_]", fill="right") %>%
mutate(effect = paste0(sex, effect))
# get mean and sem
df_values <- data.frame( Name = df$mix_0, Mean = rowMeans(df[2:101]),
SE = rowSds(as.matrix(df[2:101])) / sqrt(length(colnames(df)) - 1) )
# split matrice names
df_values <- df_values %>%
separate(Name, c("sex","correlation","effect"), sep="[_]", fill="right") %>%
mutate(effect = paste0(sex, effect))
df_values
# split between means and sem
df_ave <- df_values[2:nrow(df_values),c(2,3,4)]
df_sem <- df_values[2:nrow(df_values),c(2,3,5)]
df_ave
str(df_ave)
prepare_df <- function(df) {
df$effect <- factor(df$effect, levels = c('f1','f3', 'f2', 'f1.5','equal1','m1.5','m2','m3','m1'))
df <- df %>% mutate_at(1, as.numeric) %>%
arrange(correlation, effect)
return(df)
}
# split between null and values
df_ave <- prepare_df(df_values[2:nrow(df_values),c(2,3,4)])
df_null <- prepare_df(df_values[1,c(2,3,4)])
df_null$Mean <- as.numeric(df_null$Mean)
df_ave$Mean <- as.numeric(df_ave$Mean)
df_ave
big <- ggplot(df_ave, aes(x= effect, y= correlation, fill= Mean)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(Mean,3)), color= "white", size= 4) +
scale_y_continuous(expand=c(0,0)) +
labs(title="Weights of Hypothesis Matrices", xlab="Magnitude", ylab="Correlation") +
theme_pubclean() +
theme(axis.text=element_text(size=12), legend.position = "none") +
scale_fill_material("blue-grey")
small <- ggplot(df_null, aes(x= 0, y= 0, fill= Mean)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(Mean,3)), color= "white", size= 4) +
scale_y_continuous(expand=c(0,0)) +
labs(title="Weight of No Effect Matrice", xlab="Magnitude", ylab="Correlation") +
theme_pubclean() +
theme(axis.text=element_blank(), axis.title=element_blank(), legend.position = "none",
axis.ticks = element_blank(), plot.title = element_text(size=10)) +
scale_fill_material("blue-grey")
lay <- rbind( c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(2,3,3,3))
p <- gridExtra::grid.arrange(big, small, ncol=1, layout_matrix=lay)
library(ggplot2)
library(ggrepel)
library(ggsci)
library(reshape2)
library(ggbreak)
# get phenotypic variance
setwd("~/Research/GWAS-frontera/Phenotypes")
pheno_var <- NULL
pheno_list <- c("height","bmi","testosterone","RBC_count","IGF1","creatinine","weight","calcium",
"protein_total","whole_body_fat_mass","urate","arm_fatfree_mass_L",
"arm_fatfree_mass_R", "eosinophil_perc", "lymphocyte_perc", "waist_circ",
"hip_circ", "waist_to_hip", "wth_bmi_adj","diastolicBP_auto","systolicBP_auto",
"albumin", "pulse_rate")
df_sex <- read.csv("sex_ids.txt", sep="\t")
for (pheno in pheno_list) {
df_pheno <- read.csv(paste0("pheno_",pheno,".txt"), sep="\t", colClasses = c("NULL","integer","numeric"))
df_pheno <- merge(df_pheno, df_sex, by='IID')
male_var <- var(df_pheno[df_pheno$sex == 1, 2])
female_var <- var(df_pheno[df_pheno$sex == 0, 2])
pheno_var <- rbind(pheno_var, data.frame(pheno=pheno, m_var=male_var, f_var=female_var))
}
# get heritability
setwd("~/Research/GWAS-frontera/LDSC")
ldsc_df <- read.csv("ldsc_results.txt", sep="\t")
ldsc_df <- ldsc_df[c(1,3,4)]
ldsc_df <- ldsc_df[ldsc_df$Sex != 'both_sex',]
ldsc_df <- dcast(ldsc_df, Code ~ Sex, value.var = "Heritability")
colnames(ldsc_df) <- c("pheno","f_h2","m_h2")
ldsc_df$f_h2e <- 1 - ldsc_df$f_h2
ldsc_df$m_h2e <- 1 - ldsc_df$m_h2
# merge variance and heritability dataframe
df <- merge(pheno_var, ldsc_df, by='pheno')
df$geno_var_m <- df$m_h2 * df$m_var ; df$geno_var_f <- df$f_h2 * df$f_var
df$env_var_m <- df$m_h2e * df$m_var ; df$env_var_f <- df$f_h2e * df$f_var
df$geno_var_ratio <- df$geno_var_m / df$geno_var_f
df$env_var_ratio <- df$env_var_m / df$env_var_f
df <- df[c(1,12,13)]
df$facet_y[df$env_var_ratio <= 2.5] <- 1
df$facet_y[df$env_var_ratio > 2.5] <- 2
df$facet_y[df$env_var_ratio > 20] <- 3
df$facet_x[df$geno_var_ratio <= 10] <- 2
df$facet_x[df$geno_var_ratio > 10] <- 1
# plot
g <- ggplot(data=df, aes(x= geno_var_ratio, y= env_var_ratio)) +
geom_point(size=2) +
labs(title="Genetic Variance Ratio to \nEnvironmental Variance Ratio",
x="Genetic Variance Ratio", y="Environmental Variance Ratio") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=15)) +
facet_grid(facet_x~facet_y, scales="free", space="free") +
geom_text_repel(label=df$pheno, size=3, max.overlaps=100, segment.alpha=0.5) +
theme_bw() + scale_color_npg()
g
# plot
g <- ggplot(data=df, aes(x= geno_var_ratio, y= env_var_ratio)) +
geom_point(size=2) +
geom_abline(slope = 1, intercept = 0) +
labs(title="Genetic Variance Ratio to \nEnvironmental Variance Ratio",
x="Genetic Variance Ratio", y="Environmental Variance Ratio") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=15)) +
facet_grid(facet_x~facet_y, scales="free", space="free") +
#geom_text_repel(label=df$pheno, size=3, max.overlaps=100, segment.alpha=0.5) +
theme_bw() + scale_color_npg()
g
### simulation
setwd("~/Research/GWAS-frontera/mash/simulation")
df2 <- read.csv("100_0.5_1.txt", sep="\t")
df2 <- data.frame(cbind(df$mix_0, df2$x))
colnames(df2) <- c("Name", "Mean")
### simulation
setwd("~/Research/GWAS-frontera/mash/simulation")
df2 <- read.csv("100_0.5_1.txt", sep="\t")
setwd("~/Research/GWAS-frontera/OLD/GWAS_Results_OLD/height")
df <- read.csv(paste0(pheno,"mixprop_100_all.txt"), sep="\t")
pheno <- "height"
setwd("~/Research/GWAS-frontera/OLD/GWAS_Results_OLD/height")
df <- read.csv(paste0(pheno,"mixprop_100_all.txt"), sep="\t")
### simulation
setwd("~/Research/GWAS-frontera/mash/simulation")
df2 <- read.csv("100_0.5_1.txt", sep="\t")
df2 <- data.frame(cbind(df$mix_0, df2$x))
colnames(df2) <- c("Name", "Mean")
df_values <- df2
# get mean and sem
df_values <- data.frame( Name = df$mix_0, Mean = rowMeans(df[2:101]),
SE = rowSds(as.matrix(df[2:101])) / sqrt(length(colnames(df)) - 1) )
# split matrice names
df_values <- df_values %>%
separate(Name, c("sex","correlation","effect"), sep="[_]", fill="right") %>%
mutate(effect = paste0(sex, effect))
prepare_df <- function(df) {
df$effect <- factor(df$effect, levels = c('f1','f3', 'f2', 'f1.5','equal1','m1.5','m2','m3','m1'))
df <- df %>% mutate_at(1, as.numeric) %>%
arrange(correlation, effect)
return(df)
}
# split between null and values
df_ave <- prepare_df(df_values[2:nrow(df_values),c(2,3,4)])
df_null <- prepare_df(df_values[1,c(2,3,4)])
df_null$Mean <- as.numeric(df_null$Mean)
df_ave$Mean <- as.numeric(df_ave$Mean)
big <- ggplot(df_ave, aes(x= effect, y= correlation, fill= Mean)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(Mean,3)), color= "white", size= 4) +
scale_y_continuous(expand=c(0,0)) +
labs(title="Weights of Hypothesis Matrices", xlab="Magnitude", ylab="Correlation") +
theme_pubclean() +
theme(axis.text=element_text(size=12), legend.position = "none") +
scale_fill_material("blue-grey")
small <- ggplot(df_null, aes(x= 0, y= 0, fill= Mean)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(Mean,3)), color= "white", size= 4) +
scale_y_continuous(expand=c(0,0)) +
labs(title="Weight of No Effect Matrice", xlab="Magnitude", ylab="Correlation") +
theme_pubclean() +
theme(axis.text=element_blank(), axis.title=element_blank(), legend.position = "none",
axis.ticks = element_blank(), plot.title = element_text(size=10)) +
scale_fill_material("blue-grey")
lay <- rbind( c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(2,3,3,3))
p <- gridExtra::grid.arrange(big, small, ncol=1, layout_matrix=lay)
pheno <- "height"
setwd("~/Research/GWAS-frontera/OLD/GWAS_Results_OLD/height")
df <- read.csv(paste0(pheno,"mixprop_100_all.txt"), sep="\t")
### simulation
setwd("~/Research/GWAS-frontera/mash/simulation")
df2 <- read.csv("100_0.5_1.txt", sep="\t")
df2 <- data.frame(cbind(df$mix_0, df2$x))
colnames(df2) <- c("Name", "Mean")
df_values <- df2
# split matrice names
df_values <- df_values %>%
separate(Name, c("sex","correlation","effect"), sep="[_]", fill="right") %>%
mutate(effect = paste0(sex, effect))
prepare_df <- function(df) {
df$effect <- factor(df$effect, levels = c('f1','f3', 'f2', 'f1.5','equal1','m1.5','m2','m3','m1'))
df <- df %>% mutate_at(1, as.numeric) %>%
arrange(correlation, effect)
return(df)
}
# split between null and values
df_ave <- prepare_df(df_values[2:nrow(df_values),c(2,3,4)])
df_null <- prepare_df(df_values[1,c(2,3,4)])
df_null$Mean <- as.numeric(df_null$Mean)
df_ave$Mean <- as.numeric(df_ave$Mean)
big <- ggplot(df_ave, aes(x= effect, y= correlation, fill= Mean)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(Mean,3)), color= "white", size= 4) +
scale_y_continuous(expand=c(0,0)) +
labs(title="Weights of Hypothesis Matrices", xlab="Magnitude", ylab="Correlation") +
theme_pubclean() +
theme(axis.text=element_text(size=12), legend.position = "none") +
scale_fill_material("blue-grey")
small <- ggplot(df_null, aes(x= 0, y= 0, fill= Mean)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(Mean,3)), color= "white", size= 4) +
scale_y_continuous(expand=c(0,0)) +
labs(title="Weight of No Effect Matrice", xlab="Magnitude", ylab="Correlation") +
theme_pubclean() +
theme(axis.text=element_blank(), axis.title=element_blank(), legend.position = "none",
axis.ticks = element_blank(), plot.title = element_text(size=10)) +
scale_fill_material("blue-grey")
lay <- rbind( c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(2,3,3,3))
p <- gridExtra::grid.arrange(big, small, ncol=1, layout_matrix=lay)
### simulation
setwd("~/Research/GWAS-frontera/mash/simulation")
df2 <- read.csv("100_0.5_1.5.txt", sep="\t")
df2 <- data.frame(cbind(df$mix_0, df2$x))
colnames(df2) <- c("Name", "Mean")
df_values <- df2
# split matrice names
df_values <- df_values %>%
separate(Name, c("sex","correlation","effect"), sep="[_]", fill="right") %>%
mutate(effect = paste0(sex, effect))
prepare_df <- function(df) {
df$effect <- factor(df$effect, levels = c('f1','f3', 'f2', 'f1.5','equal1','m1.5','m2','m3','m1'))
df <- df %>% mutate_at(1, as.numeric) %>%
arrange(correlation, effect)
return(df)
}
# split between null and values
df_ave <- prepare_df(df_values[2:nrow(df_values),c(2,3,4)])
df_null <- prepare_df(df_values[1,c(2,3,4)])
df_null$Mean <- as.numeric(df_null$Mean)
df_ave$Mean <- as.numeric(df_ave$Mean)
big <- ggplot(df_ave, aes(x= effect, y= correlation, fill= Mean)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(Mean,3)), color= "white", size= 4) +
scale_y_continuous(expand=c(0,0)) +
labs(title="Weights of Hypothesis Matrices", xlab="Magnitude", ylab="Correlation") +
theme_pubclean() +
theme(axis.text=element_text(size=12), legend.position = "none") +
scale_fill_material("blue-grey")
small <- ggplot(df_null, aes(x= 0, y= 0, fill= Mean)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(Mean,3)), color= "white", size= 4) +
scale_y_continuous(expand=c(0,0)) +
labs(title="Weight of No Effect Matrice", xlab="Magnitude", ylab="Correlation") +
theme_pubclean() +
theme(axis.text=element_blank(), axis.title=element_blank(), legend.position = "none",
axis.ticks = element_blank(), plot.title = element_text(size=10)) +
scale_fill_material("blue-grey")
lay <- rbind( c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(2,3,3,3))
p <- gridExtra::grid.arrange(big, small, ncol=1, layout_matrix=lay)
# get phenotypic variance
setwd("~/Research/GWAS-frontera/Phenotypes")
pheno_var <- NULL
pheno_list <- c("height","bmi","testosterone","RBC_count","IGF1","creatinine","weight","calcium",
"protein_total","whole_body_fat_mass","urate","arm_fatfree_mass_L",
"arm_fatfree_mass_R", "eosinophil_perc", "lymphocyte_perc", "waist_circ",
"hip_circ", "waist_to_hip", "wth_bmi_adj","diastolicBP_auto","systolicBP_auto",
"albumin", "pulse_rate")
df_sex <- read.csv("sex_ids.txt", sep="\t")
for (pheno in pheno_list) {
df_pheno <- read.csv(paste0("pheno_",pheno,".txt"), sep="\t", colClasses = c("NULL","integer","numeric"))
df_pheno <- merge(df_pheno, df_sex, by='IID')
male_var <- var(df_pheno[df_pheno$sex == 1, 2])
female_var <- var(df_pheno[df_pheno$sex == 0, 2])
pheno_var <- rbind(pheno_var, data.frame(pheno=pheno, m_var=male_var, f_var=female_var))
}
# get heritability
setwd("~/Research/GWAS-frontera/LDSC")
ldsc_df <- read.csv("ldsc_results.txt", sep="\t")
ldsc_df <- ldsc_df[c(1,3,4)]
ldsc_df <- ldsc_df[ldsc_df$Sex != 'both_sex',]
ldsc_df <- dcast(ldsc_df, Code ~ Sex, value.var = "Heritability")
colnames(ldsc_df) <- c("pheno","f_h2","m_h2")
ldsc_df$f_h2e <- 1 - ldsc_df$f_h2
ldsc_df$m_h2e <- 1 - ldsc_df$m_h2
# merge variance and heritability dataframe
df <- merge(pheno_var, ldsc_df, by='pheno')
df$geno_var_m <- df$m_h2 * df$m_var ; df$geno_var_f <- df$f_h2 * df$f_var
df$env_var_m <- df$m_h2e * df$m_var ; df$env_var_f <- df$f_h2e * df$f_var
df$geno_var_ratio <- df$geno_var_m / df$geno_var_f
df$env_var_ratio <- df$env_var_m / df$env_var_f
df <- df[c(1,12,13)]
df$facet_y[df$env_var_ratio <= 2.5] <- 1
df$facet_y[df$env_var_ratio > 2.5] <- 2
df$facet_y[df$env_var_ratio > 20] <- 3
df$facet_x[df$geno_var_ratio <= 10] <- 2
df$facet_x[df$geno_var_ratio > 10] <- 1
# plot
g <- ggplot(data=df, aes(x= geno_var_ratio, y= env_var_ratio)) +
geom_point(size=2) +
geom_abline(slope = 1, intercept = 0) +
labs(title="Genetic Variance Ratio to \nEnvironmental Variance Ratio",
x="Genetic Variance Ratio", y="Environmental Variance Ratio") +
theme(axis.text = element_text(size=12), axis.title = element_text(size=16), plot.title=element_text(size=15)) +
facet_grid(facet_x~facet_y, scales="free", space="free") +
geom_text_repel(label=df$pheno, size=3, max.overlaps=100, segment.alpha=0.5) +
theme_bw() + scale_color_npg()
g
pheno <- "height"
setwd("~/Research/GWAS-frontera/OLD/GWAS_Results_OLD/height")
df <- read.csv(paste0(pheno,"mixprop_100_all.txt"), sep="\t")
### simulation
setwd("~/Research/GWAS-frontera/mash/simulation")
df2 <- read.csv("100_0.5_5.txt", sep="\t")
df2 <- data.frame(cbind(df$mix_0, df2$x))
colnames(df2) <- c("Name", "Mean")
df_values <- df2
# split matrice names
df_values <- df_values %>%
separate(Name, c("sex","correlation","effect"), sep="[_]", fill="right") %>%
mutate(effect = paste0(sex, effect))
prepare_df <- function(df) {
df$effect <- factor(df$effect, levels = c('f1','f3', 'f2', 'f1.5','equal1','m1.5','m2','m3','m1'))
df <- df %>% mutate_at(1, as.numeric) %>%
arrange(correlation, effect)
return(df)
}
# split between null and values
df_ave <- prepare_df(df_values[2:nrow(df_values),c(2,3,4)])
df_null <- prepare_df(df_values[1,c(2,3,4)])
df_null$Mean <- as.numeric(df_null$Mean)
df_ave$Mean <- as.numeric(df_ave$Mean)
big <- ggplot(df_ave, aes(x= effect, y= correlation, fill= Mean)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(Mean,3)), color= "white", size= 4) +
scale_y_continuous(expand=c(0,0)) +
labs(title="Weights of Hypothesis Matrices", xlab="Magnitude", ylab="Correlation") +
theme_pubclean() +
theme(axis.text=element_text(size=12), legend.position = "none") +
scale_fill_material("blue-grey")
small <- ggplot(df_null, aes(x= 0, y= 0, fill= Mean)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(Mean,3)), color= "white", size= 4) +
scale_y_continuous(expand=c(0,0)) +
labs(title="Weight of No Effect Matrice", xlab="Magnitude", ylab="Correlation") +
theme_pubclean() +
theme(axis.text=element_blank(), axis.title=element_blank(), legend.position = "none",
axis.ticks = element_blank(), plot.title = element_text(size=10)) +
scale_fill_material("blue-grey")
lay <- rbind( c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(2,3,3,3))
p <- gridExtra::grid.arrange(big, small, ncol=1, layout_matrix=lay)
