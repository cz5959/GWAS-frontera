c('partial,\npositive', colSums(df_small[(df_small$corr > 0) & (df_small$corr < 1), 2:4])),
c('uncorrelated', colSums(df_small[(df_small$corr == 0), 2:4])),
c('negative', colSums(df_small[(df_small$corr < 0), 2:4]))
))
# edit col names and data type
colnames(df_small) <- c('corr', 'female > male', 'female = male', 'female < male')
df_small <- melt(df_small, id.vars=c('corr'))
df_small <- df_small %>% mutate_at(3, as.numeric) %>%
arrange(corr, variable)
colnames(df_small) <- c("correlation", "magnitude", "value")
# sum across correlation and magnitude groups
sum_mag <- df_small %>%
group_by(magnitude) %>%
summarise(sum= sum(value))
sum_corr <- df_small %>%
group_by(correlation) %>%
summarise(sum = sum(value))
# assign df to variable
assign(paste0(p_val,"_mag"), as.data.frame(sum_mag))
assign(paste0(p_val,"_corr"), as.data.frame(sum_corr))
}
all_null <- cbind(all_null, null)
all_null
# ORGANIZE FOR PLOT
# merge p-value mixture weight tables
corr_list <- list(`0.05_corr`, `1_corr`,`1e-05_corr`,`5e-08_corr`)
corr_all <- corr_list %>%
reduce(full_join, by='correlation') %>%
rename("5e-8"=sum.y.y, "1e-5"=sum.x.x, "0.05"=sum.x, "1"=sum.y) %>%
gather(threshold, weight, 2:5) %>%
mutate(threshold = factor(threshold, levels=c("5e-8", "1e-5", "0.05", "1")))
corr_all$correlation <- factor(corr_all$correlation,
levels = c('negative', 'uncorrelated', 'partial,\npositive', 'perfect'))
mag_list <- list(`0.05_mag`, `1_mag`,`1e-05_mag`,`5e-08_mag`)
mag_all <- mag_list %>%
reduce(full_join, by='magnitude') %>%
rename("5e-8"=sum.y.y, "1e-5"=sum.x.x, "0.05"=sum.x, "1"=sum.y) %>%
gather(threshold, weight, 2:5) %>%
mutate(threshold = factor(threshold, levels=c("5e-8", "1e-5", "0.05", "1")))
# PLOT
# pdf 3x4
colors <- c("#d1b724", "#563f61", "#b0464f", "#2b62d9")
pdf(file=paste0(pheno,"_corr_same.pdf"), width=4, height=3)
corr_plot <-
ggplot(corr_all, aes(x=threshold, y=weight*100, fill=correlation)) +
geom_bar(position="stack", stat="identity") +
theme_classic() +
scale_y_continuous(expand=c(0,0)) +
labs(title=title, x="P-value Threshold", y="Weight", fill="Correlation") +
scale_fill_manual(values = colors) +
theme(axis.title=element_text(size=11), axis.text=element_text(size=9))
print(corr_plot)
dev.off()
colors <- c("#d67629", "#829ed9", "#207335")
pdf(file=paste0(pheno,"_mag_same.pdf"), width=4, height=3)
mag_plot <-
ggplot(mag_all, aes(x=threshold, y=weight*100, fill=magnitude)) +
geom_bar(position="stack", stat="identity") +
theme_classic() +
scale_y_continuous(expand=c(0,0)) +
labs(title=title, x="P-value Threshold", y="Weight", fill="Magnitude") +
scale_fill_manual(values = colors) +
theme(axis.title=element_text(size=11), axis.text=element_text(size=9))
print(mag_plot)
dev.off()
# phenotype list
setwd("~/Research/GWAS-frontera/mash pvalue")
pheno <- "bmi"; title <- "BMI"
p_values <- factor(c("5e-08", "1e-05", "0.05", "1"))
null <- NULL  # START LOOP
for ( p_val in p_values ) {
# load mixture proportions by p-value
df <- read.csv(paste0(pheno,"_",p_val,"_same.txt"), sep="\t")
df <- cbind(mix, df)
# ORGANIZE
# split matrice names
df <- df %>%
separate(mix, c("sex","correlation","magnitude"), sep="[_]", fill="right") %>%
mutate(magnitude = paste0(sex, magnitude))
# organize by correlation and magnitude
prepare_df <- function(df) {
df$magnitude <- factor(df$magnitude, levels = c('f1','f3', 'f2', 'f1.5','equal1','m1.5','m2','m3','m1'))
df <- df %>% mutate_at(1, as.numeric) %>%
arrange(correlation, magnitude)
return(df)
}
# split between null and values
df_ave <- prepare_df(df[2:nrow(df),c(2,3,4)])
df_null <- prepare_df(df[1,c(2,3,4)])
null <- append(null, df_null$x)
# CONDENSE
nan_weight <- 1 / (1 - df_null$x[1])
df_ave$x = df_ave$x * nan_weight
df_ave$magnitude <- as.character(df_ave$magnitude) ; df_ave$correlation <- as.numeric(df_ave$correlation)
# group by sex
group_sex <- function(sex){
df_sex <- df_ave %>% filter(substr(magnitude,1,1) == sex) %>%
group_by(correlation) %>%
summarise(mean_sum = sum(x)) %>%
as.data.frame()
return(df_sex)
}
for (s in c('f','m','e')) {
assign(s, group_sex(s))
}
# group by correlation
df_small <- data.frame(cbind(e[,1], f[,2], e[,2], m[,2])); colnames(df_small) <- c('corr', 'F', 'E', 'M')
df_small <- data.frame(rbind(
c('perfect', colSums(df_small[df_small$corr == 1, 2:4])),
c('partial,\npositive', colSums(df_small[(df_small$corr > 0) & (df_small$corr < 1), 2:4])),
c('uncorrelated', colSums(df_small[(df_small$corr == 0), 2:4])),
c('negative', colSums(df_small[(df_small$corr < 0), 2:4]))
))
# edit col names and data type
colnames(df_small) <- c('corr', 'female > male', 'female = male', 'female < male')
df_small <- melt(df_small, id.vars=c('corr'))
df_small <- df_small %>% mutate_at(3, as.numeric) %>%
arrange(corr, variable)
colnames(df_small) <- c("correlation", "magnitude", "value")
# sum across correlation and magnitude groups
sum_mag <- df_small %>%
group_by(magnitude) %>%
summarise(sum= sum(value))
sum_corr <- df_small %>%
group_by(correlation) %>%
summarise(sum = sum(value))
# assign df to variable
assign(paste0(p_val,"_mag"), as.data.frame(sum_mag))
assign(paste0(p_val,"_corr"), as.data.frame(sum_corr))
}
all_null <- cbind(all_null, null)
all_null
# ORGANIZE FOR PLOT
# merge p-value mixture weight tables
corr_list <- list(`0.05_corr`, `1_corr`,`1e-05_corr`,`5e-08_corr`)
corr_all <- corr_list %>%
reduce(full_join, by='correlation') %>%
rename("5e-8"=sum.y.y, "1e-5"=sum.x.x, "0.05"=sum.x, "1"=sum.y) %>%
gather(threshold, weight, 2:5) %>%
mutate(threshold = factor(threshold, levels=c("5e-8", "1e-5", "0.05", "1")))
corr_all$correlation <- factor(corr_all$correlation,
levels = c('negative', 'uncorrelated', 'partial,\npositive', 'perfect'))
mag_list <- list(`0.05_mag`, `1_mag`,`1e-05_mag`,`5e-08_mag`)
mag_all <- mag_list %>%
reduce(full_join, by='magnitude') %>%
rename("5e-8"=sum.y.y, "1e-5"=sum.x.x, "0.05"=sum.x, "1"=sum.y) %>%
gather(threshold, weight, 2:5) %>%
mutate(threshold = factor(threshold, levels=c("5e-8", "1e-5", "0.05", "1")))
# PLOT
# pdf 3x4
colors <- c("#d1b724", "#563f61", "#b0464f", "#2b62d9")
pdf(file=paste0(pheno,"_corr_same.pdf"), width=4, height=3)
corr_plot <-
ggplot(corr_all, aes(x=threshold, y=weight*100, fill=correlation)) +
geom_bar(position="stack", stat="identity") +
theme_classic() +
scale_y_continuous(expand=c(0,0)) +
labs(title=title, x="P-value Threshold", y="Weight", fill="Correlation") +
scale_fill_manual(values = colors) +
theme(axis.title=element_text(size=11), axis.text=element_text(size=9))
print(corr_plot)
dev.off()
colors <- c("#d67629", "#829ed9", "#207335")
pdf(file=paste0(pheno,"_mag_same.pdf"), width=4, height=3)
mag_plot <-
ggplot(mag_all, aes(x=threshold, y=weight*100, fill=magnitude)) +
geom_bar(position="stack", stat="identity") +
theme_classic() +
scale_y_continuous(expand=c(0,0)) +
labs(title=title, x="P-value Threshold", y="Weight", fill="Magnitude") +
scale_fill_manual(values = colors) +
theme(axis.title=element_text(size=11), axis.text=element_text(size=9))
print(mag_plot)
dev.off()
pheno <- "wth_bmi_adj"; title <- "Waist:hip (bmi adjusted)"
p_values <- factor(c("5e-08", "1e-05", "0.05", "1"))
null <- NULL  # START LOOP
for ( p_val in p_values ) {
# load mixture proportions by p-value
df <- read.csv(paste0(pheno,"_",p_val,"_same.txt"), sep="\t")
df <- cbind(mix, df)
# ORGANIZE
# split matrice names
df <- df %>%
separate(mix, c("sex","correlation","magnitude"), sep="[_]", fill="right") %>%
mutate(magnitude = paste0(sex, magnitude))
# organize by correlation and magnitude
prepare_df <- function(df) {
df$magnitude <- factor(df$magnitude, levels = c('f1','f3', 'f2', 'f1.5','equal1','m1.5','m2','m3','m1'))
df <- df %>% mutate_at(1, as.numeric) %>%
arrange(correlation, magnitude)
return(df)
}
# split between null and values
df_ave <- prepare_df(df[2:nrow(df),c(2,3,4)])
df_null <- prepare_df(df[1,c(2,3,4)])
null <- append(null, df_null$x)
# CONDENSE
nan_weight <- 1 / (1 - df_null$x[1])
df_ave$x = df_ave$x * nan_weight
df_ave$magnitude <- as.character(df_ave$magnitude) ; df_ave$correlation <- as.numeric(df_ave$correlation)
# group by sex
group_sex <- function(sex){
df_sex <- df_ave %>% filter(substr(magnitude,1,1) == sex) %>%
group_by(correlation) %>%
summarise(mean_sum = sum(x)) %>%
as.data.frame()
return(df_sex)
}
for (s in c('f','m','e')) {
assign(s, group_sex(s))
}
# group by correlation
df_small <- data.frame(cbind(e[,1], f[,2], e[,2], m[,2])); colnames(df_small) <- c('corr', 'F', 'E', 'M')
df_small <- data.frame(rbind(
c('perfect', colSums(df_small[df_small$corr == 1, 2:4])),
c('partial,\npositive', colSums(df_small[(df_small$corr > 0) & (df_small$corr < 1), 2:4])),
c('uncorrelated', colSums(df_small[(df_small$corr == 0), 2:4])),
c('negative', colSums(df_small[(df_small$corr < 0), 2:4]))
))
# edit col names and data type
colnames(df_small) <- c('corr', 'female > male', 'female = male', 'female < male')
df_small <- melt(df_small, id.vars=c('corr'))
df_small <- df_small %>% mutate_at(3, as.numeric) %>%
arrange(corr, variable)
colnames(df_small) <- c("correlation", "magnitude", "value")
# sum across correlation and magnitude groups
sum_mag <- df_small %>%
group_by(magnitude) %>%
summarise(sum= sum(value))
sum_corr <- df_small %>%
group_by(correlation) %>%
summarise(sum = sum(value))
# assign df to variable
assign(paste0(p_val,"_mag"), as.data.frame(sum_mag))
assign(paste0(p_val,"_corr"), as.data.frame(sum_corr))
}
all_null <- cbind(all_null, null)
all_null
# ORGANIZE FOR PLOT
# merge p-value mixture weight tables
corr_list <- list(`0.05_corr`, `1_corr`,`1e-05_corr`,`5e-08_corr`)
corr_all <- corr_list %>%
reduce(full_join, by='correlation') %>%
rename("5e-8"=sum.y.y, "1e-5"=sum.x.x, "0.05"=sum.x, "1"=sum.y) %>%
gather(threshold, weight, 2:5) %>%
mutate(threshold = factor(threshold, levels=c("5e-8", "1e-5", "0.05", "1")))
corr_all$correlation <- factor(corr_all$correlation,
levels = c('negative', 'uncorrelated', 'partial,\npositive', 'perfect'))
mag_list <- list(`0.05_mag`, `1_mag`,`1e-05_mag`,`5e-08_mag`)
mag_all <- mag_list %>%
reduce(full_join, by='magnitude') %>%
rename("5e-8"=sum.y.y, "1e-5"=sum.x.x, "0.05"=sum.x, "1"=sum.y) %>%
gather(threshold, weight, 2:5) %>%
mutate(threshold = factor(threshold, levels=c("5e-8", "1e-5", "0.05", "1")))
# PLOT
# pdf 3x4
colors <- c("#d1b724", "#563f61", "#b0464f", "#2b62d9")
pdf(file=paste0(pheno,"_corr_same.pdf"), width=4, height=3)
corr_plot <-
ggplot(corr_all, aes(x=threshold, y=weight*100, fill=correlation)) +
geom_bar(position="stack", stat="identity") +
theme_classic() +
scale_y_continuous(expand=c(0,0)) +
labs(title=title, x="P-value Threshold", y="Weight", fill="Correlation") +
scale_fill_manual(values = colors) +
theme(axis.title=element_text(size=11), axis.text=element_text(size=9))
print(corr_plot)
dev.off()
colors <- c("#d67629", "#829ed9", "#207335")
pdf(file=paste0(pheno,"_mag_same.pdf"), width=4, height=3)
mag_plot <-
ggplot(mag_all, aes(x=threshold, y=weight*100, fill=magnitude)) +
geom_bar(position="stack", stat="identity") +
theme_classic() +
scale_y_continuous(expand=c(0,0)) +
labs(title=title, x="P-value Threshold", y="Weight", fill="Magnitude") +
scale_fill_manual(values = colors) +
theme(axis.title=element_text(size=11), axis.text=element_text(size=9))
print(mag_plot)
dev.off()
pheno <- "testosterone"; title <- "Testosterone"
p_values <- factor(c("5e-08", "1e-05", "0.05", "1"))
null <- NULL  # START LOOP
for ( p_val in p_values ) {
# load mixture proportions by p-value
df <- read.csv(paste0(pheno,"_",p_val,"_same.txt"), sep="\t")
df <- cbind(mix, df)
# ORGANIZE
# split matrice names
df <- df %>%
separate(mix, c("sex","correlation","magnitude"), sep="[_]", fill="right") %>%
mutate(magnitude = paste0(sex, magnitude))
# organize by correlation and magnitude
prepare_df <- function(df) {
df$magnitude <- factor(df$magnitude, levels = c('f1','f3', 'f2', 'f1.5','equal1','m1.5','m2','m3','m1'))
df <- df %>% mutate_at(1, as.numeric) %>%
arrange(correlation, magnitude)
return(df)
}
# split between null and values
df_ave <- prepare_df(df[2:nrow(df),c(2,3,4)])
df_null <- prepare_df(df[1,c(2,3,4)])
null <- append(null, df_null$x)
# CONDENSE
nan_weight <- 1 / (1 - df_null$x[1])
df_ave$x = df_ave$x * nan_weight
df_ave$magnitude <- as.character(df_ave$magnitude) ; df_ave$correlation <- as.numeric(df_ave$correlation)
# group by sex
group_sex <- function(sex){
df_sex <- df_ave %>% filter(substr(magnitude,1,1) == sex) %>%
group_by(correlation) %>%
summarise(mean_sum = sum(x)) %>%
as.data.frame()
return(df_sex)
}
for (s in c('f','m','e')) {
assign(s, group_sex(s))
}
# group by correlation
df_small <- data.frame(cbind(e[,1], f[,2], e[,2], m[,2])); colnames(df_small) <- c('corr', 'F', 'E', 'M')
df_small <- data.frame(rbind(
c('perfect', colSums(df_small[df_small$corr == 1, 2:4])),
c('partial,\npositive', colSums(df_small[(df_small$corr > 0) & (df_small$corr < 1), 2:4])),
c('uncorrelated', colSums(df_small[(df_small$corr == 0), 2:4])),
c('negative', colSums(df_small[(df_small$corr < 0), 2:4]))
))
# edit col names and data type
colnames(df_small) <- c('corr', 'female > male', 'female = male', 'female < male')
df_small <- melt(df_small, id.vars=c('corr'))
df_small <- df_small %>% mutate_at(3, as.numeric) %>%
arrange(corr, variable)
colnames(df_small) <- c("correlation", "magnitude", "value")
# sum across correlation and magnitude groups
sum_mag <- df_small %>%
group_by(magnitude) %>%
summarise(sum= sum(value))
sum_corr <- df_small %>%
group_by(correlation) %>%
summarise(sum = sum(value))
# assign df to variable
assign(paste0(p_val,"_mag"), as.data.frame(sum_mag))
assign(paste0(p_val,"_corr"), as.data.frame(sum_corr))
}
all_null <- cbind(all_null, null)
all_null
# ORGANIZE FOR PLOT
# merge p-value mixture weight tables
corr_list <- list(`0.05_corr`, `1_corr`,`1e-05_corr`,`5e-08_corr`)
corr_all <- corr_list %>%
reduce(full_join, by='correlation') %>%
rename("5e-8"=sum.y.y, "1e-5"=sum.x.x, "0.05"=sum.x, "1"=sum.y) %>%
gather(threshold, weight, 2:5) %>%
mutate(threshold = factor(threshold, levels=c("5e-8", "1e-5", "0.05", "1")))
corr_all$correlation <- factor(corr_all$correlation,
levels = c('negative', 'uncorrelated', 'partial,\npositive', 'perfect'))
mag_list <- list(`0.05_mag`, `1_mag`,`1e-05_mag`,`5e-08_mag`)
mag_all <- mag_list %>%
reduce(full_join, by='magnitude') %>%
rename("5e-8"=sum.y.y, "1e-5"=sum.x.x, "0.05"=sum.x, "1"=sum.y) %>%
gather(threshold, weight, 2:5) %>%
mutate(threshold = factor(threshold, levels=c("5e-8", "1e-5", "0.05", "1")))
# PLOT
# pdf 3x4
colors <- c("#d1b724", "#563f61", "#b0464f", "#2b62d9")
pdf(file=paste0(pheno,"_corr_same.pdf"), width=4, height=3)
corr_plot <-
ggplot(corr_all, aes(x=threshold, y=weight*100, fill=correlation)) +
geom_bar(position="stack", stat="identity") +
theme_classic() +
scale_y_continuous(expand=c(0,0)) +
labs(title=title, x="P-value Threshold", y="Weight", fill="Correlation") +
scale_fill_manual(values = colors) +
theme(axis.title=element_text(size=11), axis.text=element_text(size=9))
print(corr_plot)
dev.off()
colors <- c("#d67629", "#829ed9", "#207335")
pdf(file=paste0(pheno,"_mag_same.pdf"), width=4, height=3)
mag_plot <-
ggplot(mag_all, aes(x=threshold, y=weight*100, fill=magnitude)) +
geom_bar(position="stack", stat="identity") +
theme_classic() +
scale_y_continuous(expand=c(0,0)) +
labs(title=title, x="P-value Threshold", y="Weight", fill="Magnitude") +
scale_fill_manual(values = colors) +
theme(axis.title=element_text(size=11), axis.text=element_text(size=9))
print(mag_plot)
dev.off()
colnames(all_null) <- c("pval", "Height","BMI","Waist:hip (bmi adjusted)","Testosterone")
all_null <- gather(all_null, key=Phenotype, value=Weight, 2:5)
all_null
# NO EFFECT PLOT
all_null$pval <- factor(all_null$pval, levels = c("5e-08", "1e-05", "0.05", "1"))
write.table(all_null, file="noeffect_weight_same.text",sep="\t",row.names = F, quote=F)
colors <- c("#d1b724", "#563f61", "#b0464f", "#2b62d9")
ggplot(all_null, aes(x=pval, y=Weight, group=Phenotype, color=Phenotype)) +
geom_point() +
geom_line() +
labs(x="P-value Threshold") +
scale_color_manual(values = colors) +
theme_classic() +
theme(axis.title=element_text(size=10), axis.text=element_text(size=9))
require("dplyr")
require("tidyr")
require("reshape2")
require("matrixStats")
require("ggplot2")
require("ggsci")
require("ggpubr")
require("gridExtra")
# get covariance matrice names
pheno <- "height"
setwd("~/Research/GWAS-frontera/OLD/GWAS_Results_OLD/height")
df_names <- read.csv(paste0(pheno,"mixprop_100_all.txt"), sep="\t")
### simulation
setwd("~/Research/GWAS-frontera/mash/simulation/actual")
# get simulation mixture weight dataframe
get_df <- function(snps,h,e_ratio) {
df <- read.csv(paste0(snps,"_",h,"_",e_ratio,".txt"), sep="\t")
df <- data.frame(cbind(df_names$mix_0, df$x))   # combine names with dataframe
colnames(df) <- c("Name", "Mean")
df_values <- df
# split matrice names
df_values <- df_values %>%
separate(Name, c("sex","correlation","effect"), sep="[_]", fill="right") %>%
mutate(effect = paste0(sex, effect))
return(df_values)
}
mix <- df_names$mix_0
mix <- df_names$mix_0; remove(df_names)
### simulation
setwd("~/Research/GWAS-frontera/mash/simulation/actual")
# get simulation mixture weight dataframe
get_df <- function(snps,h,e_ratio) {
df <- read.csv(paste0(snps,"_",h,"_",e_ratio,".txt"), sep="\t")
df <- data.frame(cbind(0, df$x))   # combine names with dataframe
colnames(df) <- c("Name", "Mean")
df_values <- df
# split matrice names
df_values <- df_values %>%
separate(Name, c("sex","correlation","effect"), sep="[_]", fill="right") %>%
mutate(effect = paste0(sex, effect))
return(df_values)
}
# order magnitude into factors, order by correlation and magnitude
prepare_df <- function(df) {
df$effect <- factor(df$effect, levels = c('f1','f3', 'f2', 'f1.5','equal1','m1.5','m2','m3','m1'))
df <- df %>% mutate_at(1, as.numeric) %>%
arrange(correlation, effect)
return(df)
}
##################################
# split between null and values
#snp_list <- c(100,1000,10000)
snp <- "100"
#h_list <- c("0.05","0.1","0.5")
h <- "0.5"
#e_ratio <- "1"
e_ratio_list <- c("1","1.5","5")
#for (snp in snp_list) {
#for (h in h_list) {
for (e_ratio in e_ratio_list) {
df_values <- get_df(snp, h, e_ratio)
ave <- prepare_df(df_values[2:nrow(df_values),c(2,3,4)])
null <- prepare_df(df_values[1,c(2,3,4)])
null$Mean <- as.numeric(null$Mean) ; ave$Mean <- as.numeric(ave$Mean)
#if (snp == snp_list[1]) {
#if (h == h_list[1]) {
if (e_ratio == e_ratio_list[1]) {
df_ave <- ave ; df_null <- null
} else {
df_ave <- cbind(df_ave, ave$Mean)
df_null <- rbind(df_null, null)
}
}
# rename dataframe columns
#colnames(df_ave) <- c('correlation','effect',sprintf("snps_%s",snp_list))
#colnames(df_ave) <- c('correlation','effect',sprintf("h2_%s",h_list))
colnames(df_ave) <- c('correlation','effect',sprintf("E_ratio_%s",e_ratio_list))
# filter out weights that are 0 throughout snp numbers
df_ave <- df_ave %>%
#  filter(snps_100+snps_1000+snps_10000 !=0) %>%
melt(id.vars=c('correlation','effect'))
#df_null$parameter <- snp_list
#df_null$parameter <- h_list
df_null$parameter <- e_ratio_list
big <- ggplot(df_ave, aes(x= effect, y= correlation, fill= value)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(value,3)), color= "white", size= 4) +
scale_y_continuous(breaks=seq(-1,1,0.25)) +
theme_pubclean() +
theme(axis.text=element_text(size=12), legend.position = "none",
plot.title = element_text(size=16), axis.title = element_text(size=14)) +
labs(title="Weights of Hypothesis Matrices", x="Magnitude", y = "Correlation") +
scale_fill_material("blue-grey") +
facet_wrap(~variable,ncol=3)
small <- ggplot(df_null, aes(x= 0, y= 0, fill= Mean)) +
geom_tile(color= "white", lwd= 1.5, linetype= 1) +
geom_text(aes(label=round(Mean,3)), color= "white", size= 4) +
scale_y_continuous(expand=c(0,0)) +
labs(title="Weight of No Effect Matrice") +
theme_pubclean() +
theme(axis.text=element_blank(), axis.title=element_blank(), legend.position = "none",
axis.ticks = element_blank(), plot.title = element_text(size=10)) +
scale_fill_material("blue-grey") +
facet_wrap(~parameter, ncol=3) +
labs(caption= paste0("# causal SNPs = ",snp,"\n",
"heritability = ", h, "\n"
#, "Environmental Variance Ratio = ",e_ratio
))
lay <- rbind( c(1,1,1,1), c(1,1,1,1), c(1,1,1,1), c(3,3,3,3))
p <- gridExtra::grid.arrange(big, small, ncol=1, layout_matrix=lay)
